{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/TourScreens/TourHomeScreen.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport firebase from \"firebase\";\nimport touron from \"../../api/touron\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport { Surface } from \"react-native-paper\";\n\nvar TourHomeScreen = function TourHomeScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(AuthContext),\n      isLoggedIn = _useContext.isLoggedIn,\n      user = _useContext.user,\n      tours = _useContext.tours;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tour = _useState2[0],\n      setTour = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      step = _useState6[0],\n      setStep = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tourLoaded = _useState8[0],\n      settourLoaded = _useState8[1];\n\n  var nextStep = function nextStep() {\n    setIdealType(\"\");\n    setTourType(\"\");\n    setTourCategory(\"\");\n    setStep(step + 1);\n  };\n\n  var cancel = function cancel() {\n    setIdealType(\"\");\n    setTourType(\"\");\n    setTourCategory(\"\");\n    setStep(step - 1);\n    setSelected([]);\n  };\n\n  var prevStep = function prevStep() {\n    setLoader(true);\n    setStep(step - 1);\n    setTimeout(function () {\n      setLoader(false);\n    }, 2000);\n  };\n\n  var getSavedTours = function getSavedTours() {\n    var sT = [];\n    var sTNames = [];\n\n    if (isLoggedIn) {\n      firebase.database().ref(\"saved-tours/\" + user.uid).on(\"value\", function (data) {\n        if (data) {\n          data.forEach(function (c) {\n            sT.push(c.val());\n            sTNames.push(c.val().tourName);\n          });\n        }\n      });\n      return [sT, sTNames];\n    } else {\n      return [sT, sTNames];\n    }\n  };\n\n  var _getSavedTours = getSavedTours(),\n      _getSavedTours2 = _slicedToArray(_getSavedTours, 2),\n      sT = _getSavedTours2[0],\n      sTNames = _getSavedTours2[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setErrorMessage = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loader = _useState12[0],\n      setLoader = _useState12[1];\n\n  var _useState13 = useState(sTNames),\n      _useState14 = _slicedToArray(_useState13, 2),\n      savedTours = _useState14[0],\n      setSavedTours = _useState14[1];\n\n  var _useState15 = useState(sT),\n      _useState16 = _slicedToArray(_useState15, 2),\n      savedToursDetails = _useState16[0],\n      setSavedToursDetails = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      tourName = _useState18[0],\n      setTourName = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      idealType = _useState20[0],\n      setIdealType = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      tourType = _useState22[0],\n      setTourType = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      tourCategory = _useState24[0],\n      setTourCategory = _useState24[1];\n\n  var _useState25 = useState(1),\n      _useState26 = _slicedToArray(_useState25, 2),\n      page = _useState26[0],\n      setPage = _useState26[1];\n\n  var _useState27 = useState(6),\n      _useState28 = _slicedToArray(_useState27, 2),\n      pageSize = _useState28[0],\n      setpageSize = _useState28[1];\n\n  console.log(page, pageSize, \"lp\");\n  var indexValue = 20;\n\n  var showLoader = function showLoader() {\n    setTimeout(function () {\n      setLoader(false);\n    }, 2000);\n  };\n\n  var search = function search() {\n    if (tour.length > 0) {\n      var sort = tour.sort(function (a, b) {\n        return a < b;\n      });\n      var d = tour.filter(function (c) {\n        return c.tourName.trim().toUpperCase().includes(tourName.trim().toUpperCase());\n      });\n      return d;\n    }\n  };\n\n  console.log(search(), \"search\");\n  useEffect(function () {\n    if (isLoggedIn) {\n      if (savedToursDetails.length > 0) {\n        var userID = firebase.auth().currentUser.uid;\n        firebase.database().ref(\"saved-tours/\" + userID).set(savedToursDetails).then(function (data) {\n          return console.log(data);\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, [tour, savedToursDetails, indexValue]);\n\n  var getTour = function getTour() {\n    var cityname, tourResponse, _tourResponse, idealTypeTours, tourTypeTours, tourCategoryTours, _tourResponse2, _tourResponse3, _tourResponse4;\n\n    return _regeneratorRuntime.async(function getTour$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(route.params.name, \"kk\");\n\n            if (!route.params.name) {\n              _context.next = 18;\n              break;\n            }\n\n            cityname = route.params.name;\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(touron.get(\"/tour/cityname/\" + cityname));\n\n          case 6:\n            tourResponse = _context.sent;\n            console.log(tourResponse.data, \"lpllplpll\");\n            console.log(tourResponse.data.length, \"length\");\n\n            if (tourResponse.data.length === 0) {\n              setTour([]);\n            }\n\n            setTour(tourResponse.data);\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](3);\n            setErrorMessage(\"Something went wrong\");\n\n          case 16:\n            _context.next = 67;\n            break;\n\n          case 18:\n            _context.prev = 18;\n\n            if (!(idealType === \"\" && tourCategory === \"\" && tourType === \"\")) {\n              _context.next = 34;\n              break;\n            }\n\n            settourLoaded(true);\n            _context.prev = 21;\n            _context.next = 24;\n            return _regeneratorRuntime.awrap(touron.get(\"/tour?page=1&pageSize=\" + pageSize));\n\n          case 24:\n            _tourResponse = _context.sent;\n            setTour(_tourResponse.data);\n            settourLoaded(false);\n            _context.next = 32;\n            break;\n\n          case 29:\n            _context.prev = 29;\n            _context.t1 = _context[\"catch\"](21);\n            console.log(_context.t1, \"err\");\n\n          case 32:\n            _context.next = 62;\n            break;\n\n          case 34:\n            idealTypeTours = [];\n            tourTypeTours = [];\n            tourCategoryTours = [];\n\n            if (!(idealType != \"\")) {\n              _context.next = 45;\n              break;\n            }\n\n            setLoader(true);\n            _context.next = 41;\n            return _regeneratorRuntime.awrap(touron.get(\"/tour/idealtype/\" + idealType));\n\n          case 41:\n            _tourResponse2 = _context.sent;\n            idealTypeTours.push(_tourResponse2.data);\n            setTour(_tourResponse2.data);\n            setLoader(false);\n\n          case 45:\n            if (!(tourType != \"\")) {\n              _context.next = 53;\n              break;\n            }\n\n            setLoader(true);\n            _context.next = 49;\n            return _regeneratorRuntime.awrap(touron.get(\"/tour/tourtype/\" + tourType));\n\n          case 49:\n            _tourResponse3 = _context.sent;\n            tourTypeTours.push(_tourResponse3.data);\n            setTour(_tourResponse3.data);\n            setLoader(false);\n\n          case 53:\n            if (!(tourCategory != \"\")) {\n              _context.next = 62;\n              break;\n            }\n\n            setLoader(true);\n            _context.next = 57;\n            return _regeneratorRuntime.awrap(touron.get(\"/tour/tourcategory/\" + tourCategory));\n\n          case 57:\n            _tourResponse4 = _context.sent;\n            console.log(_tourResponse4.data, \"lpllplpll\");\n            tourCategoryTours.push(_tourResponse4.data);\n            setTour(_tourResponse4.data);\n            setLoader(false);\n\n          case 62:\n            _context.next = 67;\n            break;\n\n          case 64:\n            _context.prev = 64;\n            _context.t2 = _context[\"catch\"](18);\n            setErrorMessage(\"Something went wrong\");\n\n          case 67:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 13], [18, 64], [21, 29]], Promise);\n  };\n\n  useEffect(function () {\n    showLoader();\n    var mounted = true;\n\n    if (mounted) {\n      getTour();\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, [idealType, tourCategory, tourType]);\n\n  var render = function render(step) {\n    var idealFor = [{\n      name: \"Family\"\n    }, {\n      name: \"Family and kids\"\n    }, {\n      name: \"Solo\"\n    }, {\n      name: \"Mature Couple\"\n    }, {\n      name: \"Young Couple\"\n    }];\n    var tourType = [{\n      name: \"Full Day Tour\"\n    }, {\n      name: \"Half Day Tour\"\n    }, {\n      name: \"Night Tour\"\n    }];\n    var tourCategory = [{\n      name: \"Activities\"\n    }, {\n      name: \"Hop On & Off\"\n    }, {\n      name: \"Attraction\"\n    }, {\n      name: \"Learning\"\n    }];\n\n    switch (step) {\n      case 0:\n        return React.createElement(ScrollView, {\n          style: ([styles.container], {\n            backgroundColor: tour.length === 0 ? \"white\" : \"transparent\",\n            flex: 1\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 11\n          }\n        }, loader ? React.createElement(ActivityIndicator, {\n          size: \"large\",\n          style: {\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }\n        }) : React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: {\n            height: HEIGHT / 8,\n            padding: 10,\n            marginTop: Platform.OS === \"ios\" ? 50 : 40,\n            width: WIDTH,\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Main\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 19\n          }\n        }, React.createElement(Feather, {\n          name: \"arrow-left\",\n          style: {\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 21\n          }\n        })), React.createElement(View, {\n          style: styles.background,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 19\n          }\n        }, React.createElement(Feather, {\n          name: \"search\",\n          style: styles.iconStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 21\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputStyle,\n          placeholder: \"Search\",\n          onChangeText: function onChangeText(value) {\n            return setTourName(value);\n          },\n          onSubmitEditing: search,\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          keyboardType: \"email-address\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 21\n          }\n        }))), tour.length === 0 ? React.createElement(View, {\n          style: {\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 21\n          }\n        }, React.createElement(Image, {\n          style: {\n            width: WIDTH * 0.9,\n            height: WIDTH * 0.9\n          },\n          source: require(\"../../../assets/oops.jpg\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 23\n          }\n        })), React.createElement(Text, {\n          style: {\n            fontFamily: \"Avenir\",\n            fontSize: 23\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 21\n          }\n        }, \"No Tours Found for \", route.params.name)) : React.createElement(FlatList, {\n          showsVerticalScrollIndicator: false,\n          keyExtractor: function keyExtractor(c) {\n            return c._id;\n          },\n          data: search(),\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item,\n                index = _ref2.index;\n            return React.createElement(React.Fragment, null, React.createElement(View, {\n              style: styles.imageContainer,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 27\n              }\n            }, React.createElement(View, {\n              style: styles.shadow,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 29\n              }\n            }, React.createElement(TouchableOpacity, {\n              onPress: function onPress() {\n                navigation.navigate(\"TourInner\", {\n                  item: item\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 31\n              }\n            }, React.createElement(Image, {\n              style: styles.image,\n              source: {\n                uri: item.imageUrl\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 33\n              }\n            })), React.createElement(View, {\n              style: {\n                flexDirection: \"row\",\n                position: \"absolute\",\n                width: WIDTH * 0.9,\n                justifyContent: \"space-between\",\n                alignItems: \"center\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 31\n              }\n            }, React.createElement(LinearGradient, {\n              colors: [\"#FFA26E\", \"#E36D5D\"],\n              style: {\n                marginHorizontals: 15,\n                marginTop: 10,\n                padding: 2,\n                borderRadius: 5,\n                left: 10\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 33\n              }\n            }, React.createElement(View, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 35\n              }\n            }, React.createElement(Text, {\n              style: styles.cityname,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 37\n              }\n            }, item.cityName)))), React.createElement(View, {\n              style: styles.tourDetails,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 31\n              }\n            }, React.createElement(View, {\n              style: {\n                flexDirection: \"row\",\n                justifyContent: \"space-between\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 33\n              }\n            }, React.createElement(Text, {\n              style: {\n                color: \"#8395A7\",\n                fontSize: 15\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 35\n              }\n            }, item.tourCategory.join(\",\")), React.createElement(View, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 35\n              }\n            }, savedTours.includes(item.tourName) ? React.createElement(TouchableOpacity, {\n              onPress: function onPress() {\n                var filterData = savedTours.filter(function (c) {\n                  return c != item.tourName;\n                });\n                setSavedTours(filterData);\n                var filterDetails = savedToursDetails.filter(function (c) {\n                  return c.tourName !== item.tourName;\n                });\n                setSavedToursDetails(filterDetails);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 39\n              }\n            }, React.createElement(AntDesign, {\n              style: {\n                marginRight: 0\n              },\n              name: \"heart\",\n              size: 24,\n              color: \"#FF4500\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 41\n              }\n            })) : React.createElement(TouchableOpacity, {\n              onPress: function onPress() {\n                if (isLoggedIn) {\n                  setSavedTours([].concat(_toConsumableArray(savedTours), [item.tourName]));\n                  setSavedToursDetails([].concat(_toConsumableArray(savedToursDetails), [item]));\n                } else {\n                  navigation.navigate(\"SignUpScreen\");\n                }\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 39\n              }\n            }, React.createElement(Image, {\n              style: {\n                height: 35,\n                width: 35\n              },\n              source: require(\"../../../assets/heart.png\"),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 41\n              }\n            })))), React.createElement(Text, {\n              style: {\n                fontSize: 18,\n                fontWeight: \"bold\",\n                marginTop: 2\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 33\n              }\n            }, item.tourName), React.createElement(Text, {\n              style: {\n                color: \"#8395A7\",\n                fontSize: 15,\n                marginVertical: 5\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 33\n              }\n            }, item.tourType), React.createElement(View, {\n              style: {\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 33\n              }\n            }, React.createElement(View, {\n              style: {\n                padding: 8,\n                borderWidth: 1,\n                borderColor: \"#333\",\n                borderRadius: 14\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 35\n              }\n            }, item.tourCost.adult == 15000 && item.tourCost.adult >= 10000 ? React.createElement(Text, {\n              style: {\n                fontSize: 13\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 39\n              }\n            }, \"\\u20B9\\u20B9\\u20B9\\u20B9 - High\") : item.tourCost.adult < 10000 && item.tourCost.adult >= 5000 ? React.createElement(Text, {\n              style: {\n                fontSize: 13\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 39\n              }\n            }, \"\\u20B9\\u20B9\\u20B9 - Medium\") : item.tourCost.adult > 2500 && item.tourCost.adult < 500205 ? React.createElement(Text, {\n              style: {\n                fontSize: 13\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 39\n              }\n            }, \"\\u20B9\\u20B9 - Low\") : React.createElement(Text, {\n              style: {\n                fontSize: 13\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 39\n              }\n            }, \"\\u20B9 - Very Low\")), React.createElement(View, {\n              style: {\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 35\n              }\n            }, React.createElement(Image, {\n              style: {\n                height: 25,\n                width: 25,\n                marginRight: 4\n              },\n              source: require(\"../../../assets/Star.png\"),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 37\n              }\n            }), React.createElement(Text, {\n              style: {\n                fontSize: 18\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 37\n              }\n            }, item.ratings, \"/5\")))))));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 19\n          }\n        }), loader ? null : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            setpageSize(pageSize + 6);\n            getTour();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          style: {\n            margin: 10,\n            width: WIDTH,\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 21\n          }\n        }, tourLoaded ? React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            settourLoaded(false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: \"#FFA26E\",\n            paddingHorizontal: 40,\n            paddingVertical: 10,\n            borderRadius: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 27\n          }\n        }, React.createElement(ActivityIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 29\n          }\n        }))) : React.createElement(Text, {\n          style: {\n            textAlign: \"center\",\n            backgroundColor: \"#FFA26E\",\n            paddingHorizontal: 20,\n            paddingVertical: 10,\n            borderRadius: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 25\n          }\n        }, \"Load More ...\")))));\n\n      case 1:\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: \"white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: \"white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }\n        }, React.createElement(StatusBar, {\n          barStyle: \"light-content\",\n          backgroundColor: \"#67e6dc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }\n        }), React.createElement(View, {\n          style: {\n            width: WIDTH,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: HEIGHT / 10,\n            backgroundColor: \"#67e6dc\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 17\n          }\n        }, \"Filter Tours\")), React.createElement(ScrollView, {\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          style: {\n            flexDirection: \"row\",\n            marginTop: 50\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }\n        }, idealFor.map(function (m, index) {\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 21\n            }\n          }, selected.includes(m.name) ? React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              var city = selected.filter(function (c) {\n                return c !== m.name;\n              });\n              setSelected(city);\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 25\n            }\n          }, React.createElement(LinearGradient, {\n            colors: [\"#5ED2A0\", \"#339CB1\"],\n            style: {\n              margin: 10,\n              borderRadius: 25,\n              padding: 15\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontFamily: \"Avenir\",\n              borderColor: \"#95afc0\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 29\n            }\n          }, m.name))) : React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              setSelected([].concat(_toConsumableArray(selected), [m.name]));\n              setIdealType(m.name);\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontFamily: \"Avenir\",\n              borderColor: \"#95afc0\",\n              borderRadius: 25,\n              padding: 15,\n              borderWidth: 1,\n              margin: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 27\n            }\n          }, m.name)));\n        })), React.createElement(ScrollView, {\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          style: {\n            flexDirection: \"row\",\n            marginTop: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }\n        }, tourType.map(function (m, index) {\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 21\n            }\n          }, selected.includes(m.name) ? React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              var city = selected.filter(function (c) {\n                return c !== m.name;\n              });\n              setSelected(city);\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 25\n            }\n          }, React.createElement(LinearGradient, {\n            colors: [\"#fcb045\", \"#339CB1\"],\n            style: {\n              margin: 10,\n              borderRadius: 25,\n              padding: 15\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontFamily: \"Avenir\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 29\n            }\n          }, m.name))) : React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              setSelected([].concat(_toConsumableArray(selected), [m.name]));\n              setTourType(m.name);\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontFamily: \"Avenir\",\n              borderColor: \"#95afc0\",\n              borderRadius: 25,\n              padding: 15,\n              borderWidth: 1,\n              margin: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 27\n            }\n          }, m.name)));\n        })), React.createElement(ScrollView, {\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          style: {\n            flexDirection: \"row\",\n            marginTop: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 15\n          }\n        }, tourCategory.map(function (m, index) {\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 21\n            }\n          }, selected.includes(m.name) ? React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              var city = selected.filter(function (c) {\n                return c !== m.name;\n              });\n              setSelected(city);\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 25\n            }\n          }, React.createElement(LinearGradient, {\n            colors: [\"#00d2ff\", \"#928dab\"],\n            style: {\n              margin: 10,\n              borderRadius: 25,\n              padding: 15,\n              opacity: 0.8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontFamily: \"Avenir\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 29\n            }\n          }, m.name))) : React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              setSelected([].concat(_toConsumableArray(selected), [m.name]));\n              setTourCategory(m.name);\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontFamily: \"Avenir\",\n              borderColor: \"#95afc0\",\n              borderRadius: 25,\n              padding: 15,\n              borderWidth: 1,\n              margin: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 27\n            }\n          }, m.name)));\n        })), React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            marginHorizontal: 20,\n            marginVertical: 30,\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 15\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return cancel();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 17\n          }\n        }, React.createElement(Surface, {\n          style: {\n            borderRadius: 50,\n            elevation: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 19\n          }\n        }, React.createElement(Feather, {\n          name: \"x\",\n          style: {\n            fontSize: 35,\n            padding: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 21\n          }\n        }))), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return prevStep();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 17\n          }\n        }, React.createElement(Surface, {\n          style: {\n            borderRadius: 50,\n            elevation: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 23,\n            paddingHorizontal: 13,\n            paddingVertical: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 21\n          }\n        }, \"\\u2714\\uFE0F\"))))));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, render(step));\n};\n\nexport default TourHomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  imageContainer: {\n    padding: 5,\n    position: \"relative\",\n    paddingTop: 20\n  },\n  image: {\n    height: Dimensions.get(\"window\").height / 4.5,\n    width: WIDTH * 0.9,\n    borderRadius: 20\n  },\n  shadow: {\n    width: WIDTH * 0.9,\n    backgroundColor: \"#fff\",\n    borderRadius: 18,\n    marginHorizontal: 10\n  },\n  cityname: {\n    padding: 5,\n    fontSize: 12,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    zIndex: 1,\n    left: 0\n  },\n  view: {\n    width: 100,\n    height: 100,\n    marginTop: 20,\n    backgroundColor: \"red\"\n  },\n  tourDetails: {\n    margin: 15\n  },\n  background: {\n    backgroundColor: \"#fff\",\n    height: HEIGHT / 15,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    width: WIDTH * 0.9,\n    marginVertical: 20\n  },\n  inputStyle: {\n    fontSize: 18,\n    flex: 1\n  },\n  iconStyle: {\n    fontSize: 28,\n    alignSelf: \"center\",\n    marginHorizontal: 15\n  }\n});","map":{"version":3,"sources":["/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/TourScreens/TourHomeScreen.js"],"names":["React","useState","useEffect","useContext","AuthContext","firebase","touron","LinearGradient","WIDTH","Dimensions","get","width","HEIGHT","height","AntDesign","Feather","Surface","TourHomeScreen","navigation","route","isLoggedIn","user","tours","tour","setTour","selected","setSelected","step","setStep","tourLoaded","settourLoaded","nextStep","setIdealType","setTourType","setTourCategory","cancel","prevStep","setLoader","setTimeout","getSavedTours","sT","sTNames","database","ref","uid","on","data","forEach","c","push","val","tourName","error","setErrorMessage","loader","savedTours","setSavedTours","savedToursDetails","setSavedToursDetails","setTourName","idealType","tourType","tourCategory","page","setPage","pageSize","setpageSize","console","log","indexValue","showLoader","search","length","sort","a","b","d","filter","trim","toUpperCase","includes","userID","auth","currentUser","set","then","catch","err","getTour","params","name","cityname","tourResponse","idealTypeTours","tourTypeTours","tourCategoryTours","mounted","render","idealFor","styles","container","backgroundColor","flex","alignItems","justifyContent","padding","marginTop","Platform","OS","navigate","fontSize","background","iconStyle","inputStyle","value","require","fontFamily","_id","item","index","imageContainer","shadow","image","uri","imageUrl","flexDirection","position","marginHorizontals","borderRadius","left","cityName","tourDetails","color","join","filterData","filterDetails","marginRight","fontWeight","marginVertical","borderWidth","borderColor","tourCost","adult","ratings","margin","paddingHorizontal","paddingVertical","textAlign","map","m","city","opacity","marginHorizontal","elevation","StyleSheet","create","paddingTop","fontStyle","zIndex","view","alignSelf"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;;;;;;;;;;;;;AAgBA,SAASC,WAAT;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,MAAP;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,IAAMC,KAAK,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAvC;AACA,IAAMC,MAAM,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAAxC;AAEA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,oBAAnC;AAEA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA2B;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,oBACZhB,UAAU,CAACC,WAAD,CADE;AAAA,MACxCgB,UADwC,eACxCA,UADwC;AAAA,MAC5BC,IAD4B,eAC5BA,IAD4B;AAAA,MACtBC,KADsB,eACtBA,KADsB;;AAAA,kBAExBrB,QAAQ,CAAC,EAAD,CAFgB;AAAA;AAAA,MAEzCsB,IAFyC;AAAA,MAEnCC,OAFmC;;AAAA,mBAKhBvB,QAAQ,CAAC,EAAD,CALQ;AAAA;AAAA,MAKzCwB,QALyC;AAAA,MAK/BC,WAL+B;;AAAA,mBAOxBzB,QAAQ,CAAC,CAAD,CAPgB;AAAA;AAAA,MAOzC0B,IAPyC;AAAA,MAOnCC,OAPmC;;AAAA,mBASZ3B,QAAQ,CAAC,KAAD,CATI;AAAA;AAAA,MASzC4B,UATyC;AAAA,MAS7BC,aAT6B;;AAWhD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBC,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAN,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,GALD;;AAMA,MAAMQ,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBH,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAN,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAD,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAND;;AAOA,MAAMU,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBC,IAAAA,SAAS,CAAC,IAAD,CAAT;AAEAT,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAW,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAFS,EAEP,IAFO,CAAV;AAKD,GATD;;AAWA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIC,EAAE,GAAG,EAAT;AACA,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAIrB,UAAJ,EAAgB;AACdf,MAAAA,QAAQ,CACLqC,QADH,GAEGC,GAFH,kBAEsBtB,IAAI,CAACuB,GAF3B,EAGGC,EAHH,CAGM,OAHN,EAGe,UAACC,IAAD,EAAU;AACrB,YAAIA,IAAJ,EAAU;AACRA,UAAAA,IAAI,CAACC,OAAL,CAAa,UAACC,CAAD,EAAO;AAClBR,YAAAA,EAAE,CAACS,IAAH,CAAQD,CAAC,CAACE,GAAF,EAAR;AACAT,YAAAA,OAAO,CAACQ,IAAR,CAAaD,CAAC,CAACE,GAAF,GAAQC,QAArB;AACD,WAHD;AAID;AACF,OAVH;AAYA,aAAO,CAACX,EAAD,EAAKC,OAAL,CAAP;AACD,KAdD,MAcO;AACL,aAAO,CAACD,EAAD,EAAKC,OAAL,CAAP;AACD;AACF,GApBD;;AAnCgD,uBAyD1BF,aAAa,EAzDa;AAAA;AAAA,MAyDzCC,EAzDyC;AAAA,MAyDrCC,OAzDqC;;AAAA,mBA0DfxC,QAAQ,EA1DO;AAAA;AAAA,MA0DzCmD,KA1DyC;AAAA,MA0DlCC,eA1DkC;;AAAA,oBA2DpBpD,QAAQ,CAAC,KAAD,CA3DY;AAAA;AAAA,MA2DzCqD,MA3DyC;AAAA,MA2DjCjB,SA3DiC;;AAAA,oBA4DZpC,QAAQ,CAACwC,OAAD,CA5DI;AAAA;AAAA,MA4DzCc,UA5DyC;AAAA,MA4D7BC,aA5D6B;;AAAA,oBA6DEvD,QAAQ,CAACuC,EAAD,CA7DV;AAAA;AAAA,MA6DzCiB,iBA7DyC;AAAA,MA6DtBC,oBA7DsB;;AAAA,oBA8DhBzD,QAAQ,CAAC,EAAD,CA9DQ;AAAA;AAAA,MA8DzCkD,QA9DyC;AAAA,MA8D/BQ,WA9D+B;;AAAA,oBAgEd1D,QAAQ,CAAC,EAAD,CAhEM;AAAA;AAAA,MAgEzC2D,SAhEyC;AAAA,MAgE9B5B,YAhE8B;;AAAA,oBAiEhB/B,QAAQ,CAAC,EAAD,CAjEQ;AAAA;AAAA,MAiEzC4D,QAjEyC;AAAA,MAiE/B5B,WAjE+B;;AAAA,oBAkERhC,QAAQ,CAAC,EAAD,CAlEA;AAAA;AAAA,MAkEzC6D,YAlEyC;AAAA,MAkE3B5B,eAlE2B;;AAAA,oBAmExBjC,QAAQ,CAAC,CAAD,CAnEgB;AAAA;AAAA,MAmEzC8D,IAnEyC;AAAA,MAmEnCC,OAnEmC;;AAAA,oBAoEhB/D,QAAQ,CAAC,CAAD,CApEQ;AAAA;AAAA,MAoEzCgE,QApEyC;AAAA,MAoE/BC,WApE+B;;AAqEhDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkBE,QAAlB,EAA4B,IAA5B;AAGA,MAAII,UAAU,GAAG,EAAjB;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBhC,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD;;AAMA,MAAMkC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,QAAIhD,IAAI,CAACiD,MAAL,GAAc,CAAlB,EAAqB;AACnB,UAAMC,IAAI,GAAGlD,IAAI,CAACkD,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,CAAC,GAAGC,CAAd;AAAA,OAAV,CAAb;AAGA,UAAMC,CAAC,GAAGrD,IAAI,CAACsD,MAAL,CAAY,UAAC7B,CAAD,EAAO;AAE3B,eAAOA,CAAC,CAACG,QAAF,CACJ2B,IADI,GAEJC,WAFI,GAGJC,QAHI,CAGK7B,QAAQ,CAAC2B,IAAT,GAAgBC,WAAhB,EAHL,CAAP;AAID,OANS,CAAV;AAOA,aAAOH,CAAP;AACD;AACF,GAdD;;AAgBAT,EAAAA,OAAO,CAACC,GAAR,CAAYG,MAAM,EAAlB,EAAsB,QAAtB;AACArE,EAAAA,SAAS,CAAC,YAAM;AAEd,QAAIkB,UAAJ,EAAgB;AACd,UAAIqC,iBAAiB,CAACe,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,YAAMS,MAAM,GAAG5E,QAAQ,CAAC6E,IAAT,GAAgBC,WAAhB,CAA4BvC,GAA3C;AACAvC,QAAAA,QAAQ,CACLqC,QADH,GAEGC,GAFH,kBAEsBsC,MAFtB,EAGGG,GAHH,CAGO3B,iBAHP,EAIG4B,IAJH,CAIQ,UAACvC,IAAD;AAAA,iBAAUqB,OAAO,CAACC,GAAR,CAAYtB,IAAZ,CAAV;AAAA,SAJR,EAKGwC,KALH,CAKS,UAACC,GAAD;AAAA,iBAASpB,OAAO,CAACC,GAAR,CAAYmB,GAAZ,CAAT;AAAA,SALT;AAMD;AACF;AACF,GAbQ,EAaN,CAAChE,IAAD,EAAOkC,iBAAP,EAA0BY,UAA1B,CAbM,CAAT;;AAeA,MAAMmB,OAAO,GAAG,SAAVA,OAAU;AAAA;;AAAA;AAAA;AAAA;AAAA;AACdrB,YAAAA,OAAO,CAACC,GAAR,CAAYjD,KAAK,CAACsE,MAAN,CAAaC,IAAzB,EAA+B,IAA/B;;AADc,iBAEVvE,KAAK,CAACsE,MAAN,CAAaC,IAFH;AAAA;AAAA;AAAA;;AAGNC,YAAAA,QAHM,GAGKxE,KAAK,CAACsE,MAAN,CAAaC,IAHlB;AAAA;AAAA;AAAA,6CAKiBpF,MAAM,CAACI,GAAP,qBAA6BiF,QAA7B,CALjB;;AAAA;AAKJC,YAAAA,YALI;AAMVzB,YAAAA,OAAO,CAACC,GAAR,CAAYwB,YAAY,CAAC9C,IAAzB,EAA+B,WAA/B;AACAqB,YAAAA,OAAO,CAACC,GAAR,CAAYwB,YAAY,CAAC9C,IAAb,CAAkB0B,MAA9B,EAAsC,QAAtC;;AACA,gBAAIoB,YAAY,CAAC9C,IAAb,CAAkB0B,MAAlB,KAA6B,CAAjC,EAAoC;AAClChD,cAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AACDA,YAAAA,OAAO,CAACoE,YAAY,CAAC9C,IAAd,CAAP;AAXU;AAAA;;AAAA;AAAA;AAAA;AAaVO,YAAAA,eAAe,CAAC,sBAAD,CAAf;;AAbU;AAAA;AAAA;;AAAA;AAAA;;AAAA,kBAiBNO,SAAS,KAAK,EAAd,IAAoBE,YAAY,KAAK,EAArC,IAA2CD,QAAQ,KAAK,EAjBlD;AAAA;AAAA;AAAA;;AAkBR/B,YAAAA,aAAa,CAAC,IAAD,CAAb;AAlBQ;AAAA;AAAA,6CAoBqBxB,MAAM,CAACI,GAAP,4BACAuD,QADA,CApBrB;;AAAA;AAoBA2B,YAAAA,aApBA;AAwBNpE,YAAAA,OAAO,CAACoE,aAAY,CAAC9C,IAAd,CAAP;AACAhB,YAAAA,aAAa,CAAC,KAAD,CAAb;AAzBM;AAAA;;AAAA;AAAA;AAAA;AA2BNqC,YAAAA,OAAO,CAACC,GAAR,cAAiB,KAAjB;;AA3BM;AAAA;AAAA;;AAAA;AA8BJyB,YAAAA,cA9BI,GA8Ba,EA9Bb;AA+BJC,YAAAA,aA/BI,GA+BY,EA/BZ;AAgCJC,YAAAA,iBAhCI,GAgCgB,EAhChB;;AAAA,kBAiCJnC,SAAS,IAAI,EAjCT;AAAA;AAAA;AAAA;;AAkCNvB,YAAAA,SAAS,CAAC,IAAD,CAAT;AAlCM;AAAA,6CAoCqB/B,MAAM,CAACI,GAAP,sBACNkD,SADM,CApCrB;;AAAA;AAoCAgC,YAAAA,cApCA;AAwCNC,YAAAA,cAAc,CAAC5C,IAAf,CAAoB2C,cAAY,CAAC9C,IAAjC;AAEAtB,YAAAA,OAAO,CAACoE,cAAY,CAAC9C,IAAd,CAAP;AACAT,YAAAA,SAAS,CAAC,KAAD,CAAT;;AA3CM;AAAA,kBA+CJwB,QAAQ,IAAI,EA/CR;AAAA;AAAA;AAAA;;AAgDNxB,YAAAA,SAAS,CAAC,IAAD,CAAT;AAhDM;AAAA,6CAiDqB/B,MAAM,CAACI,GAAP,qBAA6BmD,QAA7B,CAjDrB;;AAAA;AAiDA+B,YAAAA,cAjDA;AAmDNE,YAAAA,aAAa,CAAC7C,IAAd,CAAmB2C,cAAY,CAAC9C,IAAhC;AACAtB,YAAAA,OAAO,CAACoE,cAAY,CAAC9C,IAAd,CAAP;AACAT,YAAAA,SAAS,CAAC,KAAD,CAAT;;AArDM;AAAA,kBAuDJyB,YAAY,IAAI,EAvDZ;AAAA;AAAA;AAAA;;AAwDNzB,YAAAA,SAAS,CAAC,IAAD,CAAT;AAxDM;AAAA,6CAyDqB/B,MAAM,CAACI,GAAP,yBACHoD,YADG,CAzDrB;;AAAA;AAyDA8B,YAAAA,cAzDA;AA4DNzB,YAAAA,OAAO,CAACC,GAAR,CAAYwB,cAAY,CAAC9C,IAAzB,EAA+B,WAA/B;AACAiD,YAAAA,iBAAiB,CAAC9C,IAAlB,CAAuB2C,cAAY,CAAC9C,IAApC;AACAtB,YAAAA,OAAO,CAACoE,cAAY,CAAC9C,IAAd,CAAP;AACAT,YAAAA,SAAS,CAAC,KAAD,CAAT;;AA/DM;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4EVgB,YAAAA,eAAe,CAAC,sBAAD,CAAf;;AA5EU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAiFAnD,EAAAA,SAAS,CAAC,YAAM;AACdoE,IAAAA,UAAU;AACV,QAAI0B,OAAO,GAAG,IAAd;;AACA,QAAIA,OAAJ,EAAa;AACXR,MAAAA,OAAO;AACR;;AACD,WAAO;AAAA,aAAOQ,OAAO,GAAG,KAAjB;AAAA,KAAP;AACD,GAPQ,EAON,CAACpC,SAAD,EAAYE,YAAZ,EAA0BD,QAA1B,CAPM,CAAT;;AASA,MAAMoC,MAAM,GAAG,SAATA,MAAS,CAACtE,IAAD,EAAU;AACvB,QAAMuE,QAAQ,GAAG,CACf;AACER,MAAAA,IAAI,EAAE;AADR,KADe,EAIf;AACEA,MAAAA,IAAI,EAAE;AADR,KAJe,EAOf;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAPe,EAQf;AAAEA,MAAAA,IAAI,EAAE;AAAR,KARe,EASf;AAAEA,MAAAA,IAAI,EAAE;AAAR,KATe,CAAjB;AAYA,QAAM7B,QAAQ,GAAG,CACf;AACE6B,MAAAA,IAAI,EAAE;AADR,KADe,EAIf;AACEA,MAAAA,IAAI,EAAE;AADR,KAJe,EAOf;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAPe,CAAjB;AASA,QAAM5B,YAAY,GAAG,CACnB;AACE4B,MAAAA,IAAI,EAAE;AADR,KADmB,EAInB;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAJmB,EAKnB;AACEA,MAAAA,IAAI,EAAE;AADR,KALmB,EAQnB;AAAEA,MAAAA,IAAI,EAAE;AAAR,KARmB,CAArB;;AAUA,YAAQ/D,IAAR;AACE,WAAK,CAAL;AACE,eACE,oBAAC,UAAD;AACE,UAAA,KAAK,GACF,CAACwE,MAAM,CAACC,SAAR,GACD;AACEC,YAAAA,eAAe,EAAE9E,IAAI,CAACiD,MAAL,KAAgB,CAAhB,GAAoB,OAApB,GAA8B,aADjD;AAEE8B,YAAAA,IAAI,EAAE;AAFR,WAFG,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASGhD,MAAM,GACL,oBAAC,iBAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,KAAK,EAAE;AACLgD,YAAAA,IAAI,EAAE,CADD;AAELC,YAAAA,UAAU,EAAE,QAFP;AAGLC,YAAAA,cAAc,EAAE;AAHX,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GAUL,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACL3F,YAAAA,MAAM,EAAED,MAAM,GAAG,CADZ;AAGL6F,YAAAA,OAAO,EAAE,EAHJ;AAILC,YAAAA,SAAS,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B,EAJnC;AAKLjG,YAAAA,KAAK,EAAEH,KALF;AAOLgG,YAAAA,cAAc,EAAE;AAPX,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAWE,oBAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAMtF,UAAU,CAAC2F,QAAX,CAAoB,MAApB,CAAN;AAAA,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AACE,UAAA,IAAI,EAAC,YADP;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAXF,EAkBE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEX,MAAM,CAACY,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,IAAI,EAAC,QAAd;AAAuB,UAAA,KAAK,EAAEZ,MAAM,CAACa,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,SAAD;AACE,UAAA,KAAK,EAAEb,MAAM,CAACc,UADhB;AAEE,UAAA,WAAW,EAAC,QAFd;AAGE,UAAA,YAAY,EAAE,sBAACC,KAAD;AAAA,mBAAWvD,WAAW,CAACuD,KAAD,CAAtB;AAAA,WAHhB;AAIE,UAAA,eAAe,EAAE3C,MAJnB;AAKE,UAAA,cAAc,EAAC,MALjB;AAME,UAAA,WAAW,EAAE,KANf;AAOE,UAAA,YAAY,EAAC,eAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CAlBF,CADF,EAiCGhD,IAAI,CAACiD,MAAL,KAAgB,CAAhB,GACC,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AAAE+B,YAAAA,UAAU,EAAE,QAAd;AAAwBC,YAAAA,cAAc,EAAE;AAAxC,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AACE,UAAA,KAAK,EAAE;AAAE7F,YAAAA,KAAK,EAAEH,KAAK,GAAG,GAAjB;AAAsBK,YAAAA,MAAM,EAAEL,KAAK,GAAG;AAAtC,WADT;AAEE,UAAA,MAAM,EAAE2G,OAAO,4BAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAHF,EASE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE,QAAd;AAAwBN,YAAAA,QAAQ,EAAE;AAAlC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACsB3F,KAAK,CAACsE,MAAN,CAAaC,IADnC,CATF,CADD,GAeC,oBAAC,QAAD;AACE,UAAA,4BAA4B,EAAE,KADhC;AAEE,UAAA,YAAY,EAAE,sBAAC1C,CAAD;AAAA,mBAAOA,CAAC,CAACqE,GAAT;AAAA,WAFhB;AAGE,UAAA,IAAI,EAAE9C,MAAM,EAHd;AAIE,UAAA,UAAU,EAAE,2BAAqB;AAAA,gBAAlB+C,IAAkB,SAAlBA,IAAkB;AAAA,gBAAZC,KAAY,SAAZA,KAAY;AAC/B,mBACE,0CACE,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAEpB,MAAM,CAACqB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAErB,MAAM,CAACsB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,gBAAD;AACE,cAAA,OAAO,EAAE,mBAAM;AACbvG,gBAAAA,UAAU,CAAC2F,QAAX,CAAoB,WAApB,EAAiC;AAC/BS,kBAAAA,IAAI,EAAEA;AADyB,iBAAjC;AAGD,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOE,oBAAC,KAAD;AACE,cAAA,KAAK,EAAEnB,MAAM,CAACuB,KADhB;AAEE,cAAA,MAAM,EAAE;AAAEC,gBAAAA,GAAG,EAAEL,IAAI,CAACM;AAAZ,eAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADF,EAaE,oBAAC,IAAD;AACE,cAAA,KAAK,EAAE;AACLC,gBAAAA,aAAa,EAAE,KADV;AAELC,gBAAAA,QAAQ,EAAE,UAFL;AAGLnH,gBAAAA,KAAK,EAAEH,KAAK,GAAG,GAHV;AAILgG,gBAAAA,cAAc,EAAE,eAJX;AAKLD,gBAAAA,UAAU,EAAE;AALP,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eASE,oBAAC,cAAD;AACE,cAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CADV;AAEE,cAAA,KAAK,EAAE;AACLwB,gBAAAA,iBAAiB,EAAE,EADd;AAELrB,gBAAAA,SAAS,EAAE,EAFN;AAGLD,gBAAAA,OAAO,EAAE,CAHJ;AAILuB,gBAAAA,YAAY,EAAE,CAJT;AAKLC,gBAAAA,IAAI,EAAE;AALD,eAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAUE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAE9B,MAAM,CAACR,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACG2B,IAAI,CAACY,QADR,CADF,CAVF,CATF,CAbF,EAuCE,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAE/B,MAAM,CAACgC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,IAAD;AACE,cAAA,KAAK,EAAE;AACLN,gBAAAA,aAAa,EAAE,KADV;AAELrB,gBAAAA,cAAc,EAAE;AAFX,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAME,oBAAC,IAAD;AACE,cAAA,KAAK,EAAE;AAAE4B,gBAAAA,KAAK,EAAE,SAAT;AAAoBtB,gBAAAA,QAAQ,EAAE;AAA9B,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAGGQ,IAAI,CAACxD,YAAL,CAAkBuE,IAAlB,CAAuB,GAAvB,CAHH,CANF,EAWE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACG9E,UAAU,CAACyB,QAAX,CAAoBsC,IAAI,CAACnE,QAAzB,IACC,oBAAC,gBAAD;AACE,cAAA,OAAO,EAAE,mBAAM;AACb,oBAAImF,UAAU,GAAG/E,UAAU,CAACsB,MAAX,CACf,UAAC7B,CAAD,EAAO;AACL,yBAAOA,CAAC,IAAIsE,IAAI,CAACnE,QAAjB;AACD,iBAHc,CAAjB;AAMAK,gBAAAA,aAAa,CAAC8E,UAAD,CAAb;AAEA,oBAAMC,aAAa,GAAG9E,iBAAiB,CAACoB,MAAlB,CACpB,UAAC7B,CAAD,EAAO;AACL,yBACEA,CAAC,CAACG,QAAF,KAAemE,IAAI,CAACnE,QADtB;AAGD,iBALmB,CAAtB;AAQAO,gBAAAA,oBAAoB,CAAC6E,aAAD,CAApB;AACD,eAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAqBE,oBAAC,SAAD;AACE,cAAA,KAAK,EAAE;AAAEC,gBAAAA,WAAW,EAAE;AAAf,eADT;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,IAAI,EAAE,EAHR;AAIE,cAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,CADD,GA8BC,oBAAC,gBAAD;AACE,cAAA,OAAO,EAAE,mBAAM;AACb,oBAAIpH,UAAJ,EAAgB;AACdoC,kBAAAA,aAAa,8BACRD,UADQ,IAEX+D,IAAI,CAACnE,QAFM,GAAb;AAIAO,kBAAAA,oBAAoB,8BACfD,iBADe,IAElB6D,IAFkB,GAApB;AAID,iBATD,MASO;AACLpG,kBAAAA,UAAU,CAAC2F,QAAX,CAAoB,cAApB;AACD;AACF,eAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAgBE,oBAAC,KAAD;AACE,cAAA,KAAK,EAAE;AACLhG,gBAAAA,MAAM,EAAE,EADH;AAGLF,gBAAAA,KAAK,EAAE;AAHF,eADT;AAME,cAAA,MAAM,EAAEwG,OAAO,6BANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,CA/BJ,CAXF,CADF,EAwEE,oBAAC,IAAD;AACE,cAAA,KAAK,EAAE;AACLL,gBAAAA,QAAQ,EAAE,EADL;AAEL2B,gBAAAA,UAAU,EAAE,MAFP;AAGL/B,gBAAAA,SAAS,EAAE;AAHN,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOGY,IAAI,CAACnE,QAPR,CAxEF,EAiFE,oBAAC,IAAD;AACE,cAAA,KAAK,EAAE;AACLiF,gBAAAA,KAAK,EAAE,SADF;AAELtB,gBAAAA,QAAQ,EAAE,EAFL;AAGL4B,gBAAAA,cAAc,EAAE;AAHX,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOGpB,IAAI,CAACzD,QAPR,CAjFF,EA0FE,oBAAC,IAAD;AACE,cAAA,KAAK,EAAE;AACLgE,gBAAAA,aAAa,EAAE,KADV;AAELrB,gBAAAA,cAAc,EAAE,eAFX;AAGLD,gBAAAA,UAAU,EAAE;AAHP,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOE,oBAAC,IAAD;AACE,cAAA,KAAK,EAAE;AACLE,gBAAAA,OAAO,EAAE,CADJ;AAELkC,gBAAAA,WAAW,EAAE,CAFR;AAGLC,gBAAAA,WAAW,EAAE,MAHR;AAILZ,gBAAAA,YAAY,EAAE;AAJT,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAQGV,IAAI,CAACuB,QAAL,CAAcC,KAAd,IAAuB,KAAvB,IACDxB,IAAI,CAACuB,QAAL,CAAcC,KAAd,IAAuB,KADtB,GAEC,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEhC,gBAAAA,QAAQ,EAAE;AAAZ,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFD,GAKGQ,IAAI,CAACuB,QAAL,CAAcC,KAAd,GAAsB,KAAtB,IACFxB,IAAI,CAACuB,QAAL,CAAcC,KAAd,IAAuB,IADrB,GAEF,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEhC,gBAAAA,QAAQ,EAAE;AAAZ,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFE,GAKAQ,IAAI,CAACuB,QAAL,CAAcC,KAAd,GAAsB,IAAtB,IACFxB,IAAI,CAACuB,QAAL,CAAcC,KAAd,GAAsB,MADpB,GAEF,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEhC,gBAAAA,QAAQ,EAAE;AAAZ,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFE,GAMF,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEA,gBAAAA,QAAQ,EAAE;AAAZ,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAxBJ,CAPF,EAqCE,oBAAC,IAAD;AACE,cAAA,KAAK,EAAE;AACLe,gBAAAA,aAAa,EAAE,KADV;AAELrB,gBAAAA,cAAc,EAAE,eAFX;AAGLD,gBAAAA,UAAU,EAAE;AAHP,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOE,oBAAC,KAAD;AACE,cAAA,KAAK,EAAE;AACL1F,gBAAAA,MAAM,EAAE,EADH;AAELF,gBAAAA,KAAK,EAAE,EAFF;AAGL6H,gBAAAA,WAAW,EAAE;AAHR,eADT;AAME,cAAA,MAAM,EAAErB,OAAO,4BANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAeE,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEL,gBAAAA,QAAQ,EAAE;AAAZ,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGQ,IAAI,CAACyB,OADR,OAfF,CArCF,CA1FF,CAvCF,CADF,CADF,CADF;AAkMD,WAvMH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAhDJ,EA0PGzF,MAAM,GAAG,IAAH,GACL,oBAAC,gBAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AAEbY,YAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACAuB,YAAAA,OAAO;AACR,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AAAEwD,YAAAA,MAAM,EAAE,EAAV;AAAcrI,YAAAA,KAAK,EAAEH,KAArB;AAA4B+F,YAAAA,UAAU,EAAE;AAAxC,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGG1E,UAAU,GACT,oBAAC,gBAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACbC,YAAAA,aAAa,CAAC,KAAD,CAAb;AACD,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AAELuE,YAAAA,eAAe,EAAE,SAFZ;AAGL4C,YAAAA,iBAAiB,EAAE,EAHd;AAILC,YAAAA,eAAe,EAAE,EAJZ;AAKLlB,YAAAA,YAAY,EAAE;AALT,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATF,CALF,CADS,GAmBT,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLmB,YAAAA,SAAS,EAAE,QADN;AAEL9C,YAAAA,eAAe,EAAE,SAFZ;AAGL4C,YAAAA,iBAAiB,EAAE,EAHd;AAILC,YAAAA,eAAe,EAAE,EAJZ;AAKLlB,YAAAA,YAAY,EAAE;AALT,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAtBJ,CAPF,CA3PJ,CAnBJ,CADF;;AAuVF,WAAK,CAAL;AACE,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAE1B,YAAAA,IAAI,EAAE,CAAR;AAAWD,YAAAA,eAAe,EAAE;AAA5B,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLA,YAAAA,eAAe,EAAE;AADZ,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,SAAD;AAAW,UAAA,QAAQ,EAAC,eAApB;AAAoC,UAAA,eAAe,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAME,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACL1F,YAAAA,KAAK,EAAEH,KADF;AAEL+F,YAAAA,UAAU,EAAE,QAFP;AAGLC,YAAAA,cAAc,EAAE,QAHX;AAIL3F,YAAAA,MAAM,EAAED,MAAM,GAAG,EAJZ;AAKLyF,YAAAA,eAAe,EAAE;AALZ,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAES,YAAAA,QAAQ,EAAE;AAAZ,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BATF,CANF,EAiBE,oBAAC,UAAD;AACE,UAAA,UAAU,MADZ;AAEE,UAAA,8BAA8B,EAAE,KAFlC;AAGE,UAAA,KAAK,EAAE;AAAEe,YAAAA,aAAa,EAAE,KAAjB;AAAwBnB,YAAAA,SAAS,EAAE;AAAnC,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGR,QAAQ,CAACkD,GAAT,CAAa,UAACC,CAAD,EAAI9B,KAAJ,EAAc;AAC1B,iBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG9F,QAAQ,CAACuD,QAAT,CAAkBqE,CAAC,CAAC3D,IAApB,IACC,oBAAC,gBAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACb,kBAAI4D,IAAI,GAAG7H,QAAQ,CAACoD,MAAT,CAAgB,UAAC7B,CAAD,EAAO;AAChC,uBAAOA,CAAC,KAAKqG,CAAC,CAAC3D,IAAf;AACD,eAFU,CAAX;AAGAhE,cAAAA,WAAW,CAAC4H,IAAD,CAAX;AACD,aANH;AAOE,YAAA,GAAG,EAAE/B,KAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aASE,oBAAC,cAAD;AACE,YAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CADV;AAEE,YAAA,KAAK,EAAE;AACLyB,cAAAA,MAAM,EAAE,EADH;AAELhB,cAAAA,YAAY,EAAE,EAFT;AAGLvB,cAAAA,OAAO,EAAE;AAHJ,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAQE,oBAAC,IAAD;AACE,YAAA,KAAK,EAAE;AAELW,cAAAA,UAAU,EAAE,QAFP;AAGLwB,cAAAA,WAAW,EAAE;AAHR,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOGS,CAAC,CAAC3D,IAPL,CARF,CATF,CADD,GA8BC,oBAAC,gBAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbhE,cAAAA,WAAW,8BAAKD,QAAL,IAAe4H,CAAC,CAAC3D,IAAjB,GAAX;AACA1D,cAAAA,YAAY,CAACqH,CAAC,CAAC3D,IAAH,CAAZ;AACD,aAJH;AAKE,YAAA,GAAG,EAAE6B,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOE,oBAAC,IAAD;AACE,YAAA,KAAK,EAAE;AAELH,cAAAA,UAAU,EAAE,QAFP;AAGLwB,cAAAA,WAAW,EAAE,SAHR;AAILZ,cAAAA,YAAY,EAAE,EAJT;AAKLvB,cAAAA,OAAO,EAAE,EALJ;AAMLkC,cAAAA,WAAW,EAAE,CANR;AAOLK,cAAAA,MAAM,EAAE;AAPH,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAWGK,CAAC,CAAC3D,IAXL,CAPF,CA/BJ,CADF;AAwDD,SAzDA,CALH,CAjBF,EAiFE,oBAAC,UAAD;AACE,UAAA,UAAU,MADZ;AAEE,UAAA,8BAA8B,EAAE,KAFlC;AAGE,UAAA,KAAK,EAAE;AAAEmC,YAAAA,aAAa,EAAE,KAAjB;AAAwBnB,YAAAA,SAAS,EAAE;AAAnC,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKG7C,QAAQ,CAACuF,GAAT,CAAa,UAACC,CAAD,EAAI9B,KAAJ,EAAc;AAC1B,iBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG9F,QAAQ,CAACuD,QAAT,CAAkBqE,CAAC,CAAC3D,IAApB,IACC,oBAAC,gBAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACb,kBAAI4D,IAAI,GAAG7H,QAAQ,CAACoD,MAAT,CAAgB,UAAC7B,CAAD,EAAO;AAChC,uBAAOA,CAAC,KAAKqG,CAAC,CAAC3D,IAAf;AACD,eAFU,CAAX;AAGAhE,cAAAA,WAAW,CAAC4H,IAAD,CAAX;AACD,aANH;AAOE,YAAA,GAAG,EAAE/B,KAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aASE,oBAAC,cAAD;AACE,YAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CADV;AAEE,YAAA,KAAK,EAAE;AACLyB,cAAAA,MAAM,EAAE,EADH;AAELhB,cAAAA,YAAY,EAAE,EAFT;AAGLvB,cAAAA,OAAO,EAAE;AAHJ,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAQE,oBAAC,IAAD;AACE,YAAA,KAAK,EAAE;AAELW,cAAAA,UAAU,EAAE;AAFP,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAMGiC,CAAC,CAAC3D,IANL,CARF,CATF,CADD,GA6BC,oBAAC,gBAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbhE,cAAAA,WAAW,8BAAKD,QAAL,IAAe4H,CAAC,CAAC3D,IAAjB,GAAX;AACAzD,cAAAA,WAAW,CAACoH,CAAC,CAAC3D,IAAH,CAAX;AACD,aAJH;AAKE,YAAA,GAAG,EAAE6B,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOE,oBAAC,IAAD;AACE,YAAA,KAAK,EAAE;AAELH,cAAAA,UAAU,EAAE,QAFP;AAGLwB,cAAAA,WAAW,EAAE,SAHR;AAILZ,cAAAA,YAAY,EAAE,EAJT;AAKLvB,cAAAA,OAAO,EAAE,EALJ;AAMLkC,cAAAA,WAAW,EAAE,CANR;AAOLK,cAAAA,MAAM,EAAE;AAPH,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAWGK,CAAC,CAAC3D,IAXL,CAPF,CA9BJ,CADF;AAuDD,SAxDA,CALH,CAjFF,EAgJE,oBAAC,UAAD;AACE,UAAA,UAAU,MADZ;AAEE,UAAA,8BAA8B,EAAE,KAFlC;AAGE,UAAA,KAAK,EAAE;AAAEmC,YAAAA,aAAa,EAAE,KAAjB;AAAwBnB,YAAAA,SAAS,EAAE;AAAnC,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKG5C,YAAY,CAACsF,GAAb,CAAiB,UAACC,CAAD,EAAI9B,KAAJ,EAAc;AAC9B,iBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG9F,QAAQ,CAACuD,QAAT,CAAkBqE,CAAC,CAAC3D,IAApB,IACC,oBAAC,gBAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACb,kBAAI4D,IAAI,GAAG7H,QAAQ,CAACoD,MAAT,CAAgB,UAAC7B,CAAD,EAAO;AAChC,uBAAOA,CAAC,KAAKqG,CAAC,CAAC3D,IAAf;AACD,eAFU,CAAX;AAGAhE,cAAAA,WAAW,CAAC4H,IAAD,CAAX;AACD,aANH;AAOE,YAAA,GAAG,EAAE/B,KAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aASE,oBAAC,cAAD;AACE,YAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CADV;AAEE,YAAA,KAAK,EAAE;AAGLyB,cAAAA,MAAM,EAAE,EAHH;AAILhB,cAAAA,YAAY,EAAE,EAJT;AAKLvB,cAAAA,OAAO,EAAE,EALJ;AAML8C,cAAAA,OAAO,EAAE;AANJ,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAWE,oBAAC,IAAD;AACE,YAAA,KAAK,EAAE;AACLnC,cAAAA,UAAU,EAAE;AADP,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKGiC,CAAC,CAAC3D,IALL,CAXF,CATF,CADD,GA+BC,oBAAC,gBAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbhE,cAAAA,WAAW,8BAAKD,QAAL,IAAe4H,CAAC,CAAC3D,IAAjB,GAAX;AACAxD,cAAAA,eAAe,CAACmH,CAAC,CAAC3D,IAAH,CAAf;AACD,aAJH;AAKE,YAAA,GAAG,EAAE6B,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOE,oBAAC,IAAD;AACE,YAAA,KAAK,EAAE;AAELH,cAAAA,UAAU,EAAE,QAFP;AAGLwB,cAAAA,WAAW,EAAE,SAHR;AAILZ,cAAAA,YAAY,EAAE,EAJT;AAKLvB,cAAAA,OAAO,EAAE,EALJ;AAMLkC,cAAAA,WAAW,EAAE,CANR;AAOLK,cAAAA,MAAM,EAAE;AAPH,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAWGK,CAAC,CAAC3D,IAXL,CAPF,CAhCJ,CADF;AAyDD,SA1DA,CALH,CAhJF,EAkNE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLmC,YAAAA,aAAa,EAAE,KADV;AAELrB,YAAAA,cAAc,EAAE,cAFX;AAGLgD,YAAAA,gBAAgB,EAAE,EAHb;AAILd,YAAAA,cAAc,EAAE,EAJX;AAKLnC,YAAAA,UAAU,EAAE;AALP,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASE,oBAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAMpE,MAAM,EAAZ;AAAA,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAE;AAAE6F,YAAAA,YAAY,EAAE,EAAhB;AAAoByB,YAAAA,SAAS,EAAE;AAA/B,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,IAAI,EAAC,GAAd;AAAkB,UAAA,KAAK,EAAE;AAAE3C,YAAAA,QAAQ,EAAE,EAAZ;AAAgBL,YAAAA,OAAO,EAAE;AAAzB,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CATF,EAcE,oBAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAMrE,QAAQ,EAAd;AAAA,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAE;AAAE4F,YAAAA,YAAY,EAAE,EAAhB;AAAoByB,YAAAA,SAAS,EAAE;AAA/B,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACL3C,YAAAA,QAAQ,EAAE,EADL;AAELmC,YAAAA,iBAAiB,EAAE,EAFd;AAGLC,YAAAA,eAAe,EAAE;AAHZ,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CADF,CAdF,CAlNF,CADF,CADF;AA1VJ;AAglBD,GAhnBD;;AAinBA,SAAO,0CAAGjD,MAAM,CAACtE,IAAD,CAAT,CAAP;AACD,CA3zBD;;AA6zBA,eAAeV,cAAf;AAEA,IAAMkF,MAAM,GAAGuD,UAAU,CAACC,MAAX,CAAkB;AAC/BvD,EAAAA,SAAS,EAAE;AACTE,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE;AAFH,GADoB;AAM/BiB,EAAAA,cAAc,EAAE;AACdf,IAAAA,OAAO,EAAE,CADK;AAEdqB,IAAAA,QAAQ,EAAE,UAFI;AAGd8B,IAAAA,UAAU,EAAE;AAHE,GANe;AAW/BlC,EAAAA,KAAK,EAAE;AACL7G,IAAAA,MAAM,EAAEJ,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAAzB,GAAkC,GADrC;AAELF,IAAAA,KAAK,EAAEH,KAAK,GAAG,GAFV;AAGLwH,IAAAA,YAAY,EAAE;AAHT,GAXwB;AAgB/BP,EAAAA,MAAM,EAAE;AAEN9G,IAAAA,KAAK,EAAEH,KAAK,GAAG,GAFT;AAGN6F,IAAAA,eAAe,EAAE,MAHX;AAIN2B,IAAAA,YAAY,EAAE,EAJR;AAKNwB,IAAAA,gBAAgB,EAAE;AALZ,GAhBuB;AAuB/B7D,EAAAA,QAAQ,EAAE;AACRc,IAAAA,OAAO,EAAE,CADD;AAERK,IAAAA,QAAQ,EAAE,EAFF;AAGRsB,IAAAA,KAAK,EAAE,MAHC;AAIRK,IAAAA,UAAU,EAAE,MAJJ;AAKRoB,IAAAA,SAAS,EAAE,QALH;AAORC,IAAAA,MAAM,EAAE,CAPA;AAQR7B,IAAAA,IAAI,EAAE;AARE,GAvBqB;AAkC/B8B,EAAAA,IAAI,EAAE;AACJpJ,IAAAA,KAAK,EAAE,GADH;AAEJE,IAAAA,MAAM,EAAE,GAFJ;AAGJ6F,IAAAA,SAAS,EAAE,EAHP;AAIJL,IAAAA,eAAe,EAAE;AAJb,GAlCyB;AAwC/B8B,EAAAA,WAAW,EAAE;AACXa,IAAAA,MAAM,EAAE;AADG,GAxCkB;AA2C/BjC,EAAAA,UAAU,EAAE;AACVV,IAAAA,eAAe,EAAE,MADP;AAEVxF,IAAAA,MAAM,EAAED,MAAM,GAAG,EAFP;AAGVoH,IAAAA,YAAY,EAAE,EAHJ;AAIVH,IAAAA,aAAa,EAAE,KAJL;AAOVlH,IAAAA,KAAK,EAAEH,KAAK,GAAG,GAPL;AAQVkI,IAAAA,cAAc,EAAE;AARN,GA3CmB;AAsD/BzB,EAAAA,UAAU,EAAE;AACVH,IAAAA,QAAQ,EAAE,EADA;AAEVR,IAAAA,IAAI,EAAE;AAFI,GAtDmB;AA0D/BU,EAAAA,SAAS,EAAE;AACTF,IAAAA,QAAQ,EAAE,EADD;AAETkD,IAAAA,SAAS,EAAE,QAFF;AAGTR,IAAAA,gBAAgB,EAAE;AAHT;AA1DoB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  ScrollView,\r\n  FlatList,\r\n  Platform,\r\n  Dimensions,\r\n  StatusBar,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Button,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport firebase from \"firebase\";\r\nimport touron from \"../../api/touron\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\n\r\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\r\n\r\nimport { Surface } from \"react-native-paper\";\r\n\r\nconst TourHomeScreen = ({ navigation, route }) => {\r\n  const { isLoggedIn, user, tours } = useContext(AuthContext);\r\n  const [tour, setTour] = useState([]);\r\n\r\n  // console.log(tours, \"op\");\r\n  const [selected, setSelected] = useState([]);\r\n  // console.log(selected, \"selected\");\r\n  const [step, setStep] = useState(0);\r\n  // const [loaded, setLoaded] = useState(false);\r\n  const [tourLoaded, settourLoaded] = useState(false);\r\n\r\n  const nextStep = () => {\r\n    setIdealType(\"\");\r\n    setTourType(\"\");\r\n    setTourCategory(\"\");\r\n    setStep(step + 1);\r\n  };\r\n  const cancel = () => {\r\n    setIdealType(\"\");\r\n    setTourType(\"\");\r\n    setTourCategory(\"\");\r\n    setStep(step - 1);\r\n    setSelected([]);\r\n  };\r\n  const prevStep = () => {\r\n    setLoader(true);\r\n\r\n    setStep(step - 1);\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n    }, 2000);\r\n\r\n    // getTour();\r\n  };\r\n\r\n  const getSavedTours = () => {\r\n    let sT = [];\r\n    let sTNames = [];\r\n    if (isLoggedIn) {\r\n      firebase\r\n        .database()\r\n        .ref(`saved-tours/${user.uid}`)\r\n        .on(\"value\", (data) => {\r\n          if (data) {\r\n            data.forEach((c) => {\r\n              sT.push(c.val());\r\n              sTNames.push(c.val().tourName);\r\n            });\r\n          }\r\n        });\r\n\r\n      return [sT, sTNames];\r\n    } else {\r\n      return [sT, sTNames];\r\n    }\r\n  };\r\n\r\n  const [sT, sTNames] = getSavedTours();\r\n  const [error, setErrorMessage] = useState();\r\n  const [loader, setLoader] = useState(false);\r\n  const [savedTours, setSavedTours] = useState(sTNames);\r\n  const [savedToursDetails, setSavedToursDetails] = useState(sT);\r\n  const [tourName, setTourName] = useState(\"\");\r\n\r\n  const [idealType, setIdealType] = useState(\"\");\r\n  const [tourType, setTourType] = useState(\"\");\r\n  const [tourCategory, setTourCategory] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setpageSize] = useState(6);\r\n  console.log(page, pageSize, \"lp\");\r\n\r\n  // console.log(idealType, tourType, tourCategory, tour, \"filter\");\r\n  let indexValue = 20;\r\n  const showLoader = () => {\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const search = () => {\r\n    if (tour.length > 0) {\r\n      const sort = tour.sort((a, b) => a < b);\r\n      // console.log(sort, \"sort\");\r\n      // console.log(tour, \"tour\");\r\n      const d = tour.filter((c) => {\r\n        // console.log(c, \"c\");\r\n        return c.tourName\r\n          .trim()\r\n          .toUpperCase()\r\n          .includes(tourName.trim().toUpperCase());\r\n      });\r\n      return d;\r\n    }\r\n  };\r\n\r\n  console.log(search(), \"search\");\r\n  useEffect(() => {\r\n    // saveTour();\r\n    if (isLoggedIn) {\r\n      if (savedToursDetails.length > 0) {\r\n        const userID = firebase.auth().currentUser.uid;\r\n        firebase\r\n          .database()\r\n          .ref(`saved-tours/${userID}`)\r\n          .set(savedToursDetails)\r\n          .then((data) => console.log(data))\r\n          .catch((err) => console.log(err));\r\n      }\r\n    }\r\n  }, [tour, savedToursDetails, indexValue]);\r\n\r\n  const getTour = async () => {\r\n    console.log(route.params.name, \"kk\");\r\n    if (route.params.name) {\r\n      const cityname = route.params.name;\r\n      try {\r\n        const tourResponse = await touron.get(`/tour/cityname/${cityname}`);\r\n        console.log(tourResponse.data, \"lpllplpll\");\r\n        console.log(tourResponse.data.length, \"length\");\r\n        if (tourResponse.data.length === 0) {\r\n          setTour([]);\r\n        }\r\n        setTour(tourResponse.data);\r\n      } catch (err) {\r\n        setErrorMessage(\"Something went wrong\");\r\n      }\r\n    } else {\r\n      try {\r\n        if (idealType === \"\" && tourCategory === \"\" && tourType === \"\") {\r\n          settourLoaded(true);\r\n          try {\r\n            const tourResponse = await touron.get(\r\n              `/tour?page=1&pageSize=${pageSize}`\r\n            );\r\n            // console.log(blogResponse.data, \"lll\");\r\n            setTour(tourResponse.data);\r\n            settourLoaded(false);\r\n          } catch (err) {\r\n            console.log(err, \"err\");\r\n          }\r\n        } else {\r\n          let idealTypeTours = [];\r\n          let tourTypeTours = [];\r\n          let tourCategoryTours = [];\r\n          if (idealType != \"\") {\r\n            setLoader(true);\r\n\r\n            const tourResponse = await touron.get(\r\n              `/tour/idealtype/${idealType}`\r\n            );\r\n            // console.log(tourResponse.data, \"lpllplpll\");\r\n            idealTypeTours.push(tourResponse.data);\r\n\r\n            setTour(tourResponse.data);\r\n            setLoader(false);\r\n          }\r\n\r\n          // console.log(idealTypeTours, \"lo\");\r\n          if (tourType != \"\") {\r\n            setLoader(true);\r\n            const tourResponse = await touron.get(`/tour/tourtype/${tourType}`);\r\n            // console.log(tourResponse.data, \"lpllplpll\");\r\n            tourTypeTours.push(tourResponse.data);\r\n            setTour(tourResponse.data);\r\n            setLoader(false);\r\n          }\r\n          if (tourCategory != \"\") {\r\n            setLoader(true);\r\n            const tourResponse = await touron.get(\r\n              `/tour/tourcategory/${tourCategory}`\r\n            );\r\n            console.log(tourResponse.data, \"lpllplpll\");\r\n            tourCategoryTours.push(tourResponse.data);\r\n            setTour(tourResponse.data);\r\n            setLoader(false);\r\n          }\r\n\r\n          // const tours = [\r\n          //   ...idealTypeTours,\r\n          //   ...tourCategoryTours,\r\n          //   ...tourTypeTours,\r\n          // ];\r\n\r\n          // console.log(tours, \"loloopopopopopoopp\");\r\n          // setTour(tours);\r\n        }\r\n      } catch (err) {\r\n        setErrorMessage(\"Something went wrong\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showLoader();\r\n    let mounted = true;\r\n    if (mounted) {\r\n      getTour();\r\n    }\r\n    return () => (mounted = false);\r\n  }, [idealType, tourCategory, tourType]);\r\n\r\n  const render = (step) => {\r\n    const idealFor = [\r\n      {\r\n        name: \"Family\",\r\n      },\r\n      {\r\n        name: \"Family and kids\",\r\n      },\r\n      { name: \"Solo\" },\r\n      { name: \"Mature Couple\" },\r\n      { name: \"Young Couple\" },\r\n    ];\r\n\r\n    const tourType = [\r\n      {\r\n        name: \"Full Day Tour\",\r\n      },\r\n      {\r\n        name: \"Half Day Tour\",\r\n      },\r\n      { name: \"Night Tour\" },\r\n    ];\r\n    const tourCategory = [\r\n      {\r\n        name: \"Activities\",\r\n      },\r\n      { name: \"Hop On & Off\" },\r\n      {\r\n        name: \"Attraction\",\r\n      },\r\n      { name: \"Learning\" },\r\n    ];\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <ScrollView\r\n            style={\r\n              ([styles.container],\r\n              {\r\n                backgroundColor: tour.length === 0 ? \"white\" : \"transparent\",\r\n                flex: 1,\r\n              })\r\n            }\r\n          >\r\n            {loader ? (\r\n              <ActivityIndicator\r\n                size=\"large\"\r\n                style={{\r\n                  flex: 1,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              />\r\n            ) : (\r\n              <View>\r\n                <View\r\n                  style={{\r\n                    height: HEIGHT / 8,\r\n                    // backgroundColor: \"#ff6b6b\",\r\n                    padding: 10,\r\n                    marginTop: Platform.OS === \"ios\" ? 50 : 40,\r\n                    width: WIDTH,\r\n                    // alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <TouchableOpacity onPress={() => navigation.navigate(\"Main\")}>\r\n                    <Feather\r\n                      name=\"arrow-left\"\r\n                      style={{ fontSize: 30 }}\r\n                    ></Feather>\r\n                  </TouchableOpacity>\r\n\r\n                  <View style={styles.background}>\r\n                    <Feather name=\"search\" style={styles.iconStyle}></Feather>\r\n                    <TextInput\r\n                      style={styles.inputStyle}\r\n                      placeholder=\"Search\"\r\n                      onChangeText={(value) => setTourName(value)}\r\n                      onSubmitEditing={search}\r\n                      autoCapitalize=\"none\"\r\n                      autoCorrect={false}\r\n                      keyboardType=\"email-address\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {tour.length === 0 ? (\r\n                  <View\r\n                    style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n                  >\r\n                    <View>\r\n                      <Image\r\n                        style={{ width: WIDTH * 0.9, height: WIDTH * 0.9 }}\r\n                        source={require(\"../../../assets/oops.jpg\")}\r\n                      />\r\n                    </View>\r\n                    <Text style={{ fontFamily: \"Avenir\", fontSize: 23 }}>\r\n                      No Tours Found for {route.params.name}\r\n                    </Text>\r\n                  </View>\r\n                ) : (\r\n                  <FlatList\r\n                    showsVerticalScrollIndicator={false}\r\n                    keyExtractor={(c) => c._id}\r\n                    data={search()}\r\n                    renderItem={({ item, index }) => {\r\n                      return (\r\n                        <>\r\n                          <View style={styles.imageContainer}>\r\n                            <View style={styles.shadow}>\r\n                              <TouchableOpacity\r\n                                onPress={() => {\r\n                                  navigation.navigate(\"TourInner\", {\r\n                                    item: item,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                <Image\r\n                                  style={styles.image}\r\n                                  source={{ uri: item.imageUrl }}\r\n                                />\r\n                              </TouchableOpacity>\r\n                              <View\r\n                                style={{\r\n                                  flexDirection: \"row\",\r\n                                  position: \"absolute\",\r\n                                  width: WIDTH * 0.9,\r\n                                  justifyContent: \"space-between\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              >\r\n                                <LinearGradient\r\n                                  colors={[\"#FFA26E\", \"#E36D5D\"]}\r\n                                  style={{\r\n                                    marginHorizontals: 15,\r\n                                    marginTop: 10,\r\n                                    padding: 2,\r\n                                    borderRadius: 5,\r\n                                    left: 10,\r\n                                  }}\r\n                                >\r\n                                  <View>\r\n                                    <Text style={styles.cityname}>\r\n                                      {item.cityName}\r\n                                    </Text>\r\n                                  </View>\r\n                                </LinearGradient>\r\n                              </View>\r\n                              <View style={styles.tourDetails}>\r\n                                <View\r\n                                  style={{\r\n                                    flexDirection: \"row\",\r\n                                    justifyContent: \"space-between\",\r\n                                  }}\r\n                                >\r\n                                  <Text\r\n                                    style={{ color: \"#8395A7\", fontSize: 15 }}\r\n                                  >\r\n                                    {item.tourCategory.join(\",\")}\r\n                                  </Text>\r\n                                  <View>\r\n                                    {savedTours.includes(item.tourName) ? (\r\n                                      <TouchableOpacity\r\n                                        onPress={() => {\r\n                                          let filterData = savedTours.filter(\r\n                                            (c) => {\r\n                                              return c != item.tourName;\r\n                                            }\r\n                                          );\r\n\r\n                                          setSavedTours(filterData);\r\n\r\n                                          const filterDetails = savedToursDetails.filter(\r\n                                            (c) => {\r\n                                              return (\r\n                                                c.tourName !== item.tourName\r\n                                              );\r\n                                            }\r\n                                          );\r\n\r\n                                          setSavedToursDetails(filterDetails);\r\n                                        }}\r\n                                      >\r\n                                        <AntDesign\r\n                                          style={{ marginRight: 0 }}\r\n                                          name=\"heart\"\r\n                                          size={24}\r\n                                          color=\"#FF4500\"\r\n                                        />\r\n                                      </TouchableOpacity>\r\n                                    ) : (\r\n                                      <TouchableOpacity\r\n                                        onPress={() => {\r\n                                          if (isLoggedIn) {\r\n                                            setSavedTours([\r\n                                              ...savedTours,\r\n                                              item.tourName,\r\n                                            ]);\r\n                                            setSavedToursDetails([\r\n                                              ...savedToursDetails,\r\n                                              item,\r\n                                            ]);\r\n                                          } else {\r\n                                            navigation.navigate(\"SignUpScreen\");\r\n                                          }\r\n                                        }}\r\n                                      >\r\n                                        <Image\r\n                                          style={{\r\n                                            height: 35,\r\n\r\n                                            width: 35,\r\n                                          }}\r\n                                          source={require(\"../../../assets/heart.png\")}\r\n                                        />\r\n                                      </TouchableOpacity>\r\n                                    )}\r\n                                  </View>\r\n                                </View>\r\n\r\n                                <Text\r\n                                  style={{\r\n                                    fontSize: 18,\r\n                                    fontWeight: \"bold\",\r\n                                    marginTop: 2,\r\n                                  }}\r\n                                >\r\n                                  {item.tourName}\r\n                                </Text>\r\n                                <Text\r\n                                  style={{\r\n                                    color: \"#8395A7\",\r\n                                    fontSize: 15,\r\n                                    marginVertical: 5,\r\n                                  }}\r\n                                >\r\n                                  {item.tourType}\r\n                                </Text>\r\n                                <View\r\n                                  style={{\r\n                                    flexDirection: \"row\",\r\n                                    justifyContent: \"space-between\",\r\n                                    alignItems: \"center\",\r\n                                  }}\r\n                                >\r\n                                  <View\r\n                                    style={{\r\n                                      padding: 8,\r\n                                      borderWidth: 1,\r\n                                      borderColor: \"#333\",\r\n                                      borderRadius: 14,\r\n                                    }}\r\n                                  >\r\n                                    {item.tourCost.adult == 15000 &&\r\n                                    item.tourCost.adult >= 10000 ? (\r\n                                      <Text style={{ fontSize: 13 }}>\r\n                                        ₹₹₹₹ - High\r\n                                      </Text>\r\n                                    ) : item.tourCost.adult < 10000 &&\r\n                                      item.tourCost.adult >= 5000 ? (\r\n                                      <Text style={{ fontSize: 13 }}>\r\n                                        ₹₹₹ - Medium\r\n                                      </Text>\r\n                                    ) : item.tourCost.adult > 2500 &&\r\n                                      item.tourCost.adult < 500205 ? (\r\n                                      <Text style={{ fontSize: 13 }}>\r\n                                        ₹₹ - Low\r\n                                      </Text>\r\n                                    ) : (\r\n                                      <Text style={{ fontSize: 13 }}>\r\n                                        ₹ - Very Low\r\n                                      </Text>\r\n                                    )}\r\n                                  </View>\r\n\r\n                                  <View\r\n                                    style={{\r\n                                      flexDirection: \"row\",\r\n                                      justifyContent: \"space-between\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <Image\r\n                                      style={{\r\n                                        height: 25,\r\n                                        width: 25,\r\n                                        marginRight: 4,\r\n                                      }}\r\n                                      source={require(\"../../../assets/Star.png\")}\r\n                                    />\r\n                                    <Text style={{ fontSize: 18 }}>\r\n                                      {item.ratings}/5\r\n                                    </Text>\r\n                                  </View>\r\n                                </View>\r\n                              </View>\r\n                            </View>\r\n                          </View>\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                )}\r\n                {loader ? null : (\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      // setPage(page + 1);\r\n                      setpageSize(pageSize + 6);\r\n                      getTour();\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{ margin: 10, width: WIDTH, alignItems: \"center\" }}\r\n                    >\r\n                      {tourLoaded ? (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            settourLoaded(false);\r\n                          }}\r\n                        >\r\n                          <View\r\n                            style={{\r\n                              // textAlign: \"center\",\r\n                              backgroundColor: \"#FFA26E\",\r\n                              paddingHorizontal: 40,\r\n                              paddingVertical: 10,\r\n                              borderRadius: 20,\r\n                            }}\r\n                          >\r\n                            <ActivityIndicator></ActivityIndicator>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                      ) : (\r\n                        <Text\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            backgroundColor: \"#FFA26E\",\r\n                            paddingHorizontal: 20,\r\n                            paddingVertical: 10,\r\n                            borderRadius: 20,\r\n                          }}\r\n                        >\r\n                          Load More ...\r\n                        </Text>\r\n                      )}\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                )}\r\n                {/* {route.params.cityName == \"\" || tour.length === 0 ? null : (\r\n                  <View\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      padding: 0,\r\n                      bottom: 5,\r\n                      width: WIDTH,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity onPress={() => nextStep()}>\r\n                      <View\r\n                        style={{\r\n                          backgroundColor: \"#ff6b6b\",\r\n                          padding: 20,\r\n                          borderRadius: 50,\r\n                        }}\r\n                      >\r\n                        <AntDesign name=\"filter\" style={{ fontSize: 28 }} />\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                )} */}\r\n              </View>\r\n            )}\r\n          </ScrollView>\r\n        );\r\n      case 1:\r\n        return (\r\n          <View style={{ flex: 1, backgroundColor: \"white\" }}>\r\n            <View\r\n              style={{\r\n                backgroundColor: \"white\",\r\n              }}\r\n            >\r\n              <StatusBar barStyle=\"light-content\" backgroundColor=\"#67e6dc\" />\r\n              <View\r\n                style={{\r\n                  width: WIDTH,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  height: HEIGHT / 10,\r\n                  backgroundColor: \"#67e6dc\",\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 20 }}>Filter Tours</Text>\r\n              </View>\r\n              <ScrollView\r\n                horizontal\r\n                showsHorizontalScrollIndicator={false}\r\n                style={{ flexDirection: \"row\", marginTop: 50 }}\r\n              >\r\n                {idealFor.map((m, index) => {\r\n                  return (\r\n                    <View>\r\n                      {selected.includes(m.name) ? (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            let city = selected.filter((c) => {\r\n                              return c !== m.name;\r\n                            });\r\n                            setSelected(city);\r\n                          }}\r\n                          key={index}\r\n                        >\r\n                          <LinearGradient\r\n                            colors={[\"#5ED2A0\", \"#339CB1\"]}\r\n                            style={{\r\n                              margin: 10,\r\n                              borderRadius: 25,\r\n                              padding: 15,\r\n                            }}\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                //   padding: 5,\r\n                                fontFamily: \"Avenir\",\r\n                                borderColor: \"#95afc0\",\r\n                              }}\r\n                            >\r\n                              {m.name}\r\n                            </Text>\r\n                          </LinearGradient>\r\n                        </TouchableOpacity>\r\n                      ) : (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            setSelected([...selected, m.name]);\r\n                            setIdealType(m.name);\r\n                          }}\r\n                          key={index}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              //   padding: 5,\r\n                              fontFamily: \"Avenir\",\r\n                              borderColor: \"#95afc0\",\r\n                              borderRadius: 25,\r\n                              padding: 15,\r\n                              borderWidth: 1,\r\n                              margin: 10,\r\n                            }}\r\n                          >\r\n                            {m.name}\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                    </View>\r\n                  );\r\n                })}\r\n              </ScrollView>\r\n              <ScrollView\r\n                horizontal\r\n                showsHorizontalScrollIndicator={false}\r\n                style={{ flexDirection: \"row\", marginTop: 30 }}\r\n              >\r\n                {tourType.map((m, index) => {\r\n                  return (\r\n                    <View>\r\n                      {selected.includes(m.name) ? (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            let city = selected.filter((c) => {\r\n                              return c !== m.name;\r\n                            });\r\n                            setSelected(city);\r\n                          }}\r\n                          key={index}\r\n                        >\r\n                          <LinearGradient\r\n                            colors={[\"#fcb045\", \"#339CB1\"]}\r\n                            style={{\r\n                              margin: 10,\r\n                              borderRadius: 25,\r\n                              padding: 15,\r\n                            }}\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                //   padding: 5,\r\n                                fontFamily: \"Avenir\",\r\n                              }}\r\n                            >\r\n                              {m.name}\r\n                            </Text>\r\n                          </LinearGradient>\r\n                        </TouchableOpacity>\r\n                      ) : (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            setSelected([...selected, m.name]);\r\n                            setTourType(m.name);\r\n                          }}\r\n                          key={index}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              //   padding: 5,\r\n                              fontFamily: \"Avenir\",\r\n                              borderColor: \"#95afc0\",\r\n                              borderRadius: 25,\r\n                              padding: 15,\r\n                              borderWidth: 1,\r\n                              margin: 10,\r\n                            }}\r\n                          >\r\n                            {m.name}\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                    </View>\r\n                  );\r\n                })}\r\n              </ScrollView>\r\n              <ScrollView\r\n                horizontal\r\n                showsHorizontalScrollIndicator={false}\r\n                style={{ flexDirection: \"row\", marginTop: 30 }}\r\n              >\r\n                {tourCategory.map((m, index) => {\r\n                  return (\r\n                    <View>\r\n                      {selected.includes(m.name) ? (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            let city = selected.filter((c) => {\r\n                              return c !== m.name;\r\n                            });\r\n                            setSelected(city);\r\n                          }}\r\n                          key={index}\r\n                        >\r\n                          <LinearGradient\r\n                            colors={[\"#00d2ff\", \"#928dab\"]}\r\n                            style={{\r\n                              //   borderColor: \"#718093\",\r\n                              //   borderWidth: 1,\r\n                              margin: 10,\r\n                              borderRadius: 25,\r\n                              padding: 15,\r\n                              opacity: 0.8,\r\n                            }}\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                fontFamily: \"Avenir\",\r\n                              }}\r\n                            >\r\n                              {m.name}\r\n                            </Text>\r\n                          </LinearGradient>\r\n                        </TouchableOpacity>\r\n                      ) : (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            setSelected([...selected, m.name]);\r\n                            setTourCategory(m.name);\r\n                          }}\r\n                          key={index}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              //   padding: 5,\r\n                              fontFamily: \"Avenir\",\r\n                              borderColor: \"#95afc0\",\r\n                              borderRadius: 25,\r\n                              padding: 15,\r\n                              borderWidth: 1,\r\n                              margin: 10,\r\n                            }}\r\n                          >\r\n                            {m.name}\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                    </View>\r\n                  );\r\n                })}\r\n              </ScrollView>\r\n\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-around\",\r\n                  marginHorizontal: 20,\r\n                  marginVertical: 30,\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <TouchableOpacity onPress={() => cancel()}>\r\n                  <Surface style={{ borderRadius: 50, elevation: 10 }}>\r\n                    <Feather name=\"x\" style={{ fontSize: 35, padding: 10 }} />\r\n                  </Surface>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => prevStep()}>\r\n                  <Surface style={{ borderRadius: 50, elevation: 10 }}>\r\n                    {/* <Feather name=\"x\" style={{ fontSize: 35, padding: 10 }} /> */}\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 23,\r\n                        paddingHorizontal: 13,\r\n                        paddingVertical: 10,\r\n                      }}\r\n                    >\r\n                      ✔️\r\n                    </Text>\r\n                  </Surface>\r\n                </TouchableOpacity>\r\n                {/* <Button title=\"Cancel\" onPress={() => cancel()} /> */}\r\n              </View>\r\n            </View>\r\n          </View>\r\n        );\r\n    }\r\n  };\r\n  return <>{render(step)}</>;\r\n};\r\n\r\nexport default TourHomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    // paddingTop: 20,\r\n  },\r\n  imageContainer: {\r\n    padding: 5,\r\n    position: \"relative\",\r\n    paddingTop: 20,\r\n  },\r\n  image: {\r\n    height: Dimensions.get(\"window\").height / 4.5,\r\n    width: WIDTH * 0.9,\r\n    borderRadius: 20,\r\n  },\r\n  shadow: {\r\n    // height: Dimensions.get(\"window\").height / 2.4,\r\n    width: WIDTH * 0.9,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 18,\r\n    marginHorizontal: 10,\r\n  },\r\n  cityname: {\r\n    padding: 5,\r\n    fontSize: 12,\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    fontStyle: \"normal\",\r\n\r\n    zIndex: 1,\r\n    left: 0,\r\n  },\r\n\r\n  view: {\r\n    width: 100,\r\n    height: 100,\r\n    marginTop: 20,\r\n    backgroundColor: \"red\",\r\n  },\r\n  tourDetails: {\r\n    margin: 15,\r\n  },\r\n  background: {\r\n    backgroundColor: \"#fff\",\r\n    height: HEIGHT / 15,\r\n    borderRadius: 20,\r\n    flexDirection: \"row\",\r\n\r\n    //  borderWidth: 1,\r\n    width: WIDTH * 0.9,\r\n    marginVertical: 20,\r\n    // marginHorizontal: 10,\r\n  },\r\n  inputStyle: {\r\n    fontSize: 18,\r\n    flex: 1,\r\n  },\r\n  iconStyle: {\r\n    fontSize: 28,\r\n    alignSelf: \"center\",\r\n    marginHorizontal: 15,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}