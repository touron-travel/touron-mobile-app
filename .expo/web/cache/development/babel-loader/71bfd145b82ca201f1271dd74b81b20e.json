{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/AuthScreens/SignUpScreen.js\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as Animatable from \"react-native-animatable\";\nimport * as firebase from \"firebase\";\nimport { Spinner } from \"native-base\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport Constants from \"expo-constants\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: true,\n              shouldSetBadge: true\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\n\nfunction SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      step = _useState10[0],\n      setStep = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      code = _useState12[0],\n      setCode = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sessionID = _useState14[0],\n      setSessionID = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loaded = _useState16[0],\n      setLoaded = _useState16[1];\n\n  var _useContext = useContext(AuthContext),\n      isLoggedIn = _useContext.isLoggedIn,\n      setIsLoggedIn = _useContext.setIsLoggedIn,\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      err = _useState18[0],\n      setErr = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      numerr = _useState20[0],\n      setNumErr = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      emailerr = _useState22[0],\n      setEmailErr = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      nameerr = _useState24[0],\n      setNameErr = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      passerr = _useState26[0],\n      setPassErr = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      otperr = _useState28[0],\n      setOtpErr = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      expoToken = _useState30[0],\n      setExpoToken = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      notification = _useState32[0],\n      setNotification = _useState32[1];\n\n  var notificationListener = useRef();\n  var responseListener = useRef();\n\n  var storeToken = function storeToken(value) {\n    var userToken;\n    return _regeneratorRuntime.async(function storeToken$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            userToken = JSON.stringify(value);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userToken\", userToken));\n\n          case 4:\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var nextStep = function nextStep() {\n    setStep(step + 1);\n    setLoaded(false);\n  };\n\n  var prevStep = function prevStep() {\n    setStep(step - 1);\n    setLoaded(false);\n  };\n\n  var sendOtp = function sendOtp() {\n    console.log(\"clicked\");\n    setEmailErr(false);\n    setNumErr(false);\n    setPassErr(false);\n    setNameErr(false);\n\n    if (number.length === 10 && email.includes(\"@\") && password !== \"\" && name !== \" \") {\n      setLoaded(true);\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (user) {\n        setUser(user.user);\n        firebase.database().ref(\"userGeneralInfo/\" + user.user.uid).set({\n          phoneNumber: number,\n          name: name,\n          address: \"\",\n          age: \"\",\n          gender: \"\",\n          aboutMe: \"\",\n          travellerType: \"\",\n          admin: false,\n          pushNotificationToken: expoToken\n        });\n        setIsLoggedIn(true);\n        storeToken(user.user);\n        axios.get(\"https://2factor.in/API/V1/4196cbc9-0df2-11eb-9fa5-0200cd936042/SMS/+91\" + number + \"/AUTOGEN\").then(function (response) {\n          var session = response.data.Details;\n          console.log(session, \"RESPONSE DATA\");\n          setLoaded(false);\n          setSessionID(session);\n          nextStep();\n        }).catch(function (err) {\n          console.log(err, \"kjhk\");\n        });\n      }).catch(function (err) {\n        setLoaded(false);\n        setErr(err.message);\n        console.log(err.message);\n      });\n    } else {\n      if (email.includes(\"@\") === false) {\n        setEmailErr(true);\n      }\n\n      if (number.length !== 10) {\n        setNumErr(true);\n      }\n\n      if (name == \"\") {\n        setNameErr(true);\n      }\n\n      if (password.length < 6) {\n        setPassErr(true);\n      }\n    }\n  };\n\n  var registerForPushNotificationsAsync = function registerForPushNotificationsAsync() {\n    var token, _await$Permissions$ge, existingStatus, finalStatus, _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function registerForPushNotificationsAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!Constants.isDevice) {\n              _context3.next = 22;\n              break;\n            }\n\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n          case 3:\n            _await$Permissions$ge = _context3.sent;\n            existingStatus = _await$Permissions$ge.status;\n            finalStatus = existingStatus;\n            console.log(finalStatus, existingStatus, \"stst\");\n\n            if (!(existingStatus !== \"granted\" || Platform.OS === \"android\")) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n          case 10:\n            _await$Permissions$as = _context3.sent;\n            status = _await$Permissions$as.status;\n            finalStatus = status;\n            console.log(finalStatus, \"fianl\");\n\n          case 14:\n            if (!(finalStatus !== \"granted\")) {\n              _context3.next = 17;\n              break;\n            }\n\n            alert(\"Failed to get push token for push notification!\");\n            return _context3.abrupt(\"return\");\n\n          case 17:\n            _context3.next = 19;\n            return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n          case 19:\n            token = _context3.sent.data;\n            _context3.next = 23;\n            break;\n\n          case 22:\n            alert(\"Must use physical device for Push Notifications\");\n\n          case 23:\n            if (Platform.OS === \"android\") {\n              Notifications.setNotificationChannelAsync(\"default\", {\n                name: \"default\",\n                importance: Notifications.AndroidImportance.MAX,\n                vibrationPattern: [0, 250, 250, 250],\n                lightColor: \"#FF231F7C\"\n              });\n            }\n\n            return _context3.abrupt(\"return\", token);\n\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    registerForPushNotificationsAsync().then(function (token) {\n      return setExpoToken(token);\n    });\n    notificationListener.current = Notifications.addNotificationReceivedListener(function (notification) {\n      setNotification(notification);\n    });\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(function (response) {\n      console.log(response);\n    });\n    return function () {\n      Notifications.removeNotificationSubscription(notificationListener);\n      Notifications.removeNotificationSubscription(responseListener);\n    };\n  }, []);\n\n  var verifyOtp = function verifyOtp() {\n    setLoaded(true);\n    axios.get(\"https://2factor.in/API/V1/4196cbc9-0df2-11eb-9fa5-0200cd936042/SMS/VERIFY/\" + sessionID + \"/\" + code).then(function (response) {\n      console.log(response, \"RESPONSE\");\n      var status = response.data.Details;\n      console.log(status, \"STATUS\");\n\n      if (status == \"OTP Matched\") {\n        setName(\"\");\n        setNumber(\"\");\n        setPassword(\"\");\n        setEmail(\"\");\n        setUser(user);\n        setIsLoggedIn(true);\n        storeToken(user);\n        setLoaded(false);\n        navigation.navigate(\"Main\");\n        prevStep();\n      }\n    }).catch(function (err) {\n      setLoaded(false);\n      console.log(err, \"err\");\n      setOtpErr(true);\n    });\n  };\n\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      firebase.auth().onAuthStateChanged(function (user) {\n        console.log(user, \"MANIVASAGAM\");\n        setUser(user);\n      });\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  var renderView = function renderView(step) {\n    switch (step) {\n      case 0:\n        return React.createElement(ScrollView, {\n          showsVerticalScrollIndicator: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.skip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Main\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            color: \"#333\",\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }\n        }, \"Skip\"))), React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"flex-end\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }\n        }, React.createElement(Animatable.View, {\n          animation: \"fadeInUp\",\n          duration: 1500,\n          style: {\n            alignItems: \"flex-end\",\n            alignItems: \"center\",\n            marginTop: HEIGHT / 6\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: {\n            marginBottom: HEIGHT / 7,\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 40,\n            color: \"white\",\n            fontFamily: \"NewYorkl\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 19\n          }\n        }, \"Sign Up\")), React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          value: name,\n          placeholder: \"Name\",\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(value) {\n            return setName(value);\n          },\n          placeholderTextColor: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 19\n          }\n        })), !nameerr ? null : React.createElement(View, {\n          style: ([styles.inputContainer], {\n            backgroundColor: \"transparent\",\n            marginBottom: 0\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"yellow\",\n            marginBottom: 10,\n            fontSize: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 21\n          }\n        }, \"Enter Your Name\")), React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          value: email,\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(value) {\n            return setEmail(value);\n          },\n          placeholderTextColor: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 19\n          }\n        })), !emailerr ? null && err !== \"\" : React.createElement(View, {\n          style: ([styles.inputContainer], {\n            backgroundColor: \"transparent\",\n            marginBottom: 10\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"yellow\",\n            margin: 0,\n            fontSize: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 21\n          }\n        }, \"Enter a Valid email id\"), React.createElement(Text, {\n          style: {\n            color: \"yellow\",\n            margin: 0,\n            fontSize: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 21\n          }\n        }, err)), err == \"\" ? null : React.createElement(View, {\n          style: ([styles.inputContainer], {\n            backgroundColor: \"transparent\",\n            marginBottom: 10\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"yellow\",\n            margin: 0,\n            fontSize: 14\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 21\n          }\n        }, err)), React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          value: number,\n          placeholder: \"Phone Number\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"number-pad\",\n          placeholderTextColor: \"white\",\n          onChangeText: function onChangeText(value) {\n            return setNumber(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 19\n          }\n        })), !numerr ? null : React.createElement(View, {\n          style: ([styles.inputContainer], {\n            backgroundColor: \"transparent\",\n            marginBottom: 10\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"yellow\",\n            margin: 0,\n            fontSize: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 21\n          }\n        }, \"Phone number should be 10 number\")), React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          value: password,\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"email-address\",\n          placeholderTextColor: \"white\",\n          passwordRules: true,\n          secureTextEntry: true,\n          onChangeText: function onChangeText(value) {\n            return setPassword(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 19\n          }\n        })), !passerr ? null : React.createElement(View, {\n          style: ([styles.inputContainer], {\n            backgroundColor: \"transparent\",\n            marginBottom: 10\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"yellow\",\n            margin: 0,\n            fontSize: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 21\n          }\n        }, \"Password should be atleast minimum 6 charecters\")), React.createElement(View, {\n          style: styles.otpButtonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 17\n          }\n        }, loaded ? React.createElement(View, {\n          style: {\n            paddingVertical: -10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 21\n          }\n        }, React.createElement(Spinner, {\n          color: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 23\n          }\n        })) : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            sendOtp();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: styles.optButtonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 23\n          }\n        }, \"Send Otp\"))), React.createElement(View, {\n          style: {\n            position: \"absolute\",\n            bottom: 20,\n            width: WIDTH * 0.9\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"SignInScreen\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: \"900\",\n            textAlign: \"center\",\n            color: \"white\",\n            marginVertical: WIDTH / 14\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 21\n          }\n        }, \"Already have an account? Try Sign In\"))))));\n\n      case 1:\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            marginVertical: HEIGHT / 10,\n            position: \"absolute\",\n            bottom: HEIGHT * 0.7\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 25,\n            color: \"white\",\n            fontFamily: \"Andika\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }\n        }, \"Enter the otp send to\"), React.createElement(Text, {\n          style: {\n            fontSize: 25,\n            color: \"white\",\n            fontFamily: \"Andika\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }\n        }, \"+91 \", number)), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter Otp\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"number-pad\",\n          onChangeText: function onChangeText(value) {\n            return setCode(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }\n        })), !otperr ? null : React.createElement(View, {\n          style: ([styles.inputContainer], {\n            backgroundColor: \"transparent\",\n            marginBottom: 0\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"red\",\n            marginBottom: 0,\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 19\n          }\n        }, \"Enter Valid Otp\")), React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            prevStep();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.otpButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: styles.otpText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 21\n          }\n        }, \" Back\"))), React.createElement(View, {\n          style: [styles.otpButton, {\n            backgroundColor: \"white\"\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 17\n          }\n        }, loaded ? React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 21\n          }\n        }, React.createElement(Spinner, {\n          color: \"black\",\n          size: \"large\",\n          style: {\n            padding: 20,\n            margin: -15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 23\n          }\n        })) : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            verifyOtp();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: [styles.otpText, {\n            color: \"black\"\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 23\n          }\n        }, \"Sign Up\"))))));\n    }\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 5\n    }\n  }, React.createElement(Animatable.View, {\n    duration: 1000,\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    style: {\n      width: WIDTH,\n      height: HEIGHT + 30,\n      position: \"absolute\"\n    },\n    source: {\n      uri: \"https://images.pexels.com/photos/2249602/pexels-photo-2249602.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 9\n    }\n  }), renderView(step)));\n}\n\nexport default SignUpScreen;\nvar styles = new StyleSheet.create({\n  otpButton: {\n    marginTop: HEIGHT / 25,\n    marginBottom: 85,\n    backgroundColor: \"black\",\n    borderRadius: 10,\n    width: WIDTH / 3,\n    alignContent: \"center\",\n    marginHorizontal: 20,\n    paddingHorizontal: 10,\n    position: \"relative\"\n  },\n  otpText: {\n    textAlign: \"center\",\n    paddingVertical: 10,\n    color: \"white\",\n    fontSize: 16,\n    fontFamily: \"Andika\"\n  },\n  input: {\n    marginHorizontal: 20,\n    width: WIDTH * 0.8,\n    height: 60,\n    color: \"white\",\n    fontFamily: \"Andika\"\n  },\n  inputContainer: {\n    height: 60,\n    borderRadius: 10,\n    backgroundColor: \"#0005\",\n    marginBottom: 20\n  },\n  optButtonText: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"white\",\n    fontSize: 16,\n    fontFamily: \"Andika\"\n  },\n  otpButtonContainer: {\n    marginBottom: HEIGHT / 8,\n    backgroundColor: \"black\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\"\n  },\n  skip: {\n    position: \"absolute\",\n    right: 20,\n    color: \"#333\",\n    fontWeight: \"bold\",\n    marginTop: HEIGHT / 20\n  }\n});","map":{"version":3,"sources":["/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/AuthScreens/SignUpScreen.js"],"names":["React","useState","useRef","useEffect","useContext","AsyncStorage","Animatable","firebase","Spinner","Notifications","Permissions","Constants","WIDTH","Dimensions","get","width","HEIGHT","height","axios","AuthContext","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","SignUpScreen","navigation","number","setNumber","email","setEmail","name","setName","password","setPassword","step","setStep","code","setCode","sessionID","setSessionID","loaded","setLoaded","isLoggedIn","setIsLoggedIn","user","setUser","err","setErr","numerr","setNumErr","emailerr","setEmailErr","nameerr","setNameErr","passerr","setPassErr","otperr","setOtpErr","expoToken","setExpoToken","notification","setNotification","notificationListener","responseListener","storeToken","value","userToken","JSON","stringify","setItem","console","log","nextStep","prevStep","sendOtp","length","includes","auth","createUserWithEmailAndPassword","then","database","ref","uid","set","phoneNumber","address","age","gender","aboutMe","travellerType","admin","pushNotificationToken","response","session","data","Details","catch","message","registerForPushNotificationsAsync","isDevice","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","Platform","OS","askAsync","alert","getExpoPushTokenAsync","token","setNotificationChannelAsync","importance","AndroidImportance","MAX","vibrationPattern","lightColor","current","addNotificationReceivedListener","addNotificationResponseReceivedListener","removeNotificationSubscription","verifyOtp","navigate","mounted","onAuthStateChanged","renderView","styles","skip","fontSize","color","fontWeight","flex","justifyContent","alignItems","marginTop","marginBottom","fontFamily","inputContainer","input","backgroundColor","margin","otpButtonContainer","paddingVertical","optButtonText","position","bottom","textAlign","marginVertical","flexDirection","otpButton","otpText","padding","Keyboard","dismiss","uri","StyleSheet","create","borderRadius","alignContent","marginHorizontal","paddingHorizontal","right"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport {\n  View,\n  Text,\n  KeyboardAvoidingView,\n  TouchableOpacity,\n  ImageBackground,\n  StyleSheet,\n  Dimensions,\n  Alert,\n  TouchableWithoutFeedback,\n  Keyboard,\n  Platform,\n  ScrollView,\n  TextInput,\n} from \"react-native\";\nimport * as Animatable from \"react-native-animatable\";\nimport * as firebase from \"firebase\";\nimport { Spinner } from \"native-base\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport Constants from \"expo-constants\";\nconst WIDTH = Dimensions.get(\"window\").width;\nconst HEIGHT = Dimensions.get(\"window\").height;\n\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\nfunction SignUpScreen({ navigation }) {\n  const [number, setNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [step, setStep] = useState(0);\n  const [code, setCode] = useState(0);\n  const [sessionID, setSessionID] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const { isLoggedIn, setIsLoggedIn, user, setUser } = useContext(AuthContext);\n  const [err, setErr] = useState(\"\");\n  const [numerr, setNumErr] = useState(false);\n  const [emailerr, setEmailErr] = useState(false);\n  const [nameerr, setNameErr] = useState(false);\n  const [passerr, setPassErr] = useState(false);\n  const [otperr, setOtpErr] = useState(false);\n  const [expoToken, setExpoToken] = useState(\"\");\n  const [notification, setNotification] = useState(false);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n\n  // console.log(!email.includes(\"@\"), \"A\");\n\n  const storeToken = async (value) => {\n    try {\n      const userToken = JSON.stringify(value);\n      await AsyncStorage.setItem(\"userToken\", userToken);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const nextStep = () => {\n    setStep(step + 1);\n    setLoaded(false);\n  };\n  const prevStep = () => {\n    setStep(step - 1);\n    setLoaded(false);\n  };\n\n  const sendOtp = () => {\n    console.log(\"clicked\");\n    setEmailErr(false);\n    setNumErr(false);\n    setPassErr(false);\n    setNameErr(false);\n\n    if (\n      number.length === 10 &&\n      email.includes(\"@\") &&\n      password !== \"\" &&\n      name !== \" \"\n    ) {\n      setLoaded(true);\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then((user) => {\n          setUser(user.user);\n\n          firebase.database().ref(`userGeneralInfo/${user.user.uid}`).set({\n            phoneNumber: number,\n            name: name,\n            address: \"\",\n            age: \"\",\n            gender: \"\",\n            aboutMe: \"\",\n            travellerType: \"\",\n            admin: false,\n            pushNotificationToken: expoToken,\n          });\n          setIsLoggedIn(true);\n          storeToken(user.user);\n\n          axios\n            .get(\n              `https://2factor.in/API/V1/4196cbc9-0df2-11eb-9fa5-0200cd936042/SMS/+91${number}/AUTOGEN`\n            )\n            .then((response) => {\n              let session = response.data.Details;\n              console.log(session, \"RESPONSE DATA\");\n              setLoaded(false);\n              setSessionID(session);\n              nextStep();\n            })\n            .catch((err) => {\n              console.log(err, \"kjhk\");\n            });\n        })\n        .catch((err) => {\n          setLoaded(false);\n          setErr(err.message);\n          console.log(err.message);\n        });\n    } else {\n      if (email.includes(\"@\") === false) {\n        setEmailErr(true);\n      }\n      if (number.length !== 10) {\n        setNumErr(true);\n      }\n      if (name == \"\") {\n        setNameErr(true);\n      }\n      if (password.length < 6) {\n        setPassErr(true);\n      }\n    }\n  };\n\n  const registerForPushNotificationsAsync = async () => {\n    let token;\n    if (Constants.isDevice) {\n      const { status: existingStatus } = await Permissions.getAsync(\n        Permissions.NOTIFICATIONS\n      );\n      let finalStatus = existingStatus;\n      console.log(finalStatus, existingStatus, \"stst\");\n\n      if (existingStatus !== \"granted\" || Platform.OS === \"android\") {\n        const { status } = await Permissions.askAsync(\n          Permissions.NOTIFICATIONS\n        );\n        finalStatus = status;\n\n        console.log(finalStatus, \"fianl\");\n      }\n      if (finalStatus !== \"granted\") {\n        alert(\"Failed to get push token for push notification!\");\n        return;\n      }\n      token = (await Notifications.getExpoPushTokenAsync()).data;\n    } else {\n      alert(\"Must use physical device for Push Notifications\");\n    }\n\n    if (Platform.OS === \"android\") {\n      Notifications.setNotificationChannelAsync(\"default\", {\n        name: \"default\",\n        importance: Notifications.AndroidImportance.MAX,\n        vibrationPattern: [0, 250, 250, 250],\n        lightColor: \"#FF231F7C\",\n      });\n    }\n\n    return token;\n  };\n\n  useEffect(() => {\n    registerForPushNotificationsAsync().then((token) => setExpoToken(token));\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener(\n      (notification) => {\n        setNotification(notification);\n      }\n    );\n\n    // This listener is fired whenever a user taps on or interacts with a notification (works when app is foregrounded, backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(\n      (response) => {\n        console.log(response);\n      }\n    );\n\n    return () => {\n      Notifications.removeNotificationSubscription(notificationListener);\n      Notifications.removeNotificationSubscription(responseListener);\n    };\n  }, []);\n\n  const verifyOtp = () => {\n    setLoaded(true);\n    axios\n      .get(\n        `https://2factor.in/API/V1/4196cbc9-0df2-11eb-9fa5-0200cd936042/SMS/VERIFY/${sessionID}/${code}`\n      )\n      .then((response) => {\n        console.log(response, \"RESPONSE\");\n        const status = response.data.Details;\n        console.log(status, \"STATUS\");\n        if (status == \"OTP Matched\") {\n          setName(\"\");\n          setNumber(\"\");\n          setPassword(\"\");\n          setEmail(\"\");\n          setUser(user);\n          setIsLoggedIn(true);\n          storeToken(user);\n          setLoaded(false);\n          navigation.navigate(\"Main\");\n          prevStep();\n        }\n      })\n      .catch((err) => {\n        setLoaded(false);\n        console.log(err, \"err\");\n        setOtpErr(true);\n      });\n  };\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      // setTimeout(() => {\n      //   setLoaded(false);\n      // }, 1000);\n      firebase.auth().onAuthStateChanged((user) => {\n        console.log(user, \"MANIVASAGAM\");\n        setUser(user);\n      });\n    }\n    return () => (mounted = false);\n  }, []);\n\n  const renderView = (step) => {\n    switch (step) {\n      case 0:\n        return (\n          <ScrollView showsVerticalScrollIndicator={false}>\n            <View style={styles.skip}>\n              <TouchableOpacity onPress={() => navigation.navigate(\"Main\")}>\n                <Text\n                  style={{ fontSize: 18, color: \"#333\", fontWeight: \"bold\" }}\n                >\n                  Skip\n                </Text>\n              </TouchableOpacity>\n            </View>\n            <View\n              style={{\n                flex: 1,\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Animatable.View\n                animation=\"fadeInUp\"\n                duration={1500}\n                style={{\n                  alignItems: \"flex-end\",\n                  alignItems: \"center\",\n                  marginTop: HEIGHT / 6,\n                }}\n              >\n                <View\n                  style={{ marginBottom: HEIGHT / 7, alignItems: \"center\" }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 40,\n                      color: \"white\",\n                      fontFamily: \"NewYorkl\",\n                    }}\n                  >\n                    Sign Up\n                  </Text>\n                </View>\n                <View style={styles.inputContainer}>\n                  <TextInput\n                    style={styles.input}\n                    value={name}\n                    placeholder=\"Name\"\n                    keyboardType=\"visible-password\"\n                    keyboardAppearance=\"dark\"\n                    keyboardType=\"email-address\"\n                    onChangeText={(value) => setName(value)}\n                    placeholderTextColor=\"white\"\n                  />\n                </View>\n                {!nameerr ? null : (\n                  <View\n                    style={\n                      ([styles.inputContainer],\n                      { backgroundColor: \"transparent\", marginBottom: 0 })\n                    }\n                  >\n                    <Text\n                      style={{\n                        color: \"yellow\",\n                        marginBottom: 10,\n                        fontSize: 16,\n                      }}\n                    >\n                      Enter Your Name\n                    </Text>\n                  </View>\n                )}\n                <View style={styles.inputContainer}>\n                  <TextInput\n                    style={styles.input}\n                    placeholder=\"Email\"\n                    value={email}\n                    keyboardType=\"visible-password\"\n                    keyboardAppearance=\"dark\"\n                    keyboardType=\"email-address\"\n                    onChangeText={(value) => setEmail(value)}\n                    placeholderTextColor=\"white\"\n                  />\n                </View>\n                {!emailerr ? (\n                  null && err !== \"\"\n                ) : (\n                  <View\n                    style={\n                      ([styles.inputContainer],\n                      { backgroundColor: \"transparent\", marginBottom: 10 })\n                    }\n                  >\n                    <Text style={{ color: \"yellow\", margin: 0, fontSize: 16 }}>\n                      Enter a Valid email id\n                    </Text>\n                    <Text style={{ color: \"yellow\", margin: 0, fontSize: 16 }}>\n                      {err}\n                    </Text>\n                  </View>\n                )}\n                {err == \"\" ? null : (\n                  <View\n                    style={\n                      ([styles.inputContainer],\n                      { backgroundColor: \"transparent\", marginBottom: 10 })\n                    }\n                  >\n                    <Text style={{ color: \"yellow\", margin: 0, fontSize: 14 }}>\n                      {err}\n                    </Text>\n                  </View>\n                )}\n\n                <View style={styles.inputContainer}>\n                  <TextInput\n                    style={styles.input}\n                    value={number}\n                    placeholder=\"Phone Number\"\n                    keyboardAppearance=\"dark\"\n                    keyboardType=\"number-pad\"\n                    placeholderTextColor=\"white\"\n                    onChangeText={(value) => setNumber(value)}\n                  />\n                </View>\n                {!numerr ? null : (\n                  <View\n                    style={\n                      ([styles.inputContainer],\n                      { backgroundColor: \"transparent\", marginBottom: 10 })\n                    }\n                  >\n                    <Text style={{ color: \"yellow\", margin: 0, fontSize: 16 }}>\n                      Phone number should be 10 number\n                    </Text>\n                  </View>\n                )}\n                <View style={styles.inputContainer}>\n                  <TextInput\n                    style={styles.input}\n                    placeholder=\"Password\"\n                    value={password}\n                    keyboardType=\"visible-password\"\n                    keyboardAppearance=\"dark\"\n                    keyboardType=\"email-address\"\n                    placeholderTextColor=\"white\"\n                    passwordRules={true}\n                    secureTextEntry={true}\n                    onChangeText={(value) => setPassword(value)}\n                  />\n                </View>\n                {!passerr ? null : (\n                  <View\n                    style={\n                      ([styles.inputContainer],\n                      { backgroundColor: \"transparent\", marginBottom: 10 })\n                    }\n                  >\n                    <Text style={{ color: \"yellow\", margin: 0, fontSize: 16 }}>\n                      Password should be atleast minimum 6 charecters\n                    </Text>\n                  </View>\n                )}\n\n                <View style={styles.otpButtonContainer}>\n                  {loaded ? (\n                    <View style={{ paddingVertical: -10 }}>\n                      <Spinner color=\"white\" />\n                    </View>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => {\n                        sendOtp();\n                      }}\n                    >\n                      <Text style={styles.optButtonText}>Send Otp</Text>\n                    </TouchableOpacity>\n                  )}\n                </View>\n                <View\n                  style={{\n                    position: \"absolute\",\n                    bottom: 20,\n                    width: WIDTH * 0.9,\n                  }}\n                >\n                  <TouchableOpacity\n                    onPress={() => navigation.navigate(\"SignInScreen\")}\n                  >\n                    <Text\n                      style={{\n                        fontWeight: \"900\",\n                        textAlign: \"center\",\n                        color: \"white\",\n                        marginVertical: WIDTH / 14,\n                      }}\n                    >\n                      Already have an account? Try Sign In\n                    </Text>\n                  </TouchableOpacity>\n                </View>\n              </Animatable.View>\n            </View>\n          </ScrollView>\n        );\n      case 1:\n        return (\n          <View>\n            <View\n              style={{\n                marginVertical: HEIGHT / 10,\n                //  justifyContent: \"t\",\n                position: \"absolute\",\n                bottom: HEIGHT * 0.7,\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 25,\n                  color: \"white\",\n                  // marginBottom: 10,\n                  fontFamily: \"Andika\",\n                }}\n              >\n                Enter the otp send to\n              </Text>\n              <Text\n                style={{ fontSize: 25, color: \"white\", fontFamily: \"Andika\" }}\n              >\n                +91 {number}\n              </Text>\n            </View>\n            <View>\n              <View style={styles.inputContainer}>\n                <TextInput\n                  style={styles.input}\n                  placeholder=\"Enter Otp\"\n                  keyboardAppearance=\"dark\"\n                  keyboardType=\"number-pad\"\n                  onChangeText={(value) => setCode(value)}\n                />\n              </View>\n              {!otperr ? null : (\n                <View\n                  style={\n                    ([styles.inputContainer],\n                    { backgroundColor: \"transparent\", marginBottom: 0 })\n                  }\n                >\n                  <Text\n                    style={{\n                      color: \"red\",\n                      marginBottom: 0,\n                      fontSize: 20,\n                    }}\n                  >\n                    Enter Valid Otp\n                  </Text>\n                </View>\n              )}\n\n              <View style={{ flexDirection: \"row\" }}>\n                <TouchableOpacity\n                  onPress={() => {\n                    prevStep();\n                  }}\n                >\n                  <View style={styles.otpButton}>\n                    <Text style={styles.otpText}> Back</Text>\n                  </View>\n                </TouchableOpacity>\n\n                <View style={[styles.otpButton, { backgroundColor: \"white\" }]}>\n                  {loaded ? (\n                    <View>\n                      <Spinner\n                        color=\"black\"\n                        size=\"large\"\n                        style={{ padding: 20, margin: -15 }}\n                      />\n                    </View>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => {\n                        verifyOtp();\n                      }}\n                    >\n                      <Text style={[styles.otpText, { color: \"black\" }]}>\n                        Sign Up\n                      </Text>\n                    </TouchableOpacity>\n                  )}\n                </View>\n              </View>\n            </View>\n          </View>\n        );\n    }\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n      {/* <KeyboardAvoidingView style={{ flex: 1 }} behavior=\"position\"> */}\n      <Animatable.View\n        duration={1000}\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <ImageBackground\n          style={{\n            width: WIDTH,\n            height: HEIGHT + 30,\n            position: \"absolute\",\n            //zIndex: -2,\n          }}\n          source={{\n            uri:\n              \"https://images.pexels.com/photos/2249602/pexels-photo-2249602.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n          }}\n        />\n        {renderView(step)}\n      </Animatable.View>\n      {/* </KeyboardAvoidingView> */}\n    </TouchableWithoutFeedback>\n  );\n}\n\nexport default SignUpScreen;\n\nconst styles = new StyleSheet.create({\n  otpButton: {\n    marginTop: HEIGHT / 25,\n    marginBottom: 85,\n    backgroundColor: \"black\",\n    borderRadius: 10,\n    width: WIDTH / 3,\n    alignContent: \"center\",\n    marginHorizontal: 20,\n    paddingHorizontal: 10,\n    position: \"relative\",\n  },\n  otpText: {\n    textAlign: \"center\",\n    paddingVertical: 10,\n    color: \"white\",\n    fontSize: 16,\n    fontFamily: \"Andika\",\n    // fontWeight: \"bold\",\n  },\n  input: {\n    marginHorizontal: 20,\n    width: WIDTH * 0.8,\n    height: 60,\n    color: \"white\",\n    fontFamily: \"Andika\",\n  },\n  inputContainer: {\n    height: 60,\n    borderRadius: 10,\n    backgroundColor: \"#0005\",\n    marginBottom: 20,\n  },\n  optButtonText: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"white\",\n    fontSize: 16,\n    fontFamily: \"Andika\",\n    //  fontWeight: \"bold\",\n  },\n  otpButtonContainer: {\n    marginBottom: HEIGHT / 8,\n    backgroundColor: \"black\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\",\n  },\n  skip: {\n    position: \"absolute\",\n    right: 20,\n    color: \"#333\",\n    fontWeight: \"bold\",\n    marginTop: HEIGHT / 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}