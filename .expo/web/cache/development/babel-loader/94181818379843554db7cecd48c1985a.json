{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/AuthScreens/SignInScreen.js\";\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport Constants from \"expo-constants\";\nimport * as firebase from \"firebase\";\nimport * as Animatable from \"react-native-animatable\";\nimport { Spinner } from \"native-base\";\nimport { AuthContext } from \"../../context/AuthContext\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: true,\n              shouldSetBadge: true\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\n\nfunction SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loaded = _useState6[0],\n      setLoaded = _useState6[1];\n\n  var _useContext = useContext(AuthContext),\n      isLoggedIn = _useContext.isLoggedIn,\n      setIsLoggedIn = _useContext.setIsLoggedIn,\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      step = _useState8[0],\n      setStep = _useState8[1];\n\n  console.log(isLoggedIn, \"llll\");\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      err = _useState10[0],\n      setErr = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      req = _useState12[0],\n      setReq = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      expoToken = _useState14[0],\n      setExpoToken = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      notification = _useState16[0],\n      setNotification = _useState16[1];\n\n  var notificationListener = useRef();\n  var responseListener = useRef();\n  console.log(err, \"err\");\n\n  var storeToken = function storeToken(value) {\n    var userToken;\n    return _regeneratorRuntime.async(function storeToken$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            userToken = JSON.stringify(value);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userToken\", userToken));\n\n          case 4:\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var forgetPassword = function forgetPassword() {\n    console.log(email, \"email\");\n    setLoaded(true);\n    firebase.auth().sendPasswordResetEmail(email).then(function (res) {\n      setLoaded(false);\n      setReq(true);\n      setTimeout(function () {\n        setStep(0);\n        setReq(false);\n      }, 3000);\n    }).catch(function (err) {\n      return console.log(err, \"err\");\n    });\n  };\n\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      firebase.auth().onAuthStateChanged(function (user) {\n        console.log(user, \"MANIVASAGAM\");\n        setUser(user);\n      });\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  var updateUserToken = function updateUserToken(user) {\n    console.log(expoToken, \"token\");\n\n    if (user !== null) {\n      firebase.database().ref(\"userGeneralInfo/\" + user.uid).child(\"pushNotificationToken\").set(expoToken);\n    }\n  };\n\n  var signIn = function signIn() {\n    setLoaded(true);\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n      setUser(user);\n      setLoaded(false);\n      console.log(user.user, \"MANI\");\n      storeToken(user.user);\n      updateUserToken(user.user);\n      setEmail(\"\");\n      setPassword(\"\");\n      setIsLoggedIn(true);\n      navigation.navigate(\"Main\");\n    }).catch(function (err) {\n      setLoaded(false);\n      console.log(err, \"po\");\n      setErr(err.message);\n    });\n  };\n\n  var registerForPushNotificationsAsync = function registerForPushNotificationsAsync() {\n    var token, _await$Permissions$ge, existingStatus, finalStatus, _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function registerForPushNotificationsAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!Constants.isDevice) {\n              _context3.next = 22;\n              break;\n            }\n\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n          case 3:\n            _await$Permissions$ge = _context3.sent;\n            existingStatus = _await$Permissions$ge.status;\n            finalStatus = existingStatus;\n            console.log(finalStatus, existingStatus, \"stst\");\n\n            if (!(existingStatus !== \"granted\" || Platform.OS === \"android\")) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n          case 10:\n            _await$Permissions$as = _context3.sent;\n            status = _await$Permissions$as.status;\n            finalStatus = status;\n            console.log(finalStatus, \"fianl\");\n\n          case 14:\n            if (!(finalStatus !== \"granted\")) {\n              _context3.next = 17;\n              break;\n            }\n\n            alert(\"Failed to get push token for push notification!\");\n            return _context3.abrupt(\"return\");\n\n          case 17:\n            _context3.next = 19;\n            return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n          case 19:\n            token = _context3.sent.data;\n            _context3.next = 23;\n            break;\n\n          case 22:\n            alert(\"Must use physical device for Push Notifications\");\n\n          case 23:\n            if (Platform.OS === \"android\") {\n              Notifications.setNotificationChannelAsync(\"default\", {\n                name: \"default\",\n                importance: Notifications.AndroidImportance.MAX,\n                vibrationPattern: [0, 250, 250, 250],\n                lightColor: \"#FF231F7C\"\n              });\n            }\n\n            return _context3.abrupt(\"return\", token);\n\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    registerForPushNotificationsAsync().then(function (token) {\n      return setExpoToken(token);\n    });\n    notificationListener.current = Notifications.addNotificationReceivedListener(function (notification) {\n      setNotification(notification);\n    });\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(function (response) {\n      console.log(response);\n    });\n    return function () {\n      Notifications.removeNotificationSubscription(notificationListener);\n      Notifications.removeNotificationSubscription(responseListener);\n    };\n  }, []);\n\n  var renderForm = function renderForm() {\n    switch (step) {\n      case 0:\n        return React.createElement(Animatable.View, {\n          style: {\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"flex-end\"\n          },\n          animation: \"fadeInUp\",\n          duration: 1500,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            position: \"absolute\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: {\n            marginBottom: HEIGHT / 10,\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 40,\n            fontFamily: \"Andika\",\n            color: \"black\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }\n        }, \"Sign In\")), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: [styles.inputContainer, {\n            marginBottom: 30\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(value) {\n            return setEmail(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }\n        })), React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(value) {\n            return setPassword(value);\n          },\n          passwordRules: true,\n          secureTextEntry: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 19\n          }\n        })), err !== \"\" ? React.createElement(View, {\n          style: [styles.inputContainer, {\n            backgroundColor: \"transparent\"\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: [styles.input, {\n            color: \"red\",\n            fontSize: 16\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }\n        }, err)) : null), React.createElement(View, {\n          style: styles.buttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }\n        }, loaded ? React.createElement(View, {\n          style: {\n            paddingVertical: -10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 19\n          }\n        }, React.createElement(Spinner, {\n          color: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 21\n          }\n        })) : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return signIn();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: styles.signinButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }\n        }, \"Sign In\"))), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return setStep(1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: \"900\",\n            paddingTop: 20,\n            color: \"white\",\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }\n        }, \"Forget Password ?\")), React.createElement(View, {\n          style: {\n            width: WIDTH * 0.9\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"SignUpScreen\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: \"900\",\n            color: \"white\",\n            textAlign: \"center\",\n            marginVertical: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 19\n          }\n        }, \"Don't have a account? Sign Up\")))), React.createElement(ImageBackground, {\n          style: {\n            width: WIDTH,\n            height: HEIGHT,\n            zIndex: -2\n          },\n          source: {\n            uri: \"https://images.pexels.com/photos/207237/pexels-photo-207237.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }\n        }), React.createElement(View, {\n          style: styles.skipButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Main\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            color: \"#333\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }\n        }, \"Home\"))));\n\n      case 1:\n        return React.createElement(Animatable.View, {\n          style: {\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"flex-end\"\n          },\n          animation: \"fadeInUp\",\n          duration: 1500,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            position: \"absolute\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: {\n            marginBottom: HEIGHT / 10,\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 40,\n            fontFamily: \"Andika\",\n            color: \"black\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }\n        }, \"Enter the Email\")), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: [styles.inputContainer, {\n            marginBottom: 30\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(value) {\n            return setEmail(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 19\n          }\n        })), err !== \"\" ? React.createElement(View, {\n          style: [styles.inputContainer, {\n            backgroundColor: \"transparent\"\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: [styles.input, {\n            color: \"red\",\n            fontSize: 16\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 21\n          }\n        }, err)) : null), React.createElement(View, {\n          style: styles.forgetbuttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }\n        }, loaded ? React.createElement(View, {\n          style: {\n            paddingVertical: -10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 19\n          }\n        }, React.createElement(Spinner, {\n          color: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 21\n          }\n        })) : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return forgetPassword();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 19\n          }\n        }, req ? React.createElement(Text, {\n          style: styles.forgetButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 23\n          }\n        }, \"Password reset mail sent to your email .\") : React.createElement(Text, {\n          style: styles.forgetButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 23\n          }\n        }, \"Change password\")))), React.createElement(ImageBackground, {\n          style: {\n            width: WIDTH,\n            height: HEIGHT,\n            zIndex: -2\n          },\n          source: {\n            uri: \"https://images.pexels.com/photos/207237/pexels-photo-207237.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }\n        }));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, renderForm());\n}\n\nexport default SignInScreen;\nvar styles = StyleSheet.create({\n  input: {\n    marginHorizontal: 20,\n    width: WIDTH * 0.8,\n    height: 60,\n    color: \"#FFF\",\n    fontFamily: \"Andika\"\n  },\n  inputContainer: {\n    height: 60,\n    borderRadius: 10,\n    backgroundColor: \"#0005\"\n  },\n  skipButton: {\n    position: \"absolute\",\n    right: 20,\n    top: 0,\n    marginTop: HEIGHT / 20\n  },\n  signinButton: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"black\",\n    fontFamily: \"Andika\",\n    fontSize: 16\n  },\n  buttonContainer: {\n    marginTop: HEIGHT / 25,\n    backgroundColor: \"#FFF\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\"\n  },\n  forgetButton: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"black\",\n    fontFamily: \"Andika\",\n    fontSize: 16\n  },\n  forgetbuttonContainer: {\n    marginBottom: 30,\n    backgroundColor: \"#FFF\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\"\n  }\n});","map":{"version":3,"sources":["/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/AuthScreens/SignInScreen.js"],"names":["React","useState","useContext","useEffect","useRef","AsyncStorage","Notifications","Permissions","Constants","firebase","Animatable","Spinner","AuthContext","WIDTH","Dimensions","get","width","HEIGHT","height","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","SignInScreen","navigation","password","setPassword","email","setEmail","loaded","setLoaded","isLoggedIn","setIsLoggedIn","user","setUser","step","setStep","console","log","err","setErr","req","setReq","expoToken","setExpoToken","notification","setNotification","notificationListener","responseListener","storeToken","value","userToken","JSON","stringify","setItem","forgetPassword","auth","sendPasswordResetEmail","then","res","setTimeout","catch","mounted","onAuthStateChanged","updateUserToken","database","ref","uid","child","set","signIn","signInWithEmailAndPassword","navigate","message","registerForPushNotificationsAsync","isDevice","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","Platform","OS","askAsync","alert","getExpoPushTokenAsync","token","data","setNotificationChannelAsync","name","importance","AndroidImportance","MAX","vibrationPattern","lightColor","current","addNotificationReceivedListener","addNotificationResponseReceivedListener","response","removeNotificationSubscription","renderForm","flex","alignItems","justifyContent","position","marginBottom","fontSize","fontFamily","color","styles","inputContainer","input","backgroundColor","buttonContainer","paddingVertical","signinButton","fontWeight","paddingTop","textAlign","marginVertical","zIndex","uri","skipButton","forgetbuttonContainer","forgetButton","StyleSheet","create","marginHorizontal","borderRadius","right","top","marginTop","alignContent"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Dimensions,\n  ImageBackground,\n  TextInput,\n  KeyboardAvoidingView,\n  TouchableOpacity,\n} from \"react-native\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport Constants from \"expo-constants\";\nimport * as firebase from \"firebase\";\nimport * as Animatable from \"react-native-animatable\";\nimport { Spinner } from \"native-base\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nconst WIDTH = Dimensions.get(\"window\").width;\nconst HEIGHT = Dimensions.get(\"window\").height;\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\nfunction SignInScreen({ navigation }) {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const { isLoggedIn, setIsLoggedIn, user, setUser } = useContext(AuthContext);\n  const [step, setStep] = useState(0);\n  console.log(isLoggedIn, \"llll\");\n  const [err, setErr] = useState(\"\");\n  const [req, setReq] = useState(false);\n  const [expoToken, setExpoToken] = useState(\"\");\n  const [notification, setNotification] = useState(false);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n\n  console.log(err, \"err\");\n\n  const storeToken = async (value) => {\n    try {\n      const userToken = JSON.stringify(value);\n      await AsyncStorage.setItem(\"userToken\", userToken);\n    } catch (e) {\n      // saving error\n      console.log(e);\n    }\n  };\n\n  const forgetPassword = () => {\n    console.log(email, \"email\");\n    setLoaded(true);\n    firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then((res) => {\n        setLoaded(false);\n        setReq(true);\n        setTimeout(() => {\n          setStep(0);\n          setReq(false);\n        }, 3000);\n      })\n      .catch((err) => console.log(err, \"err\"));\n  };\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      firebase.auth().onAuthStateChanged((user) => {\n        console.log(user, \"MANIVASAGAM\");\n        setUser(user);\n      });\n    }\n    return () => (mounted = false);\n  }, []);\n\n  const updateUserToken = (user) => {\n    console.log(expoToken, \"token\");\n    if (user !== null) {\n      firebase\n        .database()\n        .ref(`userGeneralInfo/${user.uid}`)\n        .child(\"pushNotificationToken\")\n        .set(expoToken);\n    }\n  };\n  const signIn = () => {\n    setLoaded(true);\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        setUser(user);\n        setLoaded(false);\n        console.log(user.user, \"MANI\");\n        storeToken(user.user);\n        updateUserToken(user.user);\n        setEmail(\"\");\n        setPassword(\"\");\n        setIsLoggedIn(true);\n        navigation.navigate(\"Main\");\n      })\n      .catch((err) => {\n        setLoaded(false);\n        console.log(err, \"po\");\n        setErr(err.message);\n      });\n  };\n\n  const registerForPushNotificationsAsync = async () => {\n    let token;\n    if (Constants.isDevice) {\n      const { status: existingStatus } = await Permissions.getAsync(\n        Permissions.NOTIFICATIONS\n      );\n      let finalStatus = existingStatus;\n      console.log(finalStatus, existingStatus, \"stst\");\n\n      if (existingStatus !== \"granted\" || Platform.OS === \"android\") {\n        const { status } = await Permissions.askAsync(\n          Permissions.NOTIFICATIONS\n        );\n        finalStatus = status;\n\n        console.log(finalStatus, \"fianl\");\n      }\n      if (finalStatus !== \"granted\") {\n        alert(\"Failed to get push token for push notification!\");\n        return;\n      }\n      token = (await Notifications.getExpoPushTokenAsync()).data;\n    } else {\n      alert(\"Must use physical device for Push Notifications\");\n    }\n\n    if (Platform.OS === \"android\") {\n      Notifications.setNotificationChannelAsync(\"default\", {\n        name: \"default\",\n        importance: Notifications.AndroidImportance.MAX,\n        vibrationPattern: [0, 250, 250, 250],\n        lightColor: \"#FF231F7C\",\n      });\n    }\n\n    return token;\n  };\n\n  useEffect(() => {\n    registerForPushNotificationsAsync().then((token) => setExpoToken(token));\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener(\n      (notification) => {\n        setNotification(notification);\n      }\n    );\n\n    // This listener is fired whenever a user taps on or interacts with a notification (works when app is foregrounded, backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(\n      (response) => {\n        console.log(response);\n      }\n    );\n\n    return () => {\n      Notifications.removeNotificationSubscription(notificationListener);\n      Notifications.removeNotificationSubscription(responseListener);\n    };\n  }, []);\n\n  const renderForm = () => {\n    switch (step) {\n      case 0:\n        return (\n          <Animatable.View\n            style={{\n              flex: 1,\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n            }}\n            animation=\"fadeInUp\"\n            duration={1500}\n          >\n            <View style={{ position: \"absolute\" }}>\n              <View style={{ marginBottom: HEIGHT / 10, alignItems: \"center\" }}>\n                <Text\n                  style={{ fontSize: 40, fontFamily: \"Andika\", color: \"black\" }}\n                >\n                  Sign In\n                </Text>\n              </View>\n              <View>\n                <View style={[styles.inputContainer, { marginBottom: 30 }]}>\n                  <TextInput\n                    style={styles.input}\n                    placeholder=\"Email\"\n                    keyboardType=\"visible-password\"\n                    keyboardAppearance=\"dark\"\n                    keyboardType=\"email-address\"\n                    onChangeText={(value) => setEmail(value)}\n                  />\n                </View>\n\n                <View style={styles.inputContainer}>\n                  <TextInput\n                    style={styles.input}\n                    placeholder=\"Password\"\n                    keyboardType=\"visible-password\"\n                    keyboardAppearance=\"dark\"\n                    keyboardType=\"email-address\"\n                    onChangeText={(value) => setPassword(value)}\n                    passwordRules={true}\n                    secureTextEntry={true}\n                  />\n                </View>\n                {err !== \"\" ? (\n                  <View\n                    style={[\n                      styles.inputContainer,\n                      { backgroundColor: \"transparent\" },\n                    ]}\n                  >\n                    <Text\n                      style={[styles.input, { color: \"red\", fontSize: 16 }]}\n                    >\n                      {err}\n                    </Text>\n                  </View>\n                ) : null}\n              </View>\n\n              <View style={styles.buttonContainer}>\n                {loaded ? (\n                  <View style={{ paddingVertical: -10 }}>\n                    <Spinner color=\"black\" />\n                  </View>\n                ) : (\n                  <TouchableOpacity onPress={() => signIn()}>\n                    <Text style={styles.signinButton}>Sign In</Text>\n                  </TouchableOpacity>\n                )}\n              </View>\n              <TouchableOpacity onPress={() => setStep(1)}>\n                <Text\n                  style={{\n                    fontWeight: \"900\",\n                    paddingTop: 20,\n                    color: \"white\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Forget Password ?\n                </Text>\n              </TouchableOpacity>\n\n              <View style={{ width: WIDTH * 0.9 }}>\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"SignUpScreen\")}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"900\",\n                      color: \"white\",\n                      textAlign: \"center\",\n                      marginVertical: 20,\n                    }}\n                  >\n                    Don't have a account? Sign Up\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n            <ImageBackground\n              style={{ width: WIDTH, height: HEIGHT, zIndex: -2 }}\n              //source={require(\"../../../assets/loginimage.jpg\")}\n              source={{\n                uri:\n                  \"https://images.pexels.com/photos/207237/pexels-photo-207237.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n              }}\n            />\n            <View style={styles.skipButton}>\n              <TouchableOpacity onPress={() => navigation.navigate(\"Main\")}>\n                <Text style={{ fontSize: 18, color: \"#333\" }}>Home</Text>\n              </TouchableOpacity>\n            </View>\n          </Animatable.View>\n        );\n\n      case 1:\n        return (\n          <Animatable.View\n            style={{\n              flex: 1,\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n            }}\n            animation=\"fadeInUp\"\n            duration={1500}\n          >\n            <View style={{ position: \"absolute\" }}>\n              <View style={{ marginBottom: HEIGHT / 10, alignItems: \"center\" }}>\n                <Text\n                  style={{ fontSize: 40, fontFamily: \"Andika\", color: \"black\" }}\n                >\n                  Enter the Email\n                </Text>\n              </View>\n              <View>\n                <View style={[styles.inputContainer, { marginBottom: 30 }]}>\n                  <TextInput\n                    style={styles.input}\n                    placeholder=\"Email\"\n                    keyboardType=\"visible-password\"\n                    keyboardAppearance=\"dark\"\n                    keyboardType=\"email-address\"\n                    onChangeText={(value) => setEmail(value)}\n                  />\n                </View>\n\n                {err !== \"\" ? (\n                  <View\n                    style={[\n                      styles.inputContainer,\n                      { backgroundColor: \"transparent\" },\n                    ]}\n                  >\n                    <Text\n                      style={[styles.input, { color: \"red\", fontSize: 16 }]}\n                    >\n                      {err}\n                    </Text>\n                  </View>\n                ) : null}\n              </View>\n\n              <View style={styles.forgetbuttonContainer}>\n                {loaded ? (\n                  <View style={{ paddingVertical: -10 }}>\n                    <Spinner color=\"black\" />\n                  </View>\n                ) : (\n                  <TouchableOpacity onPress={() => forgetPassword()}>\n                    {req ? (\n                      <Text style={styles.forgetButton}>\n                        Password reset mail sent to your email .\n                      </Text>\n                    ) : (\n                      <Text style={styles.forgetButton}>Change password</Text>\n                    )}\n                  </TouchableOpacity>\n                )}\n              </View>\n            </View>\n            <ImageBackground\n              style={{ width: WIDTH, height: HEIGHT, zIndex: -2 }}\n              //source={require(\"../../../assets/loginimage.jpg\")}\n              source={{\n                uri:\n                  \"https://images.pexels.com/photos/207237/pexels-photo-207237.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n              }}\n            />\n          </Animatable.View>\n        );\n    }\n  };\n\n  return <>{renderForm()}</>;\n}\n\nexport default SignInScreen;\nconst styles = StyleSheet.create({\n  input: {\n    marginHorizontal: 20,\n    width: WIDTH * 0.8,\n    height: 60,\n    color: \"#FFF\",\n    fontFamily: \"Andika\",\n  },\n  inputContainer: {\n    height: 60,\n    borderRadius: 10,\n    backgroundColor: \"#0005\",\n    // borderWidth: 2,\n  },\n  skipButton: {\n    position: \"absolute\",\n    right: 20,\n    top: 0,\n    marginTop: HEIGHT / 20,\n  },\n  signinButton: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"black\",\n    fontFamily: \"Andika\",\n    fontSize: 16,\n    // fontWeight: \"bold\",\n  },\n  buttonContainer: {\n    marginTop: HEIGHT / 25,\n    backgroundColor: \"#FFF\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\",\n  },\n  forgetButton: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"black\",\n    fontFamily: \"Andika\",\n    fontSize: 16,\n    // fontWeight: \"bold\",\n  },\n  forgetbuttonContainer: {\n    marginBottom: 30,\n    backgroundColor: \"#FFF\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}