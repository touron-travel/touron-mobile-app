{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/AuthScreens/SignInScreen.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport * as firebase from \"firebase\";\nimport * as Animatable from \"react-native-animatable\";\nimport { Spinner } from \"native-base\";\nimport { AuthContext } from \"../../context/AuthContext\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\n\nfunction SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loaded = _useState6[0],\n      setLoaded = _useState6[1];\n\n  var _useContext = useContext(AuthContext),\n      isLoggedIn = _useContext.isLoggedIn,\n      setIsLoggedIn = _useContext.setIsLoggedIn,\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      step = _useState8[0],\n      setStep = _useState8[1];\n\n  console.log(isLoggedIn, \"llll\");\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      err = _useState10[0],\n      setErr = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      req = _useState12[0],\n      setReq = _useState12[1];\n\n  console.log(err, \"err\");\n\n  var storeToken = function storeToken(value) {\n    var userToken;\n    return _regeneratorRuntime.async(function storeToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            userToken = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userToken\", userToken));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var forgetPassword = function forgetPassword() {\n    console.log(email, \"email\");\n    setLoaded(true);\n    firebase.auth().sendPasswordResetEmail(email).then(function (res) {\n      setLoaded(false);\n      setReq(true);\n      setTimeout(function () {\n        setStep(0);\n        setReq(false);\n      }, 3000);\n    }).catch(function (err) {\n      return console.log(err, \"err\");\n    });\n  };\n\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      firebase.auth().onAuthStateChanged(function (user) {\n        console.log(user, \"MANIVASAGAM\");\n        setUser(user);\n      });\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  var signIn = function signIn() {\n    setLoaded(true);\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n      setUser(user);\n      setLoaded(false);\n      storeToken(user);\n      setEmail(\"\");\n      setPassword(\"\");\n      setIsLoggedIn(true);\n      navigation.navigate(\"Main\");\n    }).catch(function (err) {\n      setLoaded(false);\n      console.log(err);\n      setErr(err.message);\n    });\n  };\n\n  var renderForm = function renderForm() {\n    switch (step) {\n      case 0:\n        return React.createElement(Animatable.View, {\n          style: {\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"flex-end\"\n          },\n          animation: \"fadeInUp\",\n          duration: 1500,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            position: \"absolute\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: {\n            marginBottom: HEIGHT / 10,\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 40,\n            fontFamily: \"Andika\",\n            color: \"black\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }\n        }, \"Sign In\")), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: [styles.inputContainer, {\n            marginBottom: 30\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(value) {\n            return setEmail(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }\n        })), React.createElement(View, {\n          style: styles.inputContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(value) {\n            return setPassword(value);\n          },\n          passwordRules: true,\n          secureTextEntry: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }\n        })), err !== \"\" ? React.createElement(View, {\n          style: [styles.inputContainer, {\n            backgroundColor: \"transparent\"\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: [styles.input, {\n            color: \"red\",\n            fontSize: 16\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }\n        }, err)) : null), React.createElement(View, {\n          style: styles.buttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }\n        }, loaded ? React.createElement(View, {\n          style: {\n            paddingVertical: -10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }\n        }, React.createElement(Spinner, {\n          color: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }\n        })) : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return signIn();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: styles.signinButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }\n        }, \"Sign In\"))), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return setStep(1);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: \"900\",\n            paddingTop: 20,\n            color: \"white\",\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }\n        }, \"Forget Password ?\")), React.createElement(View, {\n          style: {\n            width: WIDTH * 0.9\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"SignUpScreen\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: \"900\",\n            color: \"white\",\n            textAlign: \"center\",\n            marginVertical: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 19\n          }\n        }, \"Don't have a account? Sign Up\")))), React.createElement(ImageBackground, {\n          style: {\n            width: WIDTH,\n            height: HEIGHT,\n            zIndex: -2\n          },\n          source: {\n            uri: \"https://images.pexels.com/photos/207237/pexels-photo-207237.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }\n        }), React.createElement(View, {\n          style: styles.skipButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Main\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            color: \"#333\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }\n        }, \"Home\"))));\n\n      case 1:\n        return React.createElement(Animatable.View, {\n          style: {\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"flex-end\"\n          },\n          animation: \"fadeInUp\",\n          duration: 1500,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            position: \"absolute\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: {\n            marginBottom: HEIGHT / 10,\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 40,\n            fontFamily: \"Andika\",\n            color: \"black\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }\n        }, \"Enter the Email\")), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: [styles.inputContainer, {\n            marginBottom: 30\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          keyboardType: \"visible-password\",\n          keyboardAppearance: \"dark\",\n          keyboardType: \"email-address\",\n          onChangeText: function onChangeText(value) {\n            return setEmail(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 19\n          }\n        })), err !== \"\" ? React.createElement(View, {\n          style: [styles.inputContainer, {\n            backgroundColor: \"transparent\"\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: [styles.input, {\n            color: \"red\",\n            fontSize: 16\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }\n        }, err)) : null), React.createElement(View, {\n          style: styles.forgetbuttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }\n        }, loaded ? React.createElement(View, {\n          style: {\n            paddingVertical: -10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 19\n          }\n        }, React.createElement(Spinner, {\n          color: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 21\n          }\n        })) : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return forgetPassword();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 19\n          }\n        }, req ? React.createElement(Text, {\n          style: styles.forgetButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 23\n          }\n        }, \"Password reset mail sent to your email .\") : React.createElement(Text, {\n          style: styles.forgetButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 23\n          }\n        }, \"Change password\")))), React.createElement(ImageBackground, {\n          style: {\n            width: WIDTH,\n            height: HEIGHT,\n            zIndex: -2\n          },\n          source: {\n            uri: \"https://images.pexels.com/photos/207237/pexels-photo-207237.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }\n        }));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, renderForm());\n}\n\nexport default SignInScreen;\nvar styles = StyleSheet.create({\n  input: {\n    marginHorizontal: 20,\n    width: WIDTH * 0.8,\n    height: 60,\n    color: \"#FFF\",\n    fontFamily: \"Andika\"\n  },\n  inputContainer: {\n    height: 60,\n    borderRadius: 10,\n    backgroundColor: \"#0005\"\n  },\n  skipButton: {\n    position: \"absolute\",\n    right: 20,\n    top: 0,\n    marginTop: HEIGHT / 20\n  },\n  signinButton: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"black\",\n    fontFamily: \"Andika\",\n    fontSize: 16\n  },\n  buttonContainer: {\n    marginTop: HEIGHT / 25,\n    backgroundColor: \"#FFF\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\"\n  },\n  forgetButton: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"black\",\n    fontFamily: \"Andika\",\n    fontSize: 16\n  },\n  forgetbuttonContainer: {\n    marginBottom: 30,\n    backgroundColor: \"#FFF\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\"\n  }\n});","map":{"version":3,"sources":["/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/AuthScreens/SignInScreen.js"],"names":["React","useState","useContext","useEffect","AsyncStorage","firebase","Animatable","Spinner","AuthContext","WIDTH","Dimensions","get","width","HEIGHT","height","SignInScreen","navigation","password","setPassword","email","setEmail","loaded","setLoaded","isLoggedIn","setIsLoggedIn","user","setUser","step","setStep","console","log","err","setErr","req","setReq","storeToken","value","userToken","JSON","stringify","setItem","forgetPassword","auth","sendPasswordResetEmail","then","res","setTimeout","catch","mounted","onAuthStateChanged","signIn","signInWithEmailAndPassword","navigate","message","renderForm","flex","alignItems","justifyContent","position","marginBottom","fontSize","fontFamily","color","styles","inputContainer","input","backgroundColor","buttonContainer","paddingVertical","signinButton","fontWeight","paddingTop","textAlign","marginVertical","zIndex","uri","skipButton","forgetbuttonContainer","forgetButton","StyleSheet","create","marginHorizontal","borderRadius","right","top","marginTop","alignContent"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Dimensions,\n  ImageBackground,\n  TextInput,\n  KeyboardAvoidingView,\n  TouchableOpacity,\n} from \"react-native\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nimport * as firebase from \"firebase\";\nimport * as Animatable from \"react-native-animatable\";\nimport { Spinner } from \"native-base\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nconst WIDTH = Dimensions.get(\"window\").width;\nconst HEIGHT = Dimensions.get(\"window\").height;\n\nfunction SignInScreen({ navigation }) {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const { isLoggedIn, setIsLoggedIn, user, setUser } = useContext(AuthContext);\n  const [step, setStep] = useState(0);\n  console.log(isLoggedIn, \"llll\");\n  const [err, setErr] = useState(\"\");\n  const [req, setReq] = useState(false);\n\n  console.log(err, \"err\");\n\n  const storeToken = async (value) => {\n    try {\n      const userToken = JSON.stringify(value);\n      await AsyncStorage.setItem(\"userToken\", userToken);\n    } catch (e) {\n      // saving error\n      console.log(e);\n    }\n  };\n\n  const forgetPassword = () => {\n    console.log(email, \"email\");\n    setLoaded(true);\n    firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then((res) => {\n        setLoaded(false);\n        setReq(true);\n        setTimeout(() => {\n          setStep(0);\n          setReq(false);\n        }, 3000);\n      })\n      .catch((err) => console.log(err, \"err\"));\n  };\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      firebase.auth().onAuthStateChanged((user) => {\n        console.log(user, \"MANIVASAGAM\");\n        setUser(user);\n      });\n    }\n    return () => (mounted = false);\n  }, []);\n\n  const signIn = () => {\n    setLoaded(true);\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        setUser(user);\n        setLoaded(false);\n        storeToken(user);\n        setEmail(\"\");\n        setPassword(\"\");\n        setIsLoggedIn(true);\n        navigation.navigate(\"Main\");\n      })\n      .catch((err) => {\n        setLoaded(false);\n        console.log(err);\n        setErr(err.message);\n      });\n  };\n\n  const renderForm = () => {\n    switch (step) {\n      case 0:\n        return (\n          <Animatable.View\n            style={{\n              flex: 1,\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n            }}\n            animation=\"fadeInUp\"\n            duration={1500}\n          >\n            <View style={{ position: \"absolute\" }}>\n              <View style={{ marginBottom: HEIGHT / 10, alignItems: \"center\" }}>\n                <Text\n                  style={{ fontSize: 40, fontFamily: \"Andika\", color: \"black\" }}\n                >\n                  Sign In\n                </Text>\n              </View>\n              <View>\n                <View style={[styles.inputContainer, { marginBottom: 30 }]}>\n                  <TextInput\n                    style={styles.input}\n                    placeholder=\"Email\"\n                    keyboardType=\"visible-password\"\n                    keyboardAppearance=\"dark\"\n                    keyboardType=\"email-address\"\n                    onChangeText={(value) => setEmail(value)}\n                  />\n                </View>\n\n                <View style={styles.inputContainer}>\n                  <TextInput\n                    style={styles.input}\n                    placeholder=\"Password\"\n                    keyboardType=\"visible-password\"\n                    keyboardAppearance=\"dark\"\n                    keyboardType=\"email-address\"\n                    onChangeText={(value) => setPassword(value)}\n                    passwordRules={true}\n                    secureTextEntry={true}\n                  />\n                </View>\n                {err !== \"\" ? (\n                  <View\n                    style={[\n                      styles.inputContainer,\n                      { backgroundColor: \"transparent\" },\n                    ]}\n                  >\n                    <Text\n                      style={[styles.input, { color: \"red\", fontSize: 16 }]}\n                    >\n                      {err}\n                    </Text>\n                  </View>\n                ) : null}\n              </View>\n\n              <View style={styles.buttonContainer}>\n                {loaded ? (\n                  <View style={{ paddingVertical: -10 }}>\n                    <Spinner color=\"black\" />\n                  </View>\n                ) : (\n                  <TouchableOpacity onPress={() => signIn()}>\n                    <Text style={styles.signinButton}>Sign In</Text>\n                  </TouchableOpacity>\n                )}\n              </View>\n              <TouchableOpacity onPress={() => setStep(1)}>\n                <Text\n                  style={{\n                    fontWeight: \"900\",\n                    paddingTop: 20,\n                    color: \"white\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Forget Password ?\n                </Text>\n              </TouchableOpacity>\n\n              <View style={{ width: WIDTH * 0.9 }}>\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"SignUpScreen\")}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"900\",\n                      color: \"white\",\n                      textAlign: \"center\",\n                      marginVertical: 20,\n                    }}\n                  >\n                    Don't have a account? Sign Up\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n            <ImageBackground\n              style={{ width: WIDTH, height: HEIGHT, zIndex: -2 }}\n              //source={require(\"../../../assets/loginimage.jpg\")}\n              source={{\n                uri:\n                  \"https://images.pexels.com/photos/207237/pexels-photo-207237.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n              }}\n            />\n            <View style={styles.skipButton}>\n              <TouchableOpacity onPress={() => navigation.navigate(\"Main\")}>\n                <Text style={{ fontSize: 18, color: \"#333\" }}>Home</Text>\n              </TouchableOpacity>\n            </View>\n          </Animatable.View>\n        );\n\n      case 1:\n        return (\n          <Animatable.View\n            style={{\n              flex: 1,\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n            }}\n            animation=\"fadeInUp\"\n            duration={1500}\n          >\n            <View style={{ position: \"absolute\" }}>\n              <View style={{ marginBottom: HEIGHT / 10, alignItems: \"center\" }}>\n                <Text\n                  style={{ fontSize: 40, fontFamily: \"Andika\", color: \"black\" }}\n                >\n                  Enter the Email\n                </Text>\n              </View>\n              <View>\n                <View style={[styles.inputContainer, { marginBottom: 30 }]}>\n                  <TextInput\n                    style={styles.input}\n                    placeholder=\"Email\"\n                    keyboardType=\"visible-password\"\n                    keyboardAppearance=\"dark\"\n                    keyboardType=\"email-address\"\n                    onChangeText={(value) => setEmail(value)}\n                  />\n                </View>\n\n                {err !== \"\" ? (\n                  <View\n                    style={[\n                      styles.inputContainer,\n                      { backgroundColor: \"transparent\" },\n                    ]}\n                  >\n                    <Text\n                      style={[styles.input, { color: \"red\", fontSize: 16 }]}\n                    >\n                      {err}\n                    </Text>\n                  </View>\n                ) : null}\n              </View>\n\n              <View style={styles.forgetbuttonContainer}>\n                {loaded ? (\n                  <View style={{ paddingVertical: -10 }}>\n                    <Spinner color=\"black\" />\n                  </View>\n                ) : (\n                  <TouchableOpacity onPress={() => forgetPassword()}>\n                    {req ? (\n                      <Text style={styles.forgetButton}>\n                        Password reset mail sent to your email .\n                      </Text>\n                    ) : (\n                      <Text style={styles.forgetButton}>Change password</Text>\n                    )}\n                  </TouchableOpacity>\n                )}\n              </View>\n            </View>\n            <ImageBackground\n              style={{ width: WIDTH, height: HEIGHT, zIndex: -2 }}\n              //source={require(\"../../../assets/loginimage.jpg\")}\n              source={{\n                uri:\n                  \"https://images.pexels.com/photos/207237/pexels-photo-207237.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n              }}\n            />\n          </Animatable.View>\n        );\n    }\n  };\n\n  return <>{renderForm()}</>;\n}\n\nexport default SignInScreen;\nconst styles = StyleSheet.create({\n  input: {\n    marginHorizontal: 20,\n    width: WIDTH * 0.8,\n    height: 60,\n    color: \"#FFF\",\n    fontFamily: \"Andika\",\n  },\n  inputContainer: {\n    height: 60,\n    borderRadius: 10,\n    backgroundColor: \"#0005\",\n    // borderWidth: 2,\n  },\n  skipButton: {\n    position: \"absolute\",\n    right: 20,\n    top: 0,\n    marginTop: HEIGHT / 20,\n  },\n  signinButton: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"black\",\n    fontFamily: \"Andika\",\n    fontSize: 16,\n    // fontWeight: \"bold\",\n  },\n  buttonContainer: {\n    marginTop: HEIGHT / 25,\n    backgroundColor: \"#FFF\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\",\n  },\n  forgetButton: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"black\",\n    fontFamily: \"Andika\",\n    fontSize: 16,\n    // fontWeight: \"bold\",\n  },\n  forgetbuttonContainer: {\n    marginBottom: 30,\n    backgroundColor: \"#FFF\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}