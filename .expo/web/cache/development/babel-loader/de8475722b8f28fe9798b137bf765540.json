{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/SelfPlanTourScreens/SelfPlanningFormScreen.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport useData from \"../../hooks/useData\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport touron from \"../../api/touron\";\nimport { AuthContext } from \"../../context/AuthContext\";\nvar HEIGHT = Dimensions.get(\"window\").height;\nvar WIDTH = Dimensions.get(\"window\").width;\n\nvar SelfPlanForm = function SelfPlanForm(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      cities = _useContext.cities;\n\n  var _useState = useState(cities),\n      _useState2 = _slicedToArray(_useState, 2),\n      city = _useState2[0],\n      setCity = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      destination = _useState4[0],\n      setDestination = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedCity = _useState6[0],\n      setSelectedCity = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cityDates = _useState8[0],\n      setCityDates = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loader = _useState10[0],\n      setLoader = _useState10[1];\n\n  console.log(city);\n\n  var getCity = function getCity() {\n    var cities = city.filter(function (c) {\n      return c.cityName.trim().toUpperCase().includes(destination.toUpperCase().trim());\n    });\n    var countries = city.filter(function (c) {\n      return c.countryName.trim().toUpperCase().includes(destination.toUpperCase().trim());\n    });\n    var result = [].concat(_toConsumableArray(cities), _toConsumableArray(countries));\n    return result;\n  };\n\n  var showLoader = function showLoader() {\n    setTimeout(function () {\n      setLoader(true);\n    }, 300);\n  };\n\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      showLoader();\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Select your cities\"), React.createElement(View, {\n    style: styles.background,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(Feather, {\n    name: \"search\",\n    style: styles.iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputStyle,\n    placeholder: \"Search\",\n    onChangeText: function onChangeText(value) {\n      return setDestination(value);\n    },\n    onSubmitEditing: getCity,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), !loader ? React.createElement(ActivityIndicator, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }) : React.createElement(FlatList, {\n    data: getCity(),\n    keyExtractor: function keyExtractor(item) {\n      return item.cityName;\n    },\n    showsVerticalScrollIndicator: false,\n    numColumns: 3,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          setSelectedCity([].concat(_toConsumableArray(selectedCity), [item.cityName]));\n          setCityDates([].concat(_toConsumableArray(cityDates), [{\n            name: item.cityName,\n            imageUrl: item.imageUrl\n          }]));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      }, React.createElement(Image, {\n        style: styles.cityImage,\n        source: {\n          uri: item.imageUrl\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      })), React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          marginBottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }\n      }, item.cityName)), selectedCity.includes(item.cityName) ? React.createElement(View, {\n        style: {\n          position: \"absolute\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          var city = selectedCity.filter(function (c) {\n            return c !== item.cityName;\n          });\n          setSelectedCity(city);\n          var dates = cityDates.filter(function (c) {\n            return c.name !== item.cityName;\n          });\n          setCityDates(dates);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: styles.cityImage,\n        source: require(\"../../../assets/ticks.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 23\n        }\n      }))) : null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"OverviewCities\", {\n        cities: cityDates,\n        selectedCity: selectedCity\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.proceedButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: \"white\",\n      fontFamily: \"Andika\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, \"Select Cities and Proceed\"))));\n};\n\nexport default SelfPlanForm;\nvar styles = StyleSheet.create({\n  cityImage: {\n    width: 100,\n    height: 100,\n    margin: 10,\n    borderRadius: 100\n  },\n  proceedButton: {\n    width: WIDTH * 0.9,\n    backgroundColor: \"#626E7B\",\n    borderRadius: 10,\n    padding: 5,\n    alignItems: \"center\",\n    marginBottom: 5\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginTop: HEIGHT / 12\n  },\n  dateContainer: {\n    width: WIDTH,\n    marginHorizontal: 20\n  },\n  background: {\n    backgroundColor: \"#fff\",\n    height: HEIGHT / 15,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    marginVertical: 10,\n    marginHorizontal: WIDTH / 18\n  },\n  inputStyle: {\n    fontSize: 18,\n    flex: 1\n  },\n  iconStyle: {\n    fontSize: 30,\n    alignSelf: \"center\",\n    marginHorizontal: 15\n  }\n});","map":{"version":3,"sources":["/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/SelfPlanTourScreens/SelfPlanningFormScreen.js"],"names":["React","useState","useEffect","useContext","useData","Feather","TouchableWithoutFeedback","touron","AuthContext","HEIGHT","Dimensions","get","height","WIDTH","width","SelfPlanForm","navigation","cities","city","setCity","destination","setDestination","selectedCity","setSelectedCity","cityDates","setCityDates","loader","setLoader","console","log","getCity","filter","c","cityName","trim","toUpperCase","includes","countries","countryName","result","showLoader","setTimeout","mounted","styles","container","background","iconStyle","inputStyle","value","flex","justifyContent","alignItems","item","name","imageUrl","cityImage","uri","textAlign","marginBottom","position","dates","require","navigate","proceedButton","fontSize","color","fontFamily","StyleSheet","create","margin","borderRadius","backgroundColor","padding","marginTop","dateContainer","marginHorizontal","flexDirection","marginVertical","alignSelf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ActivityIndicator,\n  TextInput,\n  TouchableOpacity,\n  Image,\n  FlatList,\n  Dimensions,\n} from \"react-native\";\n\nimport useData from \"../../hooks/useData\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport touron from \"../../api/touron\";\nimport { AuthContext } from \"../../context/AuthContext\";\nconst HEIGHT = Dimensions.get(\"window\").height;\nconst WIDTH = Dimensions.get(\"window\").width;\n//  c.countryName.trim().toUpperCase() == destination1.trim().toUpperCase()\nconst SelfPlanForm = ({ navigation }) => {\n  const { cities } = useContext(AuthContext);\n  const [city, setCity] = useState(cities);\n  const [destination, setDestination] = useState(\"\");\n  const [selectedCity, setSelectedCity] = useState([]);\n  const [cityDates, setCityDates] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  console.log(city);\n\n  const getCity = () => {\n    const cities = city.filter((c) => {\n      // if (destination1 == \"\")\n      return c.cityName\n        .trim()\n        .toUpperCase()\n        .includes(destination.toUpperCase().trim());\n    });\n\n    const countries = city.filter((c) => {\n      // if (destination1 == \"\")\n      return c.countryName\n        .trim()\n        .toUpperCase()\n        .includes(destination.toUpperCase().trim());\n    });\n\n    //  setLoader(true);\n    const result = [...cities, ...countries];\n    return result;\n  };\n\n  // const getCities = async () => {\n  //   try {\n  //     const cityResponse = await touron.get(`/city`);\n  //     console.log(cityResponse.data, \"lpllplpll\");\n  //     setCity(cityResponse.data);\n  //     // setTour(Response.data);\n  //   } catch (err) {\n  //     setErrorMessage(\"Something went wrong\");\n  //   }\n  // };\n\n  const showLoader = () => {\n    setTimeout(() => {\n      setLoader(true);\n    }, 300);\n  };\n\n  useEffect(() => {\n    // getCities();\n    let mounted = true;\n    if (mounted) {\n      showLoader();\n    }\n    return () => (mounted = false);\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Text>Select your cities</Text>\n      <View style={styles.background}>\n        <Feather name=\"search\" style={styles.iconStyle}></Feather>\n        <TextInput\n          style={styles.inputStyle}\n          placeholder=\"Search\"\n          onChangeText={(value) => setDestination(value)}\n          onSubmitEditing={getCity}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n        />\n      </View>\n\n      {!loader ? (\n        <ActivityIndicator\n          style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\n          size=\"large\"\n        />\n      ) : (\n        <FlatList\n          data={getCity()}\n          keyExtractor={(item) => item.cityName}\n          showsVerticalScrollIndicator={false}\n          numColumns={3}\n          renderItem={({ item }) => {\n            return (\n              <View style={{ alignItems: \"center\" }}>\n                <View>\n                  <TouchableWithoutFeedback\n                    onPress={() => {\n                      setSelectedCity([...selectedCity, item.cityName]);\n                      setCityDates([\n                        ...cityDates,\n                        {\n                          name: item.cityName,\n                          imageUrl: item.imageUrl,\n                        },\n                      ]);\n                    }}\n                  >\n                    <Image\n                      style={styles.cityImage}\n                      source={{ uri: item.imageUrl }}\n                    />\n                  </TouchableWithoutFeedback>\n                  <Text style={{ textAlign: \"center\", marginBottom: 5 }}>\n                    {item.cityName}\n                  </Text>\n                </View>\n\n                {selectedCity.includes(item.cityName) ? (\n                  <View style={{ position: \"absolute\" }}>\n                    <TouchableWithoutFeedback\n                      onPress={() => {\n                        let city = selectedCity.filter((c) => {\n                          return c !== item.cityName;\n                        });\n                        setSelectedCity(city);\n\n                        let dates = cityDates.filter((c) => {\n                          return c.name !== item.cityName;\n                        });\n                        setCityDates(dates);\n                      }}\n                    >\n                      <Image\n                        style={styles.cityImage}\n                        source={require(\"../../../assets/ticks.png\")}\n                      />\n                    </TouchableWithoutFeedback>\n                  </View>\n                ) : null}\n              </View>\n            );\n          }}\n        />\n      )}\n\n      <TouchableOpacity\n        onPress={() =>\n          navigation.navigate(\"OverviewCities\", {\n            cities: cityDates,\n            selectedCity: selectedCity,\n          })\n        }\n      >\n        <View style={styles.proceedButton}>\n          <Text style={{ fontSize: 20, color: \"white\", fontFamily: \"Andika\" }}>\n            Select Cities and Proceed\n          </Text>\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default SelfPlanForm;\n\nconst styles = StyleSheet.create({\n  cityImage: {\n    width: 100,\n    height: 100,\n    margin: 10,\n    borderRadius: 100,\n  },\n  proceedButton: {\n    width: WIDTH * 0.9,\n    backgroundColor: \"#626E7B\",\n    borderRadius: 10,\n    padding: 5,\n    alignItems: \"center\",\n    marginBottom: 5,\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginTop: HEIGHT / 12,\n  },\n  dateContainer: {\n    width: WIDTH,\n    marginHorizontal: 20,\n  },\n  background: {\n    backgroundColor: \"#fff\",\n    height: HEIGHT / 15,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    marginVertical: 10,\n    marginHorizontal: WIDTH / 18,\n  },\n  inputStyle: {\n    fontSize: 18,\n    flex: 1,\n  },\n  iconStyle: {\n    fontSize: 30,\n    alignSelf: \"center\",\n    marginHorizontal: 15,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}