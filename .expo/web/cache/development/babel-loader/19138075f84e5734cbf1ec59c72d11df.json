{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/TourScreens/TourHomeScreen.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport firebase from \"firebase\";\nimport touron from \"../../api/touron\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport { AntDesign, Feather, MaterialIcons } from \"@expo/vector-icons\";\nimport { Surface } from \"react-native-paper\";\n\nvar TourHomeScreen = function TourHomeScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(AuthContext),\n      isLoggedIn = _useContext.isLoggedIn,\n      user = _useContext.user,\n      tours = _useContext.tours;\n\n  var _useState = useState(tours),\n      _useState2 = _slicedToArray(_useState, 2),\n      tour = _useState2[0],\n      setTour = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      step = _useState6[0],\n      setStep = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tourLoaded = _useState8[0],\n      settourLoaded = _useState8[1];\n\n  var nextStep = function nextStep() {\n    setIdealType(\"\");\n    setTourType(\"\");\n    setTourCategory(\"\");\n    setStep(step + 1);\n  };\n\n  var cancel = function cancel() {\n    setIdealType(\"\");\n    setTourType(\"\");\n    setTourCategory(\"\");\n    setStep(step - 1);\n    setSelected([]);\n  };\n\n  var prevStep = function prevStep() {\n    setLoader(true);\n    setStep(step - 1);\n    setTimeout(function () {\n      setLoader(false);\n    }, 2000);\n  };\n\n  var getSavedTours = function getSavedTours() {\n    var sT = [];\n    var sTNames = [];\n\n    if (isLoggedIn) {\n      firebase.database().ref(\"saved-tours/\" + user.uid).on(\"value\", function (data) {\n        if (data) {\n          data.forEach(function (c) {\n            sT.push(c.val());\n            sTNames.push(c.val().tourName);\n          });\n        }\n      });\n      return [sT, sTNames];\n    } else {\n      return [sT, sTNames];\n    }\n  };\n\n  var _getSavedTours = getSavedTours(),\n      _getSavedTours2 = _slicedToArray(_getSavedTours, 2),\n      sT = _getSavedTours2[0],\n      sTNames = _getSavedTours2[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setErrorMessage = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loader = _useState12[0],\n      setLoader = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      mainLoaded = _useState14[0],\n      setMainLoaded = _useState14[1];\n\n  var _useState15 = useState(sTNames),\n      _useState16 = _slicedToArray(_useState15, 2),\n      savedTours = _useState16[0],\n      setSavedTours = _useState16[1];\n\n  var _useState17 = useState(sT),\n      _useState18 = _slicedToArray(_useState17, 2),\n      savedToursDetails = _useState18[0],\n      setSavedToursDetails = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      tourName = _useState20[0],\n      setTourName = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      idealType = _useState22[0],\n      setIdealType = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      tourType = _useState24[0],\n      setTourType = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      tourCategory = _useState26[0],\n      setTourCategory = _useState26[1];\n\n  var _useState27 = useState(1),\n      _useState28 = _slicedToArray(_useState27, 2),\n      page = _useState28[0],\n      setPage = _useState28[1];\n\n  var _useState29 = useState(10),\n      _useState30 = _slicedToArray(_useState29, 2),\n      pageSize = _useState30[0],\n      setpageSize = _useState30[1];\n\n  var indexValue = 20;\n\n  var showLoader = function showLoader() {\n    setTimeout(function () {\n      setLoader(false);\n      setMainLoaded(false);\n    }, 2000);\n  };\n\n  var search = function search() {\n    if (tour.length > 0) {\n      var d = tour.filter(function (c) {\n        return c.tourName.trim().toUpperCase().includes(tourName.trim().toUpperCase().trim());\n      });\n      return d;\n    }\n  };\n\n  useEffect(function () {\n    if (isLoggedIn) {\n      if (savedToursDetails.length > 0) {\n        firebase.database().ref(\"saved-tours/\" + user.uid).set(savedToursDetails).then(function (data) {\n          return console.log(data);\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, [tour, savedToursDetails, indexValue]);\n\n  var getTour = function getTour() {\n    var cityname, tourResponse;\n    return _regeneratorRuntime.async(function getTour$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!route.params.name) {\n              _context.next = 15;\n              break;\n            }\n\n            cityname = route.params.name;\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(touron.get(\"/tour/cityname/\" + cityname));\n\n          case 5:\n            tourResponse = _context.sent;\n\n            if (tourResponse.data.length === 0) {\n              setTour([]);\n            }\n\n            setTour(tourResponse.data);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n            setErrorMessage(\"Something went wrong\");\n\n          case 13:\n            _context.next = 15;\n            break;\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 10]], Promise);\n  };\n\n  var searchTour = function searchTour() {\n    var tourResponse, _tourResponse, _tourResponse2;\n\n    return _regeneratorRuntime.async(function searchTour$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoader(true);\n            setStep(step - 1);\n\n            if (!(idealType != \"\")) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(touron.get(\"/tour/idealtype/\" + idealType));\n\n          case 5:\n            tourResponse = _context2.sent;\n            setTour(tourResponse.data);\n            setLoader(false);\n\n          case 8:\n            if (!(tourType != \"\")) {\n              _context2.next = 14;\n              break;\n            }\n\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(touron.get(\"/tour/tourtype/\" + tourType));\n\n          case 11:\n            _tourResponse = _context2.sent;\n            setTour(_tourResponse.data);\n            setLoader(false);\n\n          case 14:\n            if (!(tourCategory != \"\")) {\n              _context2.next = 20;\n              break;\n            }\n\n            _context2.next = 17;\n            return _regeneratorRuntime.awrap(touron.get(\"/tour/tourcategory/\" + tourCategory));\n\n          case 17:\n            _tourResponse2 = _context2.sent;\n            setTour(_tourResponse2.data);\n            setLoader(false);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    showLoader();\n    var mounted = true;\n\n    if (mounted) {\n      getTour();\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, [idealType, tourCategory, tourType]);\n\n  var render = function render(step) {\n    var idealFor = [{\n      name: \"Family\"\n    }, {\n      name: \"Family and kids\"\n    }, {\n      name: \"Solo\"\n    }, {\n      name: \"Mature Couple\"\n    }, {\n      name: \"Young Couple\"\n    }];\n    var tourType = [{\n      name: \"Full Day Tour\"\n    }, {\n      name: \"Half Day Tour\"\n    }, {\n      name: \"Night Tour\"\n    }];\n    var tourCategory = [{\n      name: \"Activities\"\n    }, {\n      name: \"Hop On & Off\"\n    }, {\n      name: \"Attraction\"\n    }, {\n      name: \"Learning\"\n    }];\n\n    switch (step) {\n      case 0:\n        return React.createElement(View, {\n          style: ([styles.container], {\n            backgroundColor: tour.length === 0 ? \"white\" : \"transparent\",\n            flex: 1\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 11\n          }\n        }, loader ? React.createElement(ActivityIndicator, {\n          size: \"large\",\n          style: {\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }\n        }) : React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: {\n            height: HEIGHT / 8,\n            padding: 10,\n            marginTop: Platform.OS === \"ios\" ? HEIGHT / 12 : 40,\n            width: WIDTH,\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 19\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 21\n          }\n        }, React.createElement(Feather, {\n          name: \"arrow-left\",\n          style: {\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 23\n          }\n        })), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 23,\n            fontFamily: \"NewYorkl\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 23\n          }\n        }, \"Tours\")), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return nextStep();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 21\n          }\n        }, React.createElement(MaterialIcons, {\n          name: \"sort\",\n          size: 24,\n          color: \"black\",\n          style: {\n            paddingRight: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 23\n          }\n        }))), React.createElement(View, {\n          style: styles.background,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 19\n          }\n        }, React.createElement(Feather, {\n          name: \"search\",\n          style: styles.iconStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 21\n          }\n        }), React.createElement(TextInput, {\n          style: styles.inputStyle,\n          placeholder: \"Search\",\n          onChangeText: function onChangeText(value) {\n            return setTourName(value);\n          },\n          onSubmitEditing: search,\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          keyboardType: \"email-address\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 21\n          }\n        }))), tour.length === 0 && route.params.name ? React.createElement(View, {\n          style: {\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }\n        }, React.createElement(Image, {\n          style: {\n            width: WIDTH * 0.9,\n            height: WIDTH * 0.9\n          },\n          source: require(\"../../../assets/oops.jpg\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 23\n          }\n        })), React.createElement(Text, {\n          style: {\n            fontFamily: \"Avenir\",\n            fontSize: 23\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 21\n          }\n        }, \"No Tours Found for \", route.params.name)) : React.createElement(React.Fragment, null, mainLoaded ? React.createElement(View, {\n          style: {\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 23\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          style: {\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }\n        })) : React.createElement(FlatList, {\n          showsVerticalScrollIndicator: false,\n          keyExtractor: function keyExtractor(c) {\n            return c._id;\n          },\n          data: search(),\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item,\n                index = _ref2.index;\n            return React.createElement(React.Fragment, null, React.createElement(View, {\n              style: styles.imageContainer,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 31\n              }\n            }, React.createElement(View, {\n              style: styles.shadow,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 33\n              }\n            }, React.createElement(TouchableOpacity, {\n              onPress: function onPress() {\n                navigation.navigate(\"TourInner\", {\n                  item: item\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 35\n              }\n            }, React.createElement(Image, {\n              style: styles.image,\n              source: {\n                uri: item.imageUrl\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 37\n              }\n            })), React.createElement(View, {\n              style: {\n                flexDirection: \"row\",\n                position: \"absolute\",\n                width: WIDTH * 0.9,\n                justifyContent: \"space-between\",\n                alignItems: \"center\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 35\n              }\n            }, React.createElement(LinearGradient, {\n              colors: [\"#FFA26E\", \"#E36D5D\"],\n              style: {\n                marginHorizontals: 15,\n                marginTop: 10,\n                padding: 2,\n                borderRadius: 5,\n                left: 10\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 37\n              }\n            }, React.createElement(View, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 39\n              }\n            }, React.createElement(Text, {\n              style: styles.cityname,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 41\n              }\n            }, item.cityName)))), React.createElement(View, {\n              style: styles.tourDetails,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 35\n              }\n            }, React.createElement(View, {\n              style: {\n                flexDirection: \"row\",\n                justifyContent: \"space-between\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 37\n              }\n            }, React.createElement(Text, {\n              style: {\n                color: \"#8395A7\",\n                fontSize: 15,\n                fontFamily: \"Andika\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 39\n              }\n            }, item.tourCategory.join(\",\")), React.createElement(View, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 39\n              }\n            }, savedTours.includes(item.tourName) ? React.createElement(TouchableOpacity, {\n              onPress: function onPress() {\n                var filterData = savedTours.filter(function (c) {\n                  return c != item.tourName;\n                });\n                setSavedTours(filterData);\n                var filterDetails = savedToursDetails.filter(function (c) {\n                  return c.tourName !== item.tourName;\n                });\n                setSavedToursDetails(filterDetails);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 43\n              }\n            }, React.createElement(AntDesign, {\n              style: {\n                marginRight: 0\n              },\n              name: \"heart\",\n              size: 24,\n              color: \"#FF4500\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 45\n              }\n            })) : React.createElement(TouchableOpacity, {\n              onPress: function onPress() {\n                if (isLoggedIn) {\n                  setSavedTours([].concat(_toConsumableArray(savedTours), [item.tourName]));\n                  setSavedToursDetails([].concat(_toConsumableArray(savedToursDetails), [item]));\n                } else {\n                  navigation.navigate(\"SignUpScreen\");\n                }\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 43\n              }\n            }, React.createElement(Image, {\n              style: {\n                height: 35,\n                width: 35\n              },\n              source: require(\"../../../assets/heart.png\"),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 45\n              }\n            })))), React.createElement(Text, {\n              style: {\n                fontSize: 18,\n                fontFamily: \"NewYorkl\",\n                marginTop: 2\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 37\n              }\n            }, item.tourName), React.createElement(Text, {\n              style: {\n                color: \"#8395A7\",\n                fontSize: 15,\n                marginVertical: 5,\n                fontFamily: \"Andika\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 37\n              }\n            }, item.tourType), React.createElement(View, {\n              style: {\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 37\n              }\n            }, React.createElement(View, {\n              style: {\n                padding: 8,\n                marginTop: 4,\n                borderWidth: 1,\n                borderColor: \"#333\",\n                borderRadius: 14\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 39\n              }\n            }, item.tourCost.adult == 15000 && item.tourCost.adult >= 10000 ? React.createElement(Text, {\n              style: {\n                fontSize: 13,\n                fontFamily: \"Andika\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 43\n              }\n            }, \"\\u20B9\\u20B9\\u20B9\\u20B9 - High\") : item.tourCost.adult < 10000 && item.tourCost.adult >= 5000 ? React.createElement(Text, {\n              style: {\n                fontSize: 13,\n                fontFamily: \"NewYorkl\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 43\n              }\n            }, \"\\u20B9\\u20B9\\u20B9 - Medium\") : item.tourCost.adult > 2500 && item.tourCost.adult < 500205 ? React.createElement(Text, {\n              style: {\n                fontSize: 13,\n                fontFamily: \"NewYorkl\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 43\n              }\n            }, \"\\u20B9\\u20B9 - Low\") : React.createElement(Text, {\n              style: {\n                fontSize: 13,\n                fontFamily: \"NewYorkl\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 43\n              }\n            }, \"\\u20B9 - Very Low\")), React.createElement(View, {\n              style: {\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 39\n              }\n            }, React.createElement(Image, {\n              style: {\n                height: 25,\n                width: 25,\n                marginRight: 4\n              },\n              source: require(\"../../../assets/Star.png\"),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 41\n              }\n            }), React.createElement(Text, {\n              style: {\n                fontSize: 18,\n                fontFamily: \"NewYorkl\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 41\n              }\n            }, item.ratings, \"/5\")))))));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 23\n          }\n        }))));\n\n      case 1:\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: \"white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: \"white\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }\n        }, React.createElement(StatusBar, {\n          barStyle: \"light-content\",\n          backgroundColor: \"#67e6dc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 15\n          }\n        }), React.createElement(View, {\n          style: {\n            width: WIDTH,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: HEIGHT / 10,\n            backgroundColor: \"#67e6dc\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 17\n          }\n        }, \"Filter Tours\")), React.createElement(ScrollView, {\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          style: {\n            flexDirection: \"row\",\n            marginTop: 50\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }\n        }, idealFor.map(function (m, index) {\n          return React.createElement(View, {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 21\n            }\n          }, selected.includes(m.name) ? React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              var city = selected.filter(function (c) {\n                return c !== m.name;\n              });\n              setSelected(city);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 25\n            }\n          }, React.createElement(LinearGradient, {\n            colors: [\"#5ED2A0\", \"#339CB1\"],\n            style: {\n              margin: 10,\n              borderRadius: 25,\n              padding: 15\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontFamily: \"Avenir\",\n              borderColor: \"#95afc0\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 29\n            }\n          }, m.name))) : React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              setSelected([].concat(_toConsumableArray(selected), [m.name]));\n              setIdealType(m.name);\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontFamily: \"Avenir\",\n              borderColor: \"#95afc0\",\n              borderRadius: 25,\n              padding: 15,\n              borderWidth: 1,\n              margin: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 27\n            }\n          }, m.name)));\n        })), React.createElement(ScrollView, {\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          style: {\n            flexDirection: \"row\",\n            marginTop: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 15\n          }\n        }, tourType.map(function (m, index) {\n          return React.createElement(View, {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 21\n            }\n          }, selected.includes(m.name) ? React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              var city = selected.filter(function (c) {\n                return c !== m.name;\n              });\n              setSelected(city);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 25\n            }\n          }, React.createElement(LinearGradient, {\n            colors: [\"#fcb045\", \"#339CB1\"],\n            style: {\n              margin: 10,\n              borderRadius: 25,\n              padding: 15\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontFamily: \"Avenir\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 29\n            }\n          }, m.name))) : React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              setSelected([].concat(_toConsumableArray(selected), [m.name]));\n              setTourType(m.name);\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontFamily: \"Avenir\",\n              borderColor: \"#95afc0\",\n              borderRadius: 25,\n              padding: 15,\n              borderWidth: 1,\n              margin: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 27\n            }\n          }, m.name)));\n        })), React.createElement(ScrollView, {\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          style: {\n            flexDirection: \"row\",\n            marginTop: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 15\n          }\n        }, tourCategory.map(function (m, index) {\n          return React.createElement(View, {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 21\n            }\n          }, selected.includes(m.name) ? React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              var city = selected.filter(function (c) {\n                return c !== m.name;\n              });\n              setSelected(city);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 25\n            }\n          }, React.createElement(LinearGradient, {\n            colors: [\"#00d2ff\", \"#928dab\"],\n            style: {\n              margin: 10,\n              borderRadius: 25,\n              padding: 15,\n              opacity: 0.8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontFamily: \"Avenir\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 29\n            }\n          }, m.name))) : React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              setSelected([].concat(_toConsumableArray(selected), [m.name]));\n              setTourCategory(m.name);\n            },\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontFamily: \"Avenir\",\n              borderColor: \"#95afc0\",\n              borderRadius: 25,\n              padding: 15,\n              borderWidth: 1,\n              margin: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 27\n            }\n          }, m.name)));\n        })), React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            marginHorizontal: 20,\n            marginVertical: 30,\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 15\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return cancel();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 17\n          }\n        }, React.createElement(Surface, {\n          style: {\n            borderRadius: 50,\n            elevation: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 19\n          }\n        }, React.createElement(Feather, {\n          name: \"x\",\n          style: {\n            fontSize: 35,\n            padding: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 21\n          }\n        }))), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return searchTour();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 17\n          }\n        }, React.createElement(Surface, {\n          style: {\n            borderRadius: 50,\n            elevation: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 23,\n            paddingHorizontal: 13,\n            paddingVertical: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 21\n          }\n        }, \"\\u2714\\uFE0F\"))))));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, render(step));\n};\n\nexport default TourHomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  imageContainer: {\n    padding: 5,\n    position: \"relative\",\n    paddingTop: 20\n  },\n  image: {\n    height: Dimensions.get(\"window\").height / 4.5,\n    width: WIDTH * 0.9,\n    borderRadius: 20\n  },\n  shadow: {\n    width: WIDTH * 0.9,\n    backgroundColor: \"#fff\",\n    borderRadius: 18,\n    marginHorizontal: 10\n  },\n  cityname: {\n    padding: 5,\n    fontSize: 12,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    zIndex: 1,\n    left: 0\n  },\n  view: {\n    width: 100,\n    height: 100,\n    marginTop: 20,\n    backgroundColor: \"red\"\n  },\n  tourDetails: {\n    margin: 15\n  },\n  background: {\n    backgroundColor: \"#fff\",\n    height: HEIGHT / 15,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    width: WIDTH * 0.9,\n    marginVertical: 20\n  },\n  inputStyle: {\n    fontSize: 18,\n    flex: 1\n  },\n  iconStyle: {\n    fontSize: 28,\n    alignSelf: \"center\",\n    marginHorizontal: 15\n  }\n});","map":{"version":3,"sources":["/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/TourScreens/TourHomeScreen.js"],"names":["React","useState","useEffect","useContext","AuthContext","firebase","touron","LinearGradient","WIDTH","Dimensions","get","width","HEIGHT","height","AntDesign","Feather","MaterialIcons","Surface","TourHomeScreen","navigation","route","isLoggedIn","user","tours","tour","setTour","selected","setSelected","step","setStep","tourLoaded","settourLoaded","nextStep","setIdealType","setTourType","setTourCategory","cancel","prevStep","setLoader","setTimeout","getSavedTours","sT","sTNames","database","ref","uid","on","data","forEach","c","push","val","tourName","error","setErrorMessage","loader","mainLoaded","setMainLoaded","savedTours","setSavedTours","savedToursDetails","setSavedToursDetails","setTourName","idealType","tourType","tourCategory","page","setPage","pageSize","setpageSize","indexValue","showLoader","search","length","d","filter","trim","toUpperCase","includes","set","then","console","log","catch","err","getTour","params","name","cityname","tourResponse","searchTour","mounted","render","idealFor","styles","container","backgroundColor","flex","alignItems","justifyContent","padding","marginTop","Platform","OS","display","flexDirection","goBack","fontSize","fontFamily","paddingRight","background","iconStyle","inputStyle","value","require","_id","item","index","imageContainer","shadow","navigate","image","uri","imageUrl","position","marginHorizontals","borderRadius","left","cityName","tourDetails","color","join","filterData","filterDetails","marginRight","marginVertical","borderWidth","borderColor","tourCost","adult","ratings","map","m","city","margin","opacity","marginHorizontal","elevation","paddingHorizontal","paddingVertical","StyleSheet","create","paddingTop","fontWeight","fontStyle","zIndex","view","alignSelf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  ScrollView,\r\n  FlatList,\r\n  Platform,\r\n  Dimensions,\r\n  StatusBar,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Button,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport firebase from \"firebase\";\r\nimport touron from \"../../api/touron\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nconst WIDTH = Dimensions.get(\"window\").width;\r\nconst HEIGHT = Dimensions.get(\"window\").height;\r\n\r\nimport { AntDesign, Feather, MaterialIcons } from \"@expo/vector-icons\";\r\n\r\nimport { Surface } from \"react-native-paper\";\r\n\r\nconst TourHomeScreen = ({ navigation, route }) => {\r\n  const { isLoggedIn, user, tours } = useContext(AuthContext);\r\n  const [tour, setTour] = useState(tours);\r\n  const [selected, setSelected] = useState([]);\r\n  const [step, setStep] = useState(0);\r\n  const [tourLoaded, settourLoaded] = useState(false);\r\n\r\n  const nextStep = () => {\r\n    setIdealType(\"\");\r\n    setTourType(\"\");\r\n    setTourCategory(\"\");\r\n    setStep(step + 1);\r\n  };\r\n  const cancel = () => {\r\n    setIdealType(\"\");\r\n    setTourType(\"\");\r\n    setTourCategory(\"\");\r\n    setStep(step - 1);\r\n    setSelected([]);\r\n  };\r\n  const prevStep = () => {\r\n    setLoader(true);\r\n\r\n    setStep(step - 1);\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const getSavedTours = () => {\r\n    let sT = [];\r\n    let sTNames = [];\r\n    if (isLoggedIn) {\r\n      firebase\r\n        .database()\r\n        .ref(`saved-tours/${user.uid}`)\r\n        .on(\"value\", (data) => {\r\n          if (data) {\r\n            data.forEach((c) => {\r\n              sT.push(c.val());\r\n              sTNames.push(c.val().tourName);\r\n            });\r\n          }\r\n        });\r\n\r\n      return [sT, sTNames];\r\n    } else {\r\n      return [sT, sTNames];\r\n    }\r\n  };\r\n\r\n  const [sT, sTNames] = getSavedTours();\r\n  const [error, setErrorMessage] = useState();\r\n  const [loader, setLoader] = useState(true);\r\n  const [mainLoaded, setMainLoaded] = useState(true);\r\n  const [savedTours, setSavedTours] = useState(sTNames);\r\n  const [savedToursDetails, setSavedToursDetails] = useState(sT);\r\n  const [tourName, setTourName] = useState(\"\");\r\n\r\n  const [idealType, setIdealType] = useState(\"\");\r\n  const [tourType, setTourType] = useState(\"\");\r\n  const [tourCategory, setTourCategory] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setpageSize] = useState(10);\r\n\r\n  let indexValue = 20;\r\n  const showLoader = () => {\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n      setMainLoaded(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const search = () => {\r\n    if (tour.length > 0) {\r\n      const d = tour.filter((c) => {\r\n        return c.tourName\r\n          .trim()\r\n          .toUpperCase()\r\n          .includes(tourName.trim().toUpperCase().trim());\r\n      });\r\n      return d;\r\n    }\r\n  };\r\n\r\n  // console.log(search(), \"search\");\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      if (savedToursDetails.length > 0) {\r\n        firebase\r\n          .database()\r\n          .ref(`saved-tours/${user.uid}`)\r\n          .set(savedToursDetails)\r\n          .then((data) => console.log(data))\r\n          .catch((err) => console.log(err));\r\n      }\r\n    }\r\n  }, [tour, savedToursDetails, indexValue]);\r\n\r\n  const getTour = async () => {\r\n    if (route.params.name) {\r\n      const cityname = route.params.name;\r\n      try {\r\n        const tourResponse = await touron.get(`/tour/cityname/${cityname}`);\r\n        if (tourResponse.data.length === 0) {\r\n          setTour([]);\r\n        }\r\n        setTour(tourResponse.data);\r\n      } catch (err) {\r\n        setErrorMessage(\"Something went wrong\");\r\n      }\r\n    } else {\r\n      // try {\r\n      //   if (idealType != \"\") {\r\n      //     setLoader(true);\r\n      //     const tourResponse = await touron.get(`/tour/idealtype/${idealType}`);\r\n      //     // idealTypeTours.push(tourResponse.data);\r\n      //     setTour(tourResponse.data);\r\n      //     setLoader(false);\r\n      //   }\r\n      //   if (tourType != \"\") {\r\n      //     setLoader(true);\r\n      //     const tourResponse = await touron.get(`/tour/tourtype/${tourType}`);\r\n      //     // tourTypeTours.push(tourResponse.data);\r\n      //     setTour(tourResponse.data);\r\n      //     setLoader(false);\r\n      //   }\r\n      //   if (tourCategory != \"\") {\r\n      //     setLoader(true);\r\n      //     const tourResponse = await touron.get(\r\n      //       `/tour/tourcategory/${tourCategory}`\r\n      //     );\r\n      //     // tourCategoryTours.push(tourResponse.data);\r\n      //     setTour(tourResponse.data);\r\n      //     setLoader(false);\r\n      //   }\r\n      // } catch (err) {\r\n      //   setErrorMessage(\"Something went wrong\");\r\n      // }\r\n    }\r\n  };\r\n\r\n  const searchTour = async () => {\r\n    setLoader(true);\r\n    setStep(step - 1);\r\n\r\n    if (idealType != \"\") {\r\n      const tourResponse = await touron.get(`/tour/idealtype/${idealType}`);\r\n      // idealTypeTours.push(tourResponse.data);\r\n      setTour(tourResponse.data);\r\n      setLoader(false);\r\n    }\r\n\r\n    if (tourType != \"\") {\r\n      const tourResponse = await touron.get(`/tour/tourtype/${tourType}`);\r\n      // tourTypeTours.push(tourResponse.data);\r\n      setTour(tourResponse.data);\r\n      setLoader(false);\r\n    }\r\n    if (tourCategory != \"\") {\r\n      const tourResponse = await touron.get(\r\n        `/tour/tourcategory/${tourCategory}`\r\n      );\r\n      // tourCategoryTours.push(tourResponse.data);\r\n      setTour(tourResponse.data);\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showLoader();\r\n    let mounted = true;\r\n    if (mounted) {\r\n      getTour();\r\n    }\r\n    return () => (mounted = false);\r\n  }, [idealType, tourCategory, tourType]);\r\n\r\n  const render = (step) => {\r\n    const idealFor = [\r\n      {\r\n        name: \"Family\",\r\n      },\r\n      {\r\n        name: \"Family and kids\",\r\n      },\r\n      { name: \"Solo\" },\r\n      { name: \"Mature Couple\" },\r\n      { name: \"Young Couple\" },\r\n    ];\r\n\r\n    const tourType = [\r\n      {\r\n        name: \"Full Day Tour\",\r\n      },\r\n      {\r\n        name: \"Half Day Tour\",\r\n      },\r\n      { name: \"Night Tour\" },\r\n    ];\r\n    const tourCategory = [\r\n      {\r\n        name: \"Activities\",\r\n      },\r\n      { name: \"Hop On & Off\" },\r\n      {\r\n        name: \"Attraction\",\r\n      },\r\n      { name: \"Learning\" },\r\n    ];\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <View\r\n            style={\r\n              ([styles.container],\r\n              {\r\n                backgroundColor: tour.length === 0 ? \"white\" : \"transparent\",\r\n                flex: 1,\r\n              })\r\n            }\r\n          >\r\n            {loader ? (\r\n              <ActivityIndicator\r\n                size=\"large\"\r\n                style={{\r\n                  flex: 1,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              />\r\n            ) : (\r\n              <View>\r\n                <View\r\n                  style={{\r\n                    height: HEIGHT / 8,\r\n                    // backgroundColor: \"#ff6b6b\",\r\n                    padding: 10,\r\n                    marginTop: Platform.OS === \"ios\" ? HEIGHT / 12 : 40,\r\n                    width: WIDTH,\r\n                    // alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity onPress={() => navigation.goBack()}>\r\n                      <Feather name=\"arrow-left\" style={{ fontSize: 30 }} />\r\n                    </TouchableOpacity>\r\n\r\n                    <View>\r\n                      <Text style={{ fontSize: 23, fontFamily: \"NewYorkl\" }}>\r\n                        Tours\r\n                      </Text>\r\n                    </View>\r\n                    <TouchableOpacity onPress={() => nextStep()}>\r\n                      <MaterialIcons\r\n                        name=\"sort\"\r\n                        size={24}\r\n                        color=\"black\"\r\n                        style={{ paddingRight: 10 }}\r\n                      />\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                  <View style={styles.background}>\r\n                    <Feather name=\"search\" style={styles.iconStyle}></Feather>\r\n                    <TextInput\r\n                      style={styles.inputStyle}\r\n                      placeholder=\"Search\"\r\n                      onChangeText={(value) => setTourName(value)}\r\n                      onSubmitEditing={search}\r\n                      autoCapitalize=\"none\"\r\n                      autoCorrect={false}\r\n                      keyboardType=\"email-address\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                {tour.length === 0 && route.params.name ? (\r\n                  <View\r\n                    style={{ alignItems: \"center\", justifyContent: \"center\" }}\r\n                  >\r\n                    <View>\r\n                      <Image\r\n                        style={{ width: WIDTH * 0.9, height: WIDTH * 0.9 }}\r\n                        source={require(\"../../../assets/oops.jpg\")}\r\n                      />\r\n                    </View>\r\n                    <Text style={{ fontFamily: \"Avenir\", fontSize: 23 }}>\r\n                      No Tours Found for {route.params.name}\r\n                    </Text>\r\n                  </View>\r\n                ) : (\r\n                  <>\r\n                    {mainLoaded ? (\r\n                      <View\r\n                        style={{\r\n                          flex: 1,\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <ActivityIndicator\r\n                          size=\"large\"\r\n                          style={{\r\n                            flex: 1,\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        ></ActivityIndicator>\r\n                      </View>\r\n                    ) : (\r\n                      <FlatList\r\n                        showsVerticalScrollIndicator={false}\r\n                        keyExtractor={(c) => c._id}\r\n                        data={search()}\r\n                        renderItem={({ item, index }) => {\r\n                          return (\r\n                            <>\r\n                              <View style={styles.imageContainer}>\r\n                                <View style={styles.shadow}>\r\n                                  <TouchableOpacity\r\n                                    onPress={() => {\r\n                                      navigation.navigate(\"TourInner\", {\r\n                                        item: item,\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    <Image\r\n                                      style={styles.image}\r\n                                      source={{ uri: item.imageUrl }}\r\n                                    />\r\n                                  </TouchableOpacity>\r\n                                  <View\r\n                                    style={{\r\n                                      flexDirection: \"row\",\r\n                                      position: \"absolute\",\r\n                                      width: WIDTH * 0.9,\r\n                                      justifyContent: \"space-between\",\r\n                                      alignItems: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <LinearGradient\r\n                                      colors={[\"#FFA26E\", \"#E36D5D\"]}\r\n                                      style={{\r\n                                        marginHorizontals: 15,\r\n                                        marginTop: 10,\r\n                                        padding: 2,\r\n                                        borderRadius: 5,\r\n                                        left: 10,\r\n                                      }}\r\n                                    >\r\n                                      <View>\r\n                                        <Text style={styles.cityname}>\r\n                                          {item.cityName}\r\n                                        </Text>\r\n                                      </View>\r\n                                    </LinearGradient>\r\n                                  </View>\r\n                                  <View style={styles.tourDetails}>\r\n                                    <View\r\n                                      style={{\r\n                                        flexDirection: \"row\",\r\n                                        justifyContent: \"space-between\",\r\n                                      }}\r\n                                    >\r\n                                      <Text\r\n                                        style={{\r\n                                          color: \"#8395A7\",\r\n                                          fontSize: 15,\r\n                                          fontFamily: \"Andika\",\r\n                                        }}\r\n                                      >\r\n                                        {item.tourCategory.join(\",\")}\r\n                                      </Text>\r\n                                      <View>\r\n                                        {savedTours.includes(item.tourName) ? (\r\n                                          <TouchableOpacity\r\n                                            onPress={() => {\r\n                                              let filterData = savedTours.filter(\r\n                                                (c) => {\r\n                                                  return c != item.tourName;\r\n                                                }\r\n                                              );\r\n\r\n                                              setSavedTours(filterData);\r\n\r\n                                              const filterDetails = savedToursDetails.filter(\r\n                                                (c) => {\r\n                                                  return (\r\n                                                    c.tourName !== item.tourName\r\n                                                  );\r\n                                                }\r\n                                              );\r\n\r\n                                              setSavedToursDetails(\r\n                                                filterDetails\r\n                                              );\r\n                                            }}\r\n                                          >\r\n                                            <AntDesign\r\n                                              style={{ marginRight: 0 }}\r\n                                              name=\"heart\"\r\n                                              size={24}\r\n                                              color=\"#FF4500\"\r\n                                            />\r\n                                          </TouchableOpacity>\r\n                                        ) : (\r\n                                          <TouchableOpacity\r\n                                            onPress={() => {\r\n                                              if (isLoggedIn) {\r\n                                                setSavedTours([\r\n                                                  ...savedTours,\r\n                                                  item.tourName,\r\n                                                ]);\r\n                                                setSavedToursDetails([\r\n                                                  ...savedToursDetails,\r\n                                                  item,\r\n                                                ]);\r\n                                              } else {\r\n                                                navigation.navigate(\r\n                                                  \"SignUpScreen\"\r\n                                                );\r\n                                              }\r\n                                            }}\r\n                                          >\r\n                                            <Image\r\n                                              style={{\r\n                                                height: 35,\r\n\r\n                                                width: 35,\r\n                                              }}\r\n                                              source={require(\"../../../assets/heart.png\")}\r\n                                            />\r\n                                          </TouchableOpacity>\r\n                                        )}\r\n                                      </View>\r\n                                    </View>\r\n\r\n                                    <Text\r\n                                      style={{\r\n                                        fontSize: 18,\r\n                                        // fontWeight: \"bold\",\r\n                                        fontFamily: \"NewYorkl\",\r\n                                        marginTop: 2,\r\n                                      }}\r\n                                    >\r\n                                      {item.tourName}\r\n                                    </Text>\r\n                                    <Text\r\n                                      style={{\r\n                                        color: \"#8395A7\",\r\n                                        fontSize: 15,\r\n                                        marginVertical: 5,\r\n                                        fontFamily: \"Andika\",\r\n                                      }}\r\n                                    >\r\n                                      {item.tourType}\r\n                                    </Text>\r\n                                    <View\r\n                                      style={{\r\n                                        flexDirection: \"row\",\r\n                                        justifyContent: \"space-between\",\r\n                                        alignItems: \"center\",\r\n                                      }}\r\n                                    >\r\n                                      <View\r\n                                        style={{\r\n                                          padding: 8,\r\n                                          marginTop: 4,\r\n                                          borderWidth: 1,\r\n                                          borderColor: \"#333\",\r\n                                          borderRadius: 14,\r\n                                        }}\r\n                                      >\r\n                                        {item.tourCost.adult == 15000 &&\r\n                                        item.tourCost.adult >= 10000 ? (\r\n                                          <Text\r\n                                            style={{\r\n                                              fontSize: 13,\r\n                                              fontFamily: \"Andika\",\r\n                                            }}\r\n                                          >\r\n                                            ₹₹₹₹ - High\r\n                                          </Text>\r\n                                        ) : item.tourCost.adult < 10000 &&\r\n                                          item.tourCost.adult >= 5000 ? (\r\n                                          <Text\r\n                                            style={{\r\n                                              fontSize: 13,\r\n                                              fontFamily: \"NewYorkl\",\r\n                                            }}\r\n                                          >\r\n                                            ₹₹₹ - Medium\r\n                                          </Text>\r\n                                        ) : item.tourCost.adult > 2500 &&\r\n                                          item.tourCost.adult < 500205 ? (\r\n                                          <Text\r\n                                            style={{\r\n                                              fontSize: 13,\r\n                                              fontFamily: \"NewYorkl\",\r\n                                            }}\r\n                                          >\r\n                                            ₹₹ - Low\r\n                                          </Text>\r\n                                        ) : (\r\n                                          <Text\r\n                                            style={{\r\n                                              fontSize: 13,\r\n                                              fontFamily: \"NewYorkl\",\r\n                                            }}\r\n                                          >\r\n                                            ₹ - Very Low\r\n                                          </Text>\r\n                                        )}\r\n                                      </View>\r\n\r\n                                      <View\r\n                                        style={{\r\n                                          flexDirection: \"row\",\r\n                                          justifyContent: \"space-between\",\r\n                                          alignItems: \"center\",\r\n                                        }}\r\n                                      >\r\n                                        <Image\r\n                                          style={{\r\n                                            height: 25,\r\n                                            width: 25,\r\n                                            marginRight: 4,\r\n                                          }}\r\n                                          source={require(\"../../../assets/Star.png\")}\r\n                                        />\r\n                                        <Text\r\n                                          style={{\r\n                                            fontSize: 18,\r\n                                            fontFamily: \"NewYorkl\",\r\n                                          }}\r\n                                        >\r\n                                          {item.ratings}/5\r\n                                        </Text>\r\n                                      </View>\r\n                                    </View>\r\n                                  </View>\r\n                                </View>\r\n                              </View>\r\n                            </>\r\n                          );\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {/* {!loader && tour.length > 0 ? (\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      // setPage(page + 1);\r\n                      setpageSize(pageSize + 15);\r\n                      getTour();\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{ margin: 10, width: WIDTH, alignItems: \"center\" }}\r\n                    >\r\n                      {tourLoaded ? (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            settourLoaded(false);\r\n                          }}\r\n                        >\r\n                          <View\r\n                            style={{\r\n                              // textAlign: \"center\",\r\n                              backgroundColor: \"#FFA26E\",\r\n                              paddingHorizontal: 40,\r\n                              paddingVertical: 10,\r\n                              borderRadius: 20,\r\n                            }}\r\n                          >\r\n                            <ActivityIndicator></ActivityIndicator>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                      ) : (\r\n                        <Text\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            backgroundColor: \"#FFA26E\",\r\n                            paddingHorizontal: 20,\r\n                            paddingVertical: 10,\r\n                            borderRadius: 20,\r\n                          }}\r\n                        >\r\n                          Load More\r\n                        </Text>\r\n                      )}\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                ) : null} */}\r\n              </View>\r\n            )}\r\n          </View>\r\n        );\r\n      case 1:\r\n        return (\r\n          <View style={{ flex: 1, backgroundColor: \"white\" }}>\r\n            <View\r\n              style={{\r\n                backgroundColor: \"white\",\r\n              }}\r\n            >\r\n              <StatusBar barStyle=\"light-content\" backgroundColor=\"#67e6dc\" />\r\n              <View\r\n                style={{\r\n                  width: WIDTH,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  height: HEIGHT / 10,\r\n                  backgroundColor: \"#67e6dc\",\r\n                }}\r\n              >\r\n                <Text style={{ fontSize: 20 }}>Filter Tours</Text>\r\n              </View>\r\n              <ScrollView\r\n                horizontal\r\n                showsHorizontalScrollIndicator={false}\r\n                style={{ flexDirection: \"row\", marginTop: 50 }}\r\n              >\r\n                {idealFor.map((m, index) => {\r\n                  return (\r\n                    <View key={index}>\r\n                      {selected.includes(m.name) ? (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            let city = selected.filter((c) => {\r\n                              return c !== m.name;\r\n                            });\r\n                            setSelected(city);\r\n                          }}\r\n                        >\r\n                          <LinearGradient\r\n                            colors={[\"#5ED2A0\", \"#339CB1\"]}\r\n                            style={{\r\n                              margin: 10,\r\n                              borderRadius: 25,\r\n                              padding: 15,\r\n                            }}\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                //   padding: 5,\r\n                                fontFamily: \"Avenir\",\r\n                                borderColor: \"#95afc0\",\r\n                              }}\r\n                            >\r\n                              {m.name}\r\n                            </Text>\r\n                          </LinearGradient>\r\n                        </TouchableOpacity>\r\n                      ) : (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            setSelected([...selected, m.name]);\r\n                            setIdealType(m.name);\r\n                          }}\r\n                          key={index}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              //   padding: 5,\r\n                              fontFamily: \"Avenir\",\r\n                              borderColor: \"#95afc0\",\r\n                              borderRadius: 25,\r\n                              padding: 15,\r\n                              borderWidth: 1,\r\n                              margin: 10,\r\n                            }}\r\n                          >\r\n                            {m.name}\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                    </View>\r\n                  );\r\n                })}\r\n              </ScrollView>\r\n              <ScrollView\r\n                horizontal\r\n                showsHorizontalScrollIndicator={false}\r\n                style={{ flexDirection: \"row\", marginTop: 30 }}\r\n              >\r\n                {tourType.map((m, index) => {\r\n                  return (\r\n                    <View key={index}>\r\n                      {selected.includes(m.name) ? (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            let city = selected.filter((c) => {\r\n                              return c !== m.name;\r\n                            });\r\n                            setSelected(city);\r\n                          }}\r\n                        >\r\n                          <LinearGradient\r\n                            colors={[\"#fcb045\", \"#339CB1\"]}\r\n                            style={{\r\n                              margin: 10,\r\n                              borderRadius: 25,\r\n                              padding: 15,\r\n                            }}\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                //   padding: 5,\r\n                                fontFamily: \"Avenir\",\r\n                              }}\r\n                            >\r\n                              {m.name}\r\n                            </Text>\r\n                          </LinearGradient>\r\n                        </TouchableOpacity>\r\n                      ) : (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            setSelected([...selected, m.name]);\r\n                            setTourType(m.name);\r\n                          }}\r\n                          key={index}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              //   padding: 5,\r\n                              fontFamily: \"Avenir\",\r\n                              borderColor: \"#95afc0\",\r\n                              borderRadius: 25,\r\n                              padding: 15,\r\n                              borderWidth: 1,\r\n                              margin: 10,\r\n                            }}\r\n                          >\r\n                            {m.name}\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                    </View>\r\n                  );\r\n                })}\r\n              </ScrollView>\r\n              <ScrollView\r\n                horizontal\r\n                showsHorizontalScrollIndicator={false}\r\n                style={{ flexDirection: \"row\", marginTop: 30 }}\r\n              >\r\n                {tourCategory.map((m, index) => {\r\n                  return (\r\n                    <View key={index}>\r\n                      {selected.includes(m.name) ? (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            let city = selected.filter((c) => {\r\n                              return c !== m.name;\r\n                            });\r\n                            setSelected(city);\r\n                          }}\r\n                        >\r\n                          <LinearGradient\r\n                            colors={[\"#00d2ff\", \"#928dab\"]}\r\n                            style={{\r\n                              //   borderColor: \"#718093\",\r\n                              //   borderWidth: 1,\r\n                              margin: 10,\r\n                              borderRadius: 25,\r\n                              padding: 15,\r\n                              opacity: 0.8,\r\n                            }}\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                fontFamily: \"Avenir\",\r\n                              }}\r\n                            >\r\n                              {m.name}\r\n                            </Text>\r\n                          </LinearGradient>\r\n                        </TouchableOpacity>\r\n                      ) : (\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            setSelected([...selected, m.name]);\r\n                            setTourCategory(m.name);\r\n                          }}\r\n                          key={index}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              //   padding: 5,\r\n                              fontFamily: \"Avenir\",\r\n                              borderColor: \"#95afc0\",\r\n                              borderRadius: 25,\r\n                              padding: 15,\r\n                              borderWidth: 1,\r\n                              margin: 10,\r\n                            }}\r\n                          >\r\n                            {m.name}\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                    </View>\r\n                  );\r\n                })}\r\n              </ScrollView>\r\n\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-around\",\r\n                  marginHorizontal: 20,\r\n                  marginVertical: 30,\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <TouchableOpacity onPress={() => cancel()}>\r\n                  <Surface style={{ borderRadius: 50, elevation: 10 }}>\r\n                    <Feather name=\"x\" style={{ fontSize: 35, padding: 10 }} />\r\n                  </Surface>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => searchTour()}>\r\n                  <Surface style={{ borderRadius: 50, elevation: 10 }}>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 23,\r\n                        paddingHorizontal: 13,\r\n                        paddingVertical: 10,\r\n                      }}\r\n                    >\r\n                      ✔️\r\n                    </Text>\r\n                  </Surface>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        );\r\n    }\r\n  };\r\n  return <>{render(step)}</>;\r\n};\r\n\r\nexport default TourHomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    // paddingTop: 20,\r\n  },\r\n  imageContainer: {\r\n    padding: 5,\r\n    position: \"relative\",\r\n    paddingTop: 20,\r\n  },\r\n  image: {\r\n    height: Dimensions.get(\"window\").height / 4.5,\r\n    width: WIDTH * 0.9,\r\n    borderRadius: 20,\r\n  },\r\n  shadow: {\r\n    // height: Dimensions.get(\"window\").height / 2.4,\r\n    width: WIDTH * 0.9,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 18,\r\n    marginHorizontal: 10,\r\n  },\r\n  cityname: {\r\n    padding: 5,\r\n    fontSize: 12,\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    fontStyle: \"normal\",\r\n\r\n    zIndex: 1,\r\n    left: 0,\r\n  },\r\n\r\n  view: {\r\n    width: 100,\r\n    height: 100,\r\n    marginTop: 20,\r\n    backgroundColor: \"red\",\r\n  },\r\n  tourDetails: {\r\n    margin: 15,\r\n  },\r\n  background: {\r\n    backgroundColor: \"#fff\",\r\n    height: HEIGHT / 15,\r\n    borderRadius: 20,\r\n    flexDirection: \"row\",\r\n\r\n    //  borderWidth: 1,\r\n    width: WIDTH * 0.9,\r\n    marginVertical: 20,\r\n    // marginHorizontal: 10,\r\n  },\r\n  inputStyle: {\r\n    fontSize: 18,\r\n    flex: 1,\r\n  },\r\n  iconStyle: {\r\n    fontSize: 28,\r\n    alignSelf: \"center\",\r\n    marginHorizontal: 15,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}