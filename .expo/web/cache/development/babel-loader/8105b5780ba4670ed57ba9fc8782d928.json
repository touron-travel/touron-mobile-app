{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/App.js\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nYellowBox.ignoreWarnings([\"Remote debugger\"]);\nYellowBox.ignoreWarnings([\"Setting a timer\"]);\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport DrawerContent from \"./src/Screens/DrawerContent\";\nimport { RootStackScreen } from \"./src/Screens/RootStackScreen\";\nimport { AuthContext } from \"./src/context/AuthContext\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport * as firebase from \"firebase\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport MyRequestScreen from \"./src/Screens/AccountScreens/MyRequestScreen\";\nimport MyPlansScreen from \"./src/Screens/AccountScreens/MyPlansScreen\";\nimport ProfileScreen from \"./src/Screens/AccountScreens/ProfileScreen\";\nimport VisaDetailsScreen from \"./src/Screens/AccountScreens/VisaDetailsScreen\";\nimport WishListScreen from \"./src/Screens/AccountScreens/WishListScreen\";\nimport RequestInner from \"./src/Screens/AccountScreens/RequestInner\";\nimport VisaInner from \"./src/Screens/AccountScreens/VisaInner\";\nimport touron from \"./src/api/touron\";\nimport MyVisaRequestsScreen from \"./src/Screens/AccountScreens/MyVisaRequests\";\nimport * as Network from \"expo-network\";\nimport AboutUs from \"./src/Screens/AccountScreens/AboutUs\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCCZ2bo_iPbtvarsADQe84qX2s9cWPMq3U\",\n  authDomain: \"touronapp-248e4.firebaseapp.com\",\n  databaseURL: \"https://touronapp-248e4.firebaseio.com\",\n  projectId: \"touronapp-248e4\",\n  storageBucket: \"touronapp-248e4.appspot.com\",\n  messagingSenderId: \"813320271971\",\n  appId: \"1:813320271971:web:5a10483e3c11bc953aa056\",\n  measurementId: \"G-KCPSW6WFC9\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar Drawer = createDrawerNavigator();\n\nvar App = function App(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoggedIn = _useState4[0],\n      setIsLoggedIn = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isAdmin = _useState6[0],\n      setIsAdmin = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tours = _useState8[0],\n      setTour = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      countries = _useState10[0],\n      setCountries = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      appLoading = _useState12[0],\n      setAppLoading = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      status = _useState14[0],\n      setStatus = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      networkLoader = _useState16[0],\n      setNetworkLoader = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      cities = _useState18[0],\n      setCities = _useState18[1];\n\n  var _useState19 = useState({}),\n      _useState20 = _slicedToArray(_useState19, 2),\n      userInfo = _useState20[0],\n      setUserInfo = _useState20[1];\n\n  useEffect(function () {\n    getNetwork();\n    getUserData();\n  }, []);\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      getTours();\n      getCities();\n      firebase.auth().onAuthStateChanged(function (user) {\n        setUser(user);\n        setIsLoggedIn(true);\n      });\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  var getNetwork = function getNetwork() {\n    var status;\n    return _regeneratorRuntime.async(function getNetwork$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setNetworkLoader(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Network.getNetworkStateAsync());\n\n          case 3:\n            status = _context.sent.isConnected;\n            setStatus(status);\n            setNetworkLoader(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getTours = function getTours() {\n    var tourResponse;\n    return _regeneratorRuntime.async(function getTours$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(touron.get(\"/tour\"));\n\n          case 2:\n            tourResponse = _context2.sent;\n            setTour(tourResponse.data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getCountries = function getCountries() {\n    var countryResponse;\n    return _regeneratorRuntime.async(function getCountries$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(touron.get(\"/country\"));\n\n          case 2:\n            countryResponse = _context3.sent;\n            setCountries(countryResponse.data);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getCities = function getCities() {\n    var cityResponse;\n    return _regeneratorRuntime.async(function getCities$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(touron.get(\"/city\"));\n\n          case 2:\n            cityResponse = _context4.sent;\n            setCities(cityResponse.data);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getToken = function getToken() {\n    var data, userToken;\n    return _regeneratorRuntime.async(function getToken$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n          case 3:\n            data = _context5.sent;\n            userToken = JSON.parse(data);\n\n            if (userToken !== null) {\n              setUser(userToken);\n              setIsLoggedIn(true);\n            }\n\n            _context5.next = 11;\n            break;\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.log(_context5.t0);\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var showImage = function showImage() {\n    setTimeout(function () {\n      setAppLoading(false);\n    }, 2000);\n  };\n\n  var getUserData = function getUserData() {\n    if (user !== null) {\n      firebase.database().ref(\"userGeneralInfo/\" + user.uid).on(\"value\", function (data) {\n        var val = data.val();\n        setUserInfo(val);\n      });\n    }\n  };\n\n  useEffect(function () {\n    showImage();\n  });\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      getToken();\n      getCountries();\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  if (appLoading) {\n    return React.createElement(View, {\n      style: {\n        backgroundColor: \"white\",\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: require(\"./assets/logo.jpeg\"),\n      style: {\n        width: WIDTH,\n        height: HEIGHT / 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), !status ? React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: WIDTH * 0.8,\n      width: WIDTH * 0.8,\n      marginTop: HEIGHT / 6\n    },\n    source: require(\"./assets/oops.jpg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }), networkLoader ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      getNetwork();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  })) : React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      getNetwork();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"reload\",\n    size: 40,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }))) : React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn,\n      user: user,\n      setUser: setUser,\n      userInfo: userInfo,\n      tours: tours,\n      cities: cities,\n      countries: countries,\n      isAdmin: isAdmin\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, React.createElement(Drawer.Navigator, {\n    drawerType: \"slides\",\n    screenOptions: {\n      gestureEnabled: true\n    },\n    edgeWidth: 0,\n    drawerStyle: {\n      backgroundColor: \"#000000\",\n      width: WIDTH * 0.75,\n      opacity: 0.6,\n      zIndex: 2\n    },\n    overlayColor: 0,\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerContent, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 41\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"HomeDrawer\",\n    component: RootStackScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"MyRequest\",\n    component: MyRequestScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"MyVisaRequestScreen\",\n    component: MyVisaRequestsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"MyPlans\",\n    component: MyPlansScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Visa\",\n    component: VisaDetailsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"VisaInner\",\n    component: VisaInner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"WishList\",\n    component: WishListScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"RequestInner\",\n    component: RequestInner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/App.js"],"names":["YellowBox","ignoreWarnings","MaterialCommunityIcons","React","useState","useEffect","useMemo","NavigationContainer","createDrawerNavigator","DrawerContent","RootStackScreen","AuthContext","WIDTH","Dimensions","get","width","HEIGHT","height","AsyncStorage","firebase","createStackNavigator","MyRequestScreen","MyPlansScreen","ProfileScreen","VisaDetailsScreen","WishListScreen","RequestInner","VisaInner","touron","MyVisaRequestsScreen","Network","AboutUs","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","Drawer","App","props","user","setUser","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","tours","setTour","countries","setCountries","appLoading","setAppLoading","status","setStatus","networkLoader","setNetworkLoader","cities","setCities","userInfo","setUserInfo","getNetwork","getUserData","mounted","getTours","getCities","auth","onAuthStateChanged","getNetworkStateAsync","isConnected","tourResponse","data","getCountries","countryResponse","cityResponse","getToken","getItem","userToken","JSON","parse","console","log","showImage","setTimeout","database","ref","uid","on","val","backgroundColor","flex","alignItems","justifyContent","require","marginTop","gestureEnabled","opacity","zIndex"],"mappings":"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","sourcesContent":["import {\n  YellowBox,\n  Dimensions,\n  View,\n  ActivityIndicator,\n  Image,\n  StatusBar,\n  TouchableOpacity,\n} from \"react-native\";\nYellowBox.ignoreWarnings([\"Remote debugger\"]);\nYellowBox.ignoreWarnings([\"Setting a timer\"]);\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport DrawerContent from \"./src/Screens/DrawerContent\";\nimport { RootStackScreen } from \"./src/Screens/RootStackScreen\";\nimport { AuthContext } from \"./src/context/AuthContext\";\nconst WIDTH = Dimensions.get(\"window\").width;\nconst HEIGHT = Dimensions.get(\"window\").height;\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nimport * as firebase from \"firebase\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport MyRequestScreen from \"./src/Screens/AccountScreens/MyRequestScreen\";\nimport MyPlansScreen from \"./src/Screens/AccountScreens/MyPlansScreen\";\nimport ProfileScreen from \"./src/Screens/AccountScreens/ProfileScreen\";\nimport VisaDetailsScreen from \"./src/Screens/AccountScreens/VisaDetailsScreen\";\nimport WishListScreen from \"./src/Screens/AccountScreens/WishListScreen\";\nimport RequestInner from \"./src/Screens/AccountScreens/RequestInner\";\nimport VisaInner from \"./src/Screens/AccountScreens/VisaInner\";\nimport touron from \"./src/api/touron\";\nimport MyVisaRequestsScreen from \"./src/Screens/AccountScreens/MyVisaRequests\";\nimport * as Network from \"expo-network\";\nimport AboutUs from \"./src/Screens/AccountScreens/AboutUs\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCCZ2bo_iPbtvarsADQe84qX2s9cWPMq3U\",\n  authDomain: \"touronapp-248e4.firebaseapp.com\",\n  databaseURL: \"https://touronapp-248e4.firebaseio.com\",\n  projectId: \"touronapp-248e4\",\n  storageBucket: \"touronapp-248e4.appspot.com\",\n  messagingSenderId: \"813320271971\",\n  appId: \"1:813320271971:web:5a10483e3c11bc953aa056\",\n  measurementId: \"G-KCPSW6WFC9\",\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst Drawer = createDrawerNavigator();\n\nconst App = (props) => {\n  // console.log(props.exp.notification, \"popoopppopopoopooppo\");\n  const [user, setUser] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [fontLoaded, setFont] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [tours, setTour] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [appLoading, setAppLoading] = useState(true);\n  const [status, setStatus] = useState(true);\n  const [networkLoader, setNetworkLoader] = useState(false);\n  const [cities, setCities] = useState([]);\n  const [userInfo, setUserInfo] = useState({});\n\n  useEffect(() => {\n    getNetwork();\n    getUserData();\n  }, []);\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      getTours();\n      getCities();\n      firebase.auth().onAuthStateChanged((user) => {\n        setUser(user);\n        setIsLoggedIn(true);\n      });\n    }\n    return () => (mounted = false);\n  }, []);\n\n  const getNetwork = async () => {\n    setNetworkLoader(true);\n    const status = (await Network.getNetworkStateAsync()).isConnected;\n    // console.log(status, \"STATUS\");\n    setStatus(status);\n    setNetworkLoader(false);\n  };\n\n  const getTours = async () => {\n    const tourResponse = await touron.get(`/tour`);\n    setTour(tourResponse.data);\n  };\n\n  const getCountries = async () => {\n    const countryResponse = await touron.get(`/country`);\n    setCountries(countryResponse.data);\n  };\n  const getCities = async () => {\n    const cityResponse = await touron.get(`/city`);\n    setCities(cityResponse.data);\n  };\n\n  const getToken = async () => {\n    try {\n      const data = await AsyncStorage.getItem(\"userToken\");\n      const userToken = JSON.parse(data);\n      if (userToken !== null) {\n        setUser(userToken);\n        setIsLoggedIn(true);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const showImage = () => {\n    setTimeout(() => {\n      setAppLoading(false);\n    }, 2000);\n  };\n\n  const getUserData = () => {\n    if (user !== null) {\n      // console.log(user, \"opop\");\n      firebase\n        .database()\n        .ref(`userGeneralInfo/${user.uid}`)\n        .on(\"value\", (data) => {\n          // console.log(data, \"data\");\n          let val = data.val();\n          // console.log(val, \"val\");\n          setUserInfo(val);\n        });\n    }\n  };\n\n  useEffect(() => {\n    showImage();\n  });\n\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      getToken();\n      getCountries();\n    }\n    return () => (mounted = false);\n  }, []);\n\n  if (appLoading) {\n    return (\n      <View\n        style={{\n          backgroundColor: \"white\",\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Image\n          source={require(\"./assets/logo.jpeg\")}\n          style={{ width: WIDTH, height: HEIGHT / 2 }}\n        />\n      </View>\n    );\n  }\n\n  return (\n    <>\n      <StatusBar />\n      {!status ? (\n        <View\n          style={{\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Image\n            style={{\n              height: WIDTH * 0.8,\n              width: WIDTH * 0.8,\n              marginTop: HEIGHT / 6,\n            }}\n            source={require(\"./assets/oops.jpg\")}\n          />\n\n          {networkLoader ? (\n            <TouchableOpacity\n              onPress={() => {\n                getNetwork();\n              }}\n            >\n              <ActivityIndicator size=\"large\" />\n            </TouchableOpacity>\n          ) : (\n            <TouchableOpacity\n              onPress={() => {\n                getNetwork();\n              }}\n            >\n              <MaterialCommunityIcons name=\"reload\" size={40} color=\"black\" />\n            </TouchableOpacity>\n          )}\n        </View>\n      ) : (\n        <AuthContext.Provider\n          value={{\n            isLoggedIn,\n            setIsLoggedIn,\n            user,\n            setUser,\n            userInfo,\n            tours,\n            cities,\n            countries,\n            isAdmin,\n          }}\n        >\n          <NavigationContainer>\n            <Drawer.Navigator\n              drawerType=\"slides\"\n              screenOptions={{\n                gestureEnabled: true,\n              }}\n              edgeWidth={0}\n              drawerStyle={{\n                backgroundColor: \"#000000\",\n                width: WIDTH * 0.75,\n                opacity: 0.6,\n                zIndex: 2,\n              }}\n              overlayColor={0}\n              drawerContent={(props) => <DrawerContent {...props} />}\n            >\n              <Drawer.Screen name=\"HomeDrawer\" component={RootStackScreen} />\n              <Drawer.Screen name=\"MyRequest\" component={MyRequestScreen} />\n              <Drawer.Screen\n                name=\"MyVisaRequestScreen\"\n                component={MyVisaRequestsScreen}\n              />\n              <Drawer.Screen name=\"MyPlans\" component={MyPlansScreen} />\n              <Drawer.Screen name=\"Profile\" component={ProfileScreen} />\n              <Drawer.Screen name=\"Visa\" component={VisaDetailsScreen} />\n              <Drawer.Screen name=\"VisaInner\" component={VisaInner} />\n              <Drawer.Screen name=\"WishList\" component={WishListScreen} />\n              <Drawer.Screen name=\"RequestInner\" component={RequestInner} />\n            </Drawer.Navigator>\n          </NavigationContainer>\n        </AuthContext.Provider>\n      )}\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}