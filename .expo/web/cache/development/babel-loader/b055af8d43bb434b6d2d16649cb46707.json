{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport touron from \"../api/touron\";\nimport * as firebase from \"firebase\";\nexport default (function () {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      country = _useState2[0],\n      setCountry = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      city = _useState4[0],\n      setCity = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tour = _useState6[0],\n      setTour = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n\n  var getCountry = function getCountry() {\n    var countryResponse;\n    return _regeneratorRuntime.async(function getCountry$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(touron.get(\"/country\"));\n\n          case 3:\n            countryResponse = _context.sent;\n            setCountry(countryResponse.data);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setErrorMessage(\"Something went wrong\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var getCity = function getCity() {\n    var citResponse;\n    return _regeneratorRuntime.async(function getCity$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(touron.get(\"/city\"));\n\n          case 3:\n            citResponse = _context2.sent;\n            setCity(citResponse.data);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            setErrorMessage(\"Something went wrong\");\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var getTour = function getTour() {\n    var tourResponse;\n    return _regeneratorRuntime.async(function getTour$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(touron.get(\"/tour\"));\n\n          case 3:\n            tourResponse = _context3.sent;\n            setTour(tourResponse.data);\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            setErrorMessage(\"Something went wrong\");\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getCity(), getCountry(), getTour();\n  }, []);\n  return [country, city, tour, errorMessage];\n});","map":{"version":3,"sources":["/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/hooks/useData.js"],"names":["React","useState","useEffect","touron","firebase","country","setCountry","city","setCity","tour","setTour","errorMessage","setErrorMessage","getCountry","get","countryResponse","data","getCity","citResponse","getTour","tourResponse"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAKA,gBAAe,YAAM;AAAA,kBACWH,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,MACZI,OADY;AAAA,MACHC,UADG;;AAAA,mBAEKL,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,MAEZM,IAFY;AAAA,MAENC,OAFM;;AAAA,mBAGKP,QAAQ,CAAC,EAAD,CAHb;AAAA;AAAA,MAGZQ,IAHY;AAAA,MAGNC,OAHM;;AAAA,mBAIqBT,QAAQ,CAAC,EAAD,CAJ7B;AAAA;AAAA,MAIZU,YAJY;AAAA,MAIEC,eAJF;;AAMnB,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEeV,MAAM,CAACW,GAAP,CAAW,UAAX,CAFf;;AAAA;AAETC,YAAAA,eAFS;AAIfT,YAAAA,UAAU,CAACS,eAAe,CAACC,IAAjB,CAAV;AAJe;AAAA;;AAAA;AAAA;AAAA;AAOfJ,YAAAA,eAAe,CAAC,sBAAD,CAAf;;AAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAWA,MAAMK,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEcd,MAAM,CAACW,GAAP,CAAW,OAAX,CAFd;;AAAA;AAENI,YAAAA,WAFM;AAIZV,YAAAA,OAAO,CAACU,WAAW,CAACF,IAAb,CAAP;AAJY;AAAA;;AAAA;AAAA;AAAA;AAMZJ,YAAAA,eAAe,CAAC,sBAAD,CAAf;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAUA,MAAMO,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEehB,MAAM,CAACW,GAAP,CAAW,OAAX,CAFf;;AAAA;AAENM,YAAAA,YAFM;AAGZV,YAAAA,OAAO,CAACU,YAAY,CAACJ,IAAd,CAAP;AAHY;AAAA;;AAAA;AAAA;AAAA;AAKZJ,YAAAA,eAAe,CAAC,sBAAD,CAAf;;AALY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AASAV,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,OAAO,IAAIJ,UAAU,EAAd,EAAkBM,OAAO,EAAhC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,CAACd,OAAD,EAAUE,IAAV,EAAgBE,IAAhB,EAAsBE,YAAtB,CAAP;AACD,CAzCD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport touron from \"../api/touron\";\nimport * as firebase from \"firebase\";\n\n\n\n\nexport default () => {\n  const [country, setCountry] = useState([]);\n  const [city, setCity] = useState([]);\n  const [tour, setTour] = useState([]);\n  const [errorMessage, setErrorMessage] = useState([]);\n\n  const getCountry = async () => {\n    try {\n      const countryResponse = await touron.get(\"/country\");\n\n      setCountry(countryResponse.data);\n      // console.log(citResponse.data);\n    } catch (err) {\n      setErrorMessage(\"Something went wrong\");\n    }\n  };\n\n  const getCity = async () => {\n    try {\n      const citResponse = await touron.get(\"/city\");\n\n      setCity(citResponse.data);\n    } catch (err) {\n      setErrorMessage(\"Something went wrong\");\n    }\n  };\n\n  const getTour = async () => {\n    try {\n      const tourResponse = await touron.get(\"/tour\");\n      setTour(tourResponse.data);\n    } catch (err) {\n      setErrorMessage(\"Something went wrong\");\n    }\n  };\n\n  useEffect(() => {\n    getCity(), getCountry(), getTour();\n  }, []);\n\n  return [country, city, tour, errorMessage];\n};\n"]},"metadata":{},"sourceType":"module"}