{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/App.js\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nYellowBox.ignoreWarnings([\"Remote debugger\"]);\nYellowBox.ignoreWarnings([\"Setting a timer\"]);\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport DrawerContent from \"./src/Screens/DrawerContent\";\nimport { RootStackScreen } from \"./src/Screens/RootStackScreen\";\nimport { AuthContext } from \"./src/context/AuthContext\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport Animated from \"react-native-reanimated\";\nimport * as Font from \"expo-font\";\nimport firebase from \"firebase\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport MyRequestScreen from \"./src/Screens/AccountScreens/MyRequestScreen\";\nimport MyPlansScreen from \"./src/Screens/AccountScreens/MyPlansScreen\";\nimport ProfileScreen from \"./src/Screens/AccountScreens/ProfileScreen\";\nimport VisaDetailsScreen from \"./src/Screens/AccountScreens/VisaDetailsScreen\";\nimport WishListScreen from \"./src/Screens/AccountScreens/WishListScreen\";\nimport RequestInner from \"./src/Screens/AccountScreens/RequestInner\";\nimport VisaInner from \"./src/Screens/AccountScreens/VisaInner\";\nimport touron from \"./src/api/touron\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCCZ2bo_iPbtvarsADQe84qX2s9cWPMq3U\",\n  authDomain: \"touronapp-248e4.firebaseapp.com\",\n  databaseURL: \"https://touronapp-248e4.firebaseio.com\",\n  projectId: \"touronapp-248e4\",\n  storageBucket: \"touronapp-248e4.appspot.com\",\n  messagingSenderId: \"813320271971\",\n  appId: \"1:813320271971:web:5a10483e3c11bc953aa056\",\n  measurementId: \"G-KCPSW6WFC9\"\n};\nfirebase.initializeApp(firebaseConfig);\nvar Drawer = createDrawerNavigator();\n\nvar App = function App(props) {\n  console.log(props.exp.notification, \"popoopppopopoopooppo\");\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoggedIn = _useState4[0],\n      setIsLoggedIn = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isAdmin = _useState6[0],\n      setIsAdmin = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tours = _useState8[0],\n      setTour = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      countries = _useState10[0],\n      setCountries = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      appLoading = _useState12[0],\n      setAppLoading = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      cities = _useState14[0],\n      setCities = _useState14[1];\n\n  console.log(isAdmin, \"isAdmin\");\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      getTours();\n      getCities();\n      firebase.auth().onAuthStateChanged(function (user) {\n        console.log(user, \"MANIVASAGAM\");\n        setUser(user);\n      });\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  var getTours = function getTours() {\n    var tourResponse;\n    return _regeneratorRuntime.async(function getTours$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(touron.get(\"/tour\"));\n\n          case 2:\n            tourResponse = _context.sent;\n            console.log(tourResponse.data, \"lpllplpll\");\n            setTour(tourResponse.data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getCountries = function getCountries() {\n    var countryResponse;\n    return _regeneratorRuntime.async(function getCountries$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(touron.get(\"/country\"));\n\n          case 2:\n            countryResponse = _context2.sent;\n            console.log(countryResponse.data, \"lpllplpll\");\n            setCountries(countryResponse.data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getCities = function getCities() {\n    var cityResponse;\n    return _regeneratorRuntime.async(function getCities$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(touron.get(\"/city\"));\n\n          case 2:\n            cityResponse = _context3.sent;\n            console.log(cityResponse.data, \"lpllplpll\");\n            setCities(cityResponse.data);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getToken = function getToken() {\n    var data, userToken;\n    return _regeneratorRuntime.async(function getToken$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n          case 3:\n            data = _context4.sent;\n            userToken = JSON.parse(data);\n            console.log(userToken, \"TOKEnhdhdhdhdhhdhddh\");\n\n            if (userToken !== null) {\n              setUser(userToken);\n              setIsLoggedIn(true);\n            }\n\n            _context4.next = 12;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var showImage = function showImage() {\n    setTimeout(function () {\n      setAppLoading(false);\n    }, 2000);\n  };\n\n  var getUserData = function getUserData() {\n    if (user !== null) {\n      firebase.database().ref(\"userGeneralInfo/\" + user.uid).on(\"value\", function (data) {\n        if (data.val() !== null) {\n          var val = data.val();\n          console.log(val, \"VALUE\");\n          setIsAdmin(val.admin);\n        }\n      });\n    }\n  };\n\n  useEffect(function () {\n    showImage();\n  });\n  useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      getToken();\n      getCountries();\n      getUserData();\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }), React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn,\n      user: user,\n      setUser: setUser,\n      tours: tours,\n      cities: cities,\n      countries: countries\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Navigator, {\n    drawerType: \"slides\",\n    screenOptions: {\n      gestureEnabled: true\n    },\n    edgeWidth: 0,\n    drawerStyle: {\n      backgroundColor: \"#000000\",\n      width: WIDTH * 0.75,\n      opacity: 0.6,\n      zIndex: 2\n    },\n    overlayColor: 0,\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerContent, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 39\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"HomeDrawer\",\n    component: RootStackScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"MyRequest\",\n    component: MyRequestScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"MyPlans\",\n    component: MyPlansScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Visa\",\n    component: VisaDetailsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"VisaInner\",\n    component: VisaInner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"WishList\",\n    component: WishListScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"RequestInner\",\n    component: RequestInner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;\n{}","map":{"version":3,"sources":["/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/App.js"],"names":["YellowBox","ignoreWarnings","React","useState","useEffect","useMemo","NavigationContainer","createDrawerNavigator","DrawerContent","RootStackScreen","AuthContext","WIDTH","Dimensions","get","width","HEIGHT","height","AsyncStorage","Animated","Font","firebase","createStackNavigator","MyRequestScreen","MyPlansScreen","ProfileScreen","VisaDetailsScreen","WishListScreen","RequestInner","VisaInner","touron","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","Drawer","App","props","console","log","exp","notification","user","setUser","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","tours","setTour","countries","setCountries","appLoading","setAppLoading","cities","setCities","mounted","getTours","getCities","auth","onAuthStateChanged","tourResponse","data","getCountries","countryResponse","cityResponse","getToken","getItem","userToken","JSON","parse","showImage","setTimeout","getUserData","database","ref","uid","on","val","admin","gestureEnabled","backgroundColor","opacity","zIndex"],"mappings":"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","sourcesContent":["import { YellowBox, Dimensions, View, Image, StatusBar } from \"react-native\";\nYellowBox.ignoreWarnings([\"Remote debugger\"]);\nYellowBox.ignoreWarnings([\"Setting a timer\"]);\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport DrawerContent from \"./src/Screens/DrawerContent\";\nimport { RootStackScreen } from \"./src/Screens/RootStackScreen\";\nimport { AuthContext } from \"./src/context/AuthContext\";\nconst WIDTH = Dimensions.get(\"window\").width;\nconst HEIGHT = Dimensions.get(\"window\").height;\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport Animated from \"react-native-reanimated\";\nimport * as Font from \"expo-font\";\n\nimport firebase from \"firebase\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport MyRequestScreen from \"./src/Screens/AccountScreens/MyRequestScreen\";\nimport MyPlansScreen from \"./src/Screens/AccountScreens/MyPlansScreen\";\nimport ProfileScreen from \"./src/Screens/AccountScreens/ProfileScreen\";\nimport VisaDetailsScreen from \"./src/Screens/AccountScreens/VisaDetailsScreen\";\nimport WishListScreen from \"./src/Screens/AccountScreens/WishListScreen\";\nimport RequestInner from \"./src/Screens/AccountScreens/RequestInner\";\nimport VisaInner from \"./src/Screens/AccountScreens/VisaInner\";\nimport touron from \"./src/api/touron\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCCZ2bo_iPbtvarsADQe84qX2s9cWPMq3U\",\n  authDomain: \"touronapp-248e4.firebaseapp.com\",\n  databaseURL: \"https://touronapp-248e4.firebaseio.com\",\n  projectId: \"touronapp-248e4\",\n  storageBucket: \"touronapp-248e4.appspot.com\",\n  messagingSenderId: \"813320271971\",\n  appId: \"1:813320271971:web:5a10483e3c11bc953aa056\",\n  measurementId: \"G-KCPSW6WFC9\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst Drawer = createDrawerNavigator();\n\nconst App = (props) => {\n  console.log(props.exp.notification, \"popoopppopopoopooppo\");\n  const [user, setUser] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\n  // const [fontLoaded, setFont] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [tours, setTour] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [appLoading, setAppLoading] = useState(true);\n\n  const [cities, setCities] = useState([]);\n\n  console.log(isAdmin, \"isAdmin\");\n\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      getTours();\n      getCities();\n      firebase.auth().onAuthStateChanged((user) => {\n        console.log(user, \"MANIVASAGAM\");\n        setUser(user);\n      });\n    }\n    return () => (mounted = false);\n  }, []);\n\n  const getTours = async () => {\n    const tourResponse = await touron.get(`/tour`);\n    console.log(tourResponse.data, \"lpllplpll\");\n    setTour(tourResponse.data);\n  };\n\n  const getCountries = async () => {\n    const countryResponse = await touron.get(`/country`);\n    console.log(countryResponse.data, \"lpllplpll\");\n    setCountries(countryResponse.data);\n  };\n  const getCities = async () => {\n    const cityResponse = await touron.get(`/city`);\n    console.log(cityResponse.data, \"lpllplpll\");\n    setCities(cityResponse.data);\n  };\n\n  const getToken = async () => {\n    try {\n      const data = await AsyncStorage.getItem(\"userToken\");\n      const userToken = JSON.parse(data);\n      console.log(userToken, \"TOKEnhdhdhdhdhhdhddh\");\n      if (userToken !== null) {\n        setUser(userToken);\n        setIsLoggedIn(true);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const showImage = () => {\n    setTimeout(() => {\n      setAppLoading(false);\n    }, 2000);\n  };\n\n  const getUserData = () => {\n    // console.log(user, \"DINESHSHSHSHSHS\");\n    if (user !== null) {\n      firebase\n        .database()\n        .ref(`userGeneralInfo/${user.uid}`)\n        .on(\"value\", (data) => {\n          if (data.val() !== null) {\n            let val = data.val();\n            console.log(val, \"VALUE\");\n            setIsAdmin(val.admin);\n          }\n        });\n    }\n  };\n\n  useEffect(() => {\n    showImage();\n  });\n\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      getToken();\n      getCountries();\n\n      getUserData();\n    }\n    return () => (mounted = false);\n  }, []);\n\n  // if (appLoading) {\n  //   return (\n  //     <View\n  //       style={{\n  //         backgroundColor: \"white\",\n  //         flex: 1,\n  //         alignItems: \"center\",\n  //         justifyContent: \"center\",\n  //       }}\n  //     >\n  //       <Image\n  //         source={require(\"./assets/logo.jpeg\")}\n  //         style={{ width: WIDTH, height: HEIGHT / 2 }}\n  //       />\n  //     </View>\n  //   );\n  // }\n\n  return (\n    <>\n      <StatusBar />\n      <AuthContext.Provider\n        value={{\n          isLoggedIn,\n          setIsLoggedIn,\n          user,\n          setUser,\n          tours,\n          cities,\n          countries,\n        }}\n      >\n        <NavigationContainer>\n          <Drawer.Navigator\n            drawerType=\"slides\"\n            screenOptions={{\n              gestureEnabled: true,\n            }}\n            edgeWidth={0}\n            drawerStyle={{\n              backgroundColor: \"#000000\",\n              width: WIDTH * 0.75,\n              opacity: 0.6,\n              zIndex: 2,\n            }}\n            overlayColor={0}\n            drawerContent={(props) => <DrawerContent {...props} />}\n          >\n            <Drawer.Screen name=\"HomeDrawer\" component={RootStackScreen} />\n            <Drawer.Screen name=\"MyRequest\" component={MyRequestScreen} />\n            <Drawer.Screen name=\"MyPlans\" component={MyPlansScreen} />\n            <Drawer.Screen name=\"Profile\" component={ProfileScreen} />\n            <Drawer.Screen name=\"Visa\" component={VisaDetailsScreen} />\n            <Drawer.Screen name=\"VisaInner\" component={VisaInner} />\n            <Drawer.Screen name=\"WishList\" component={WishListScreen} />\n            <Drawer.Screen name=\"RequestInner\" component={RequestInner} />\n          </Drawer.Navigator>\n        </NavigationContainer>\n      </AuthContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n{\n  /* <Drawer.Screen name=\"HomeDrawer\" component={RootStackScreen} />\n<Drawer.Screen name=\"MyRequest\" component={MyRequestScreen} />\n<Drawer.Screen name=\"MyPlans\" component={MyPlansScreen} />\n<Drawer.Screen name=\"Profile\" component={ProfileScreen} />\n<Drawer.Screen name=\"Visa\" component={VisaDetailsScreen} />\n<Drawer.Screen name=\"VisaInner\" component={VisaInner} />\n<Drawer.Screen name=\"WishList\" component={WishListScreen} />\n<Drawer.Screen name=\"Reque */\n}\n"]},"metadata":{},"sourceType":"module"}