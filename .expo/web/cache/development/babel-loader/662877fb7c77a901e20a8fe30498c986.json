{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/AccountScreens/PromotionPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport * as firebase from \"firebase\";\nimport { Spinner } from \"native-base\";\n\nvar PromotionPage = function PromotionPage(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      body = _useState6[0],\n      setBody = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loaded = _useState8[0],\n      setLoaded = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      finishMessage = _useState10[0],\n      setFinishMessage = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      err = _useState12[0],\n      setErr = _useState12[1];\n\n  var getExpoId = function getExpoId() {\n    var user = [];\n    firebase.database().ref(\"/userGeneralInfo\").on(\"value\", function (data) {\n      data.forEach(function (c) {\n        user.push(c.val().pushNotificationToken);\n      });\n    });\n    setUsers(user);\n  };\n\n  var send = function send() {\n    if (title != \" \" && body != \"\") {\n      setErr(false);\n      setLoaded(true);\n\n      try {\n        users.forEach(function (u) {\n          console.log(u, \"iowkjbcb\");\n          sendPushNotification(u);\n        });\n        setLoaded(false);\n        setFinishMessage(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    setErr(true);\n  };\n\n  var sendPushNotification = function sendPushNotification(expoToken) {\n    var messages;\n    return _regeneratorRuntime.async(function sendPushNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(expoToken, \"messag\");\n            messages = {\n              to: expoToken,\n              sound: \"default\",\n              title: title,\n              body: body\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"https://exp.host/--/api/v2/push/send\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Accept-encoding\": \"gzip, deflate\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(messages)\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getExpoId();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      backgroundColor: \"#81ecec\",\n      shadowColor: \"red\",\n      shadowOpacity: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: HEIGHT / 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      fontFamily: \"Andika\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Promotional page\")), React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Title\",\n    keyboardType: \"visible-password\",\n    keyboardAppearance: \"dark\",\n    value: title,\n    keyboardType: \"email-address\",\n    onChangeText: function onChangeText(value) {\n      return setTitle(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    value: body,\n    style: styles.input,\n    placeholder: \"Body\",\n    keyboardType: \"visible-password\",\n    keyboardAppearance: \"dark\",\n    keyboardType: \"email-address\",\n    onChangeText: function onChangeText(value) {\n      return setBody(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  })), err ? React.createElement(Text, {\n    style: {\n      fontFamily: \"Avenir\",\n      color: \"red\",\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \" \", \"Both fields are required\") : null, React.createElement(View, {\n    style: styles.otpButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, loaded ? React.createElement(View, {\n    style: {\n      paddingVertical: -10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, React.createElement(Spinner, {\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  })) : React.createElement(React.Fragment, null, finishMessage ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setFinishMessage(false);\n      setTitle(\"\");\n      setBody(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.optButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, \" \", \"Notification Has been sent to all users\")) : React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      send();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.optButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, \"Send Notification\"))))));\n};\n\nexport default PromotionPage;\nvar styles = new StyleSheet.create({\n  optButtonText: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"white\",\n    fontSize: 16,\n    fontFamily: \"Andika\"\n  },\n  otpButtonContainer: {\n    marginBottom: HEIGHT / 8,\n    backgroundColor: \"black\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\"\n  },\n  input: {\n    marginHorizontal: 20,\n    width: WIDTH * 0.8,\n    height: 60,\n    color: \"white\",\n    fontFamily: \"Andika\"\n  },\n  inputContainer: {\n    height: 60,\n    borderRadius: 10,\n    backgroundColor: \"#0005\",\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["/Users/aravshrimath/Documents/Mobile Application/touron-mobile-app/src/Screens/AccountScreens/PromotionPage.js"],"names":["React","useState","useEffect","WIDTH","Dimensions","get","width","HEIGHT","height","firebase","Spinner","PromotionPage","props","users","setUsers","title","setTitle","body","setBody","loaded","setLoaded","finishMessage","setFinishMessage","err","setErr","getExpoId","user","database","ref","on","data","forEach","c","push","val","pushNotificationToken","send","u","console","log","sendPushNotification","expoToken","messages","to","sound","fetch","method","headers","Accept","JSON","stringify","flex","alignItems","backgroundColor","shadowColor","shadowOpacity","marginTop","fontSize","fontFamily","justifyContent","styles","inputContainer","input","value","color","otpButtonContainer","paddingVertical","optButtonText","StyleSheet","create","textAlign","marginBottom","borderRadius","alignContent","position","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Dimensions,\n  StyleSheet,\n  TextInput,\n} from \"react-native\";\nconst WIDTH = Dimensions.get(\"window\").width;\nconst HEIGHT = Dimensions.get(\"window\").height;\nimport * as firebase from \"firebase\";\nimport { Spinner } from \"native-base\";\n\nconst PromotionPage = (props) => {\n  // console.log(props, \"props\");\n  const [users, setUsers] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const [finishMessage, setFinishMessage] = useState(false);\n  const [err, setErr] = useState(false);\n\n  // console.log(users, \"usedscwdvr\");\n  // console.log(title, body);\n  const getExpoId = () => {\n    let user = [];\n    firebase\n      .database()\n      .ref(\"/userGeneralInfo\")\n      .on(\"value\", (data) => {\n        data.forEach((c) => {\n          // console.log(c.val());\n          user.push(c.val().pushNotificationToken);\n        });\n      });\n\n    setUsers(user);\n  };\n\n  const send = () => {\n    if (title != \" \" && body != \"\") {\n      setErr(false);\n      setLoaded(true);\n      try {\n        users.forEach((u) => {\n          console.log(u, \"iowkjbcb\");\n          sendPushNotification(u);\n        });\n        setLoaded(false);\n        setFinishMessage(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    setErr(true);\n  };\n\n  const sendPushNotification = async (expoToken) => {\n    console.log(expoToken, \"messag\");\n    const messages = {\n      to: expoToken,\n      sound: \"default\",\n      title: title,\n      body: body,\n      // data: { data: \"goes here\" },\n    };\n\n    await fetch(\"https://exp.host/--/api/v2/push/send\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Accept-encoding\": \"gzip, deflate\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(messages),\n    });\n  };\n\n  useEffect(() => {\n    getExpoId();\n  }, []);\n  return (\n    <View\n      style={{\n        flex: 1,\n        // justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#81ecec\",\n        shadowColor: \"red\",\n        shadowOpacity: 1,\n      }}\n    >\n      <View style={{ marginTop: HEIGHT / 10 }}>\n        <Text style={{ fontSize: 30, fontFamily: \"Andika\" }}>\n          Promotional page\n        </Text>\n      </View>\n      <View style={{ alignItems: \"center\", justifyContent: \"center\", flex: 1 }}>\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Title\"\n            keyboardType=\"visible-password\"\n            keyboardAppearance=\"dark\"\n            value={title}\n            keyboardType=\"email-address\"\n            onChangeText={(value) => setTitle(value)}\n          />\n        </View>\n\n        <View style={styles.inputContainer}>\n          <TextInput\n            value={body}\n            style={styles.input}\n            placeholder=\"Body\"\n            keyboardType=\"visible-password\"\n            keyboardAppearance=\"dark\"\n            keyboardType=\"email-address\"\n            onChangeText={(value) => setBody(value)}\n          />\n        </View>\n        {err ? (\n          <Text style={{ fontFamily: \"Avenir\", color: \"red\", fontSize: 20 }}>\n            {\" \"}\n            Both fields are required\n          </Text>\n        ) : null}\n        <View style={styles.otpButtonContainer}>\n          {loaded ? (\n            <View style={{ paddingVertical: -10 }}>\n              <Spinner color=\"white\" />\n            </View>\n          ) : (\n            <>\n              {finishMessage ? (\n                <TouchableOpacity\n                  onPress={() => {\n                    setFinishMessage(false);\n                    setTitle(\"\");\n                    setBody(\"\");\n                  }}\n                >\n                  <Text style={styles.optButtonText}>\n                    {\" \"}\n                    Notification Has been sent to all users\n                  </Text>\n                </TouchableOpacity>\n              ) : (\n                <TouchableOpacity\n                  onPress={() => {\n                    send();\n                  }}\n                >\n                  <Text style={styles.optButtonText}>Send Notification</Text>\n                </TouchableOpacity>\n              )}\n            </>\n          )}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default PromotionPage;\n\nconst styles = new StyleSheet.create({\n  optButtonText: {\n    textAlign: \"center\",\n    paddingVertical: 20,\n    color: \"white\",\n    fontSize: 16,\n    fontFamily: \"Andika\",\n    //  fontWeight: \"bold\",\n  },\n  otpButtonContainer: {\n    marginBottom: HEIGHT / 8,\n    backgroundColor: \"black\",\n    borderRadius: 10,\n    width: WIDTH * 0.9,\n    alignContent: \"center\",\n    position: \"relative\",\n  },\n  input: {\n    marginHorizontal: 20,\n    width: WIDTH * 0.8,\n    height: 60,\n    color: \"white\",\n    fontFamily: \"Andika\",\n  },\n  inputContainer: {\n    height: 60,\n    borderRadius: 10,\n    backgroundColor: \"#0005\",\n    marginBottom: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}